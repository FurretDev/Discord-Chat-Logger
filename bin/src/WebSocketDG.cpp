// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Sys
#include <Sys.h>
#endif
#ifndef INCLUDED_WebSocketDG
#include <WebSocketDG.h>
#endif
#ifndef INCLUDED_WebhookSender
#include <WebhookSender.h>
#endif
#ifndef INCLUDED_haxe_EntryPoint
#include <haxe/EntryPoint.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_Timer
#include <haxe/Timer.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_format_JsonParser
#include <haxe/format/JsonParser.h>
#endif
#ifndef INCLUDED_haxe_format_JsonPrinter
#include <haxe/format/JsonPrinter.h>
#endif
#ifndef INCLUDED_haxe_http_HttpBase
#include <haxe/http/HttpBase.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_BytesOutput
#include <haxe/io/BytesOutput.h>
#endif
#ifndef INCLUDED_haxe_io_Encoding
#include <haxe/io/Encoding.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <haxe/io/Output.h>
#endif
#ifndef INCLUDED_haxe_ws_MessageType
#include <haxe/ws/MessageType.h>
#endif
#ifndef INCLUDED_haxe_ws_WebSocket
#include <haxe/ws/WebSocket.h>
#endif
#ifndef INCLUDED_haxe_ws_WebSocketCommon
#include <haxe/ws/WebSocketCommon.h>
#endif
#ifndef INCLUDED_hxdiscord_utils_MimeResolver
#include <hxdiscord/utils/MimeResolver.h>
#endif
#ifndef INCLUDED_sys_Http
#include <sys/Http.h>
#endif
#ifndef INCLUDED_sys_db_Connection
#include <sys/db/Connection.h>
#endif
#ifndef INCLUDED_sys_db_ResultSet
#include <sys/db/ResultSet.h>
#endif
#ifndef INCLUDED_sys_db_Sqlite
#include <sys/db/Sqlite.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif
#ifndef INCLUDED_sys_thread__Thread_HaxeThread
#include <sys/thread/_Thread/HaxeThread.h>
#endif
#ifndef INCLUDED_tink__Url_Url_Impl_
#include <tink/_Url/Url_Impl_.h>
#endif
#ifndef INCLUDED_tink_chunk_ChunkObject
#include <tink/chunk/ChunkObject.h>
#endif
#ifndef INCLUDED_tink_core_LinkObject
#include <tink/core/LinkObject.h>
#endif
#ifndef INCLUDED_tink_core_Outcome
#include <tink/core/Outcome.h>
#endif
#ifndef INCLUDED_tink_core__Future_FutureObject
#include <tink/core/_Future/FutureObject.h>
#endif
#ifndef INCLUDED_tink_http_Fetch
#include <tink/http/Fetch.h>
#endif
#ifndef INCLUDED_tink_http_Message
#include <tink/http/Message.h>
#endif
#ifndef INCLUDED_tink_http__Fetch_FetchResponse_Impl_
#include <tink/http/_Fetch/FetchResponse_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_28_startTheThing,"WebSocketDG","startTheThing",0x23b45f5b,"WebSocketDG.startTheThing","WebSocketDG.hx",28,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_32_startTheThing,"WebSocketDG","startTheThing",0x23b45f5b,"WebSocketDG.startTheThing","WebSocketDG.hx",32,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_36_startTheThing,"WebSocketDG","startTheThing",0x23b45f5b,"WebSocketDG.startTheThing","WebSocketDG.hx",36,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_42_startTheThing,"WebSocketDG","startTheThing",0x23b45f5b,"WebSocketDG.startTheThing","WebSocketDG.hx",42,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_47_startTheThing,"WebSocketDG","startTheThing",0x23b45f5b,"WebSocketDG.startTheThing","WebSocketDG.hx",47,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_24_startTheThing,"WebSocketDG","startTheThing",0x23b45f5b,"WebSocketDG.startTheThing","WebSocketDG.hx",24,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_51_stopEverything,"WebSocketDG","stopEverything",0x8b942e79,"WebSocketDG.stopEverything","WebSocketDG.hx",51,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_65_incomingMessages,"WebSocketDG","incomingMessages",0x57f5e636,"WebSocketDG.incomingMessages","WebSocketDG.hx",65,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_247_incomingMessages,"WebSocketDG","incomingMessages",0x57f5e636,"WebSocketDG.incomingMessages","WebSocketDG.hx",247,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_250_incomingMessages,"WebSocketDG","incomingMessages",0x57f5e636,"WebSocketDG.incomingMessages","WebSocketDG.hx",250,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_168_incomingMessages,"WebSocketDG","incomingMessages",0x57f5e636,"WebSocketDG.incomingMessages","WebSocketDG.hx",168,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_284_incomingMessages,"WebSocketDG","incomingMessages",0x57f5e636,"WebSocketDG.incomingMessages","WebSocketDG.hx",284,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_82_incomingMessages,"WebSocketDG","incomingMessages",0x57f5e636,"WebSocketDG.incomingMessages","WebSocketDG.hx",82,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_79_incomingMessages,"WebSocketDG","incomingMessages",0x57f5e636,"WebSocketDG.incomingMessages","WebSocketDG.hx",79,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_303_canILogThisChannel,"WebSocketDG","canILogThisChannel",0x5df1ef5e,"WebSocketDG.canILogThisChannel","WebSocketDG.hx",303,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_306_downloadFile,"WebSocketDG","downloadFile",0xb62a8288,"WebSocketDG.downloadFile","WebSocketDG.hx",306,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_309_downloadFile,"WebSocketDG","downloadFile",0xb62a8288,"WebSocketDG.downloadFile","WebSocketDG.hx",309,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_16_boot,"WebSocketDG","boot",0xa4393896,"WebSocketDG.boot","WebSocketDG.hx",16,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_17_boot,"WebSocketDG","boot",0xa4393896,"WebSocketDG.boot","WebSocketDG.hx",17,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_18_boot,"WebSocketDG","boot",0xa4393896,"WebSocketDG.boot","WebSocketDG.hx",18,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_19_boot,"WebSocketDG","boot",0xa4393896,"WebSocketDG.boot","WebSocketDG.hx",19,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_20_boot,"WebSocketDG","boot",0xa4393896,"WebSocketDG.boot","WebSocketDG.hx",20,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_21_boot,"WebSocketDG","boot",0xa4393896,"WebSocketDG.boot","WebSocketDG.hx",21,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_22_boot,"WebSocketDG","boot",0xa4393896,"WebSocketDG.boot","WebSocketDG.hx",22,0x9ca76e74)
HX_LOCAL_STACK_FRAME(_hx_pos_82c2c2b563c65d2c_23_boot,"WebSocketDG","boot",0xa4393896,"WebSocketDG.boot","WebSocketDG.hx",23,0x9ca76e74)

void WebSocketDG_obj::__construct() { }

Dynamic WebSocketDG_obj::__CreateEmpty() { return new WebSocketDG_obj; }

void *WebSocketDG_obj::_hx_vtable = 0;

Dynamic WebSocketDG_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< WebSocketDG_obj > _hx_result = new WebSocketDG_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool WebSocketDG_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x23d64bca;
}

 ::haxe::ws::WebSocket WebSocketDG_obj::ws;

 ::haxe::Timer WebSocketDG_obj::hb_timer;

int WebSocketDG_obj::sequence;

::String WebSocketDG_obj::target_id;

 ::haxe::ds::StringMap WebSocketDG_obj::channel_names;

::String WebSocketDG_obj::server_name;

::String WebSocketDG_obj::resume_gateway_url;

::String WebSocketDG_obj::session_id;

int WebSocketDG_obj::interval;

bool WebSocketDG_obj::canResume;

void WebSocketDG_obj::startTheThing(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_28_startTheThing)
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(1)
            		void _hx_run( ::haxe::ws::MessageType m){
            			HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_32_startTheThing)
HXLINE(  32)			switch((int)(m->_hx_getIndex())){
            				case (int)0: {
            				}
            				break;
            				case (int)1: {
            					HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1,::String,content) HXARGC(0)
            					void _hx_run(){
            						HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_36_startTheThing)
HXLINE(  36)						::WebSocketDG_obj::incomingMessages(content);
            					}
            					HX_END_LOCAL_FUNC0((void))

HXLINE(  33)					::String content = m->_hx_getString(0);
HXLINE(  35)					::haxe::EntryPoint_obj::runInMainThread( ::Dynamic(new _hx_Closure_1(content)));
            				}
            				break;
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(0)
            		void _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_42_startTheThing)
HXLINE(  43)			::WebSocketDG_obj::hb_timer->stop();
HXLINE(  44)			::WebSocketDG_obj::ws = null();
HXLINE(  45)			::WebSocketDG_obj::startTheThing();
            		}
            		HX_END_LOCAL_FUNC0((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_4) HXARGC(1)
            		void _hx_run( ::Dynamic err){
            			HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_47_startTheThing)
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_24_startTheThing)
HXLINE(  25)		::Sys_obj::println(HX_("[Discord Chat Logger] Starting logger",24,86,54,e4));
HXLINE(  26)		::WebSocketDG_obj::target_id = ::sys::io::File_obj::getContent(HX_("guild_id_target.txt",2b,ed,39,4a));
HXLINE(  27)		::WebSocketDG_obj::ws =  ::haxe::ws::WebSocket_obj::__alloc( HX_CTX ,::WebSocketDG_obj::resume_gateway_url,null());
HXLINE(  28)		::WebSocketDG_obj::ws->onopen =  ::Dynamic(new _hx_Closure_0());
HXLINE(  31)		::WebSocketDG_obj::ws->onmessage =  ::Dynamic(new _hx_Closure_2());
HXLINE(  42)		::WebSocketDG_obj::ws->onclose =  ::Dynamic(new _hx_Closure_3());
HXLINE(  47)		::WebSocketDG_obj::ws->onerror =  ::Dynamic(new _hx_Closure_4());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(WebSocketDG_obj,startTheThing,(void))

void WebSocketDG_obj::stopEverything(){
            	HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_51_stopEverything)
HXLINE(  52)		::WebSocketDG_obj::ws->close();
HXLINE(  53)		::WebSocketDG_obj::hb_timer->stop();
HXLINE(  54)		::WebSocketDG_obj::ws = null();
HXLINE(  55)		::WebSocketDG_obj::hb_timer = null();
HXLINE(  56)		::WebSocketDG_obj::sequence = 0;
HXLINE(  57)		::WebSocketDG_obj::target_id = HX_("",00,00,00,00);
HXLINE(  58)		::WebSocketDG_obj::channel_names =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  59)		::WebSocketDG_obj::server_name = HX_("",00,00,00,00);
HXLINE(  60)		::WebSocketDG_obj::resume_gateway_url = HX_("wss://gateway.discord.gg/?v=10&encoding=json",11,02,1b,6a);
HXLINE(  61)		::WebSocketDG_obj::session_id = HX_("",00,00,00,00);
HXLINE(  62)		::WebSocketDG_obj::interval = 0;
HXLINE(  63)		::WebSocketDG_obj::canResume = false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(WebSocketDG_obj,stopEverything,(void))

void WebSocketDG_obj::incomingMessages(::String content){
            	HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_65_incomingMessages)
HXLINE(  67)		::Dynamic db = ::sys::db::Sqlite_obj::open(HX_("database.db",d1,1a,6a,a2));
HXLINE(  68)		 ::Dynamic JSON =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,content)->doParse();
HXLINE(  69)		::String t = ( (::String)(JSON->__Field(HX_("t",74,00,00,00),::hx::paccDynamic)) );
HXLINE(  70)		int s = ( (int)(JSON->__Field(HX_("s",73,00,00,00),::hx::paccDynamic)) );
HXLINE(  72)		 ::Dynamic d =  ::Dynamic(JSON->__Field(HX_("d",64,00,00,00),::hx::paccDynamic));
HXLINE(  74)		switch((int)(( (int)(JSON->__Field(HX_("op",21,61,00,00),::hx::paccDynamic)) ))){
            			case (int)0: {
HXLINE( 117)				::WebSocketDG_obj::sequence = s;
HXLINE( 119)				::String _hx_switch_0 = t;
            				if (  (_hx_switch_0==HX_("GUILD_CREATE",68,d3,47,49)) ){
HXLINE( 135)					goto _hx_goto_7;
            				}
            				if (  (_hx_switch_0==HX_("MESSAGE_CREATE",d4,ad,af,cf)) ){
HXLINE( 143)					if (::hx::IsEq( d->__Field(HX_("guild_id",27,82,bc,71),::hx::paccDynamic),::WebSocketDG_obj::target_id )) {
HXLINE( 148)						::haxe::Log_obj::trace( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic)),::hx::SourceInfo(HX_("src/WebSocketDG.hx",7f,7c,f1,91),148,HX_("WebSocketDG",8a,06,db,70),HX_("incomingMessages",d2,2b,e9,a5)));
HXLINE( 150)						::sys::db::Connection_obj::request(db,((HX_("CREATE TABLE IF NOT EXISTS channel_",a6,01,ac,c5) + ::Std_obj::string( ::Dynamic(d->__Field(HX_("channel_id",17,0d,9b,03),::hx::paccDynamic)))) + HX_(" (\r\n                                    USER_NAME VARCHAR(128),\r\n                                    USER_MESSAGE VARCHAR(4096),\r\n                                    USER_ID VARCHAR(64),\r\n                                    USER_MESSAGE_ID VARCHAR(128),\r\n                                    ATTACHMENTS_PATH VARCHAR(1024),\r\n                                    RESPONDING_TO VARCHAR(128),\r\n                                    ROW NUMBER\r\n                                    )",2e,1d,99,fb)));
HXLINE( 160)						::String _hx_tmp = ((HX_("INSERT INTO channel_",95,56,be,59) + ::Std_obj::string( ::Dynamic(d->__Field(HX_("channel_id",17,0d,9b,03),::hx::paccDynamic)))) + HX_(" \r\n                                (USER_NAME, USER_MESSAGE, USER_ID, USER_MESSAGE_ID, ATTACHMENTS_PATH, RESPONDING_TO, ROW) VALUES \r\n                                (\"",f6,8d,40,81));
HXLINE( 162)						::String _hx_tmp1 = (::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXLINE( 160)						::String _hx_tmp2 = ((_hx_tmp + (_hx_tmp1 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic))))) + HX_("\", \r\n                                \"",cf,98,00,86));
HXDLIN( 160)						::String _hx_tmp3 = ((_hx_tmp2 + ::Std_obj::string( ::Dynamic(d->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic)))) + HX_("\", \"",4c,c0,9a,16));
HXDLIN( 160)						::String _hx_tmp4 = ((_hx_tmp3 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("\", \"",4c,c0,9a,16));
HXDLIN( 160)						::String _hx_tmp5 = ((_hx_tmp4 + ::Std_obj::string( ::Dynamic(d->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("\", \"soon\", \r\n                                \"soon\", ( SELECT max( ROWID )+1 FROM channel_",e1,e8,65,bd));
HXDLIN( 160)						::sys::db::Connection_obj::request(db,((_hx_tmp5 + ::Std_obj::string( ::Dynamic(d->__Field(HX_("channel_id",17,0d,9b,03),::hx::paccDynamic)))) + HX_("))",e0,23,00,00)));
HXLINE( 167)						if (::hx::IsGreater(  ::Dynamic(d->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic),0 )) {
            							HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::Dynamic,d) HXARGC(0)
            							void _hx_run(){
            								HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            								void _hx_run(::String d){
            									HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_247_incomingMessages)
            								}
            								HX_END_LOCAL_FUNC1((void))

            								HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            								void _hx_run( ::Dynamic d){
            									HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_250_incomingMessages)
            								}
            								HX_END_LOCAL_FUNC1((void))

            								HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_168_incomingMessages)
HXLINE( 169)								::Array< ::Dynamic> bytes = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 170)								::Array< ::String > filenames = ::Array_obj< ::String >::__new(0);
HXLINE( 171)								{
HXLINE( 171)									int _g = 0;
HXDLIN( 171)									int _g1 = ( (int)( ::Dynamic(d->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic)) );
HXDLIN( 171)									while((_g < _g1)){
HXLINE( 171)										_g = (_g + 1);
HXDLIN( 171)										int i = (_g - 1);
HXLINE( 172)										bytes->push(::WebSocketDG_obj::downloadFile(( (::String)( ::Dynamic(d->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("url",6f,2b,59,00),::hx::paccDynamic)) )));
HXLINE( 173)										filenames->push( ::Dynamic( ::Dynamic(d->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)));
            									}
            								}
HXLINE( 176)								 ::sys::Http http = ::Main_obj::webhook->getHttp();
HXLINE( 177)								http->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("multipart/form-data; boundary=boundary",e8,7b,54,aa));
HXLINE( 178)								 ::haxe::io::BytesOutput BO =  ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE( 179)								BO->writeString(HX_("--boundary\n",80,30,91,d2),null());
HXLINE( 180)								BO->writeString(HX_("Content-Disposition: form-data; name=\"payload_json\"\n",a0,b0,c2,44),null());
HXLINE( 181)								BO->writeString(HX_("Content-Type: application-json",79,03,43,b6),null());
HXLINE( 182)								BO->writeString(HX_("\n\n",c0,08,00,00),null());
HXLINE( 183)								::cpp::VirtualArray attachments = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 184)								{
HXLINE( 184)									int _g2 = 0;
HXDLIN( 184)									int _g3 = filenames->length;
HXDLIN( 184)									while((_g2 < _g3)){
HXLINE( 184)										_g2 = (_g2 + 1);
HXDLIN( 184)										int i1 = (_g2 - 1);
HXLINE( 185)										attachments->push( ::Dynamic(::hx::Anon_obj::Create(2)
            											->setFixed(0,HX_("id",db,5b,00,00),i1)
            											->setFixed(1,HX_("filename",c7,2e,6a,77),filenames->__get(i1))));
            									}
            								}
HXLINE( 190)								if (::hx::IsEq( d->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic),HX_("",00,00,00,00) )) {
HXLINE( 191)									if (::Main_obj::showMessageUrl) {
HXLINE( 192)										if (::hx::IsNotNull( d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic) )) {
HXLINE( 193)											::String value = (::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 193)											::String value1 = (value + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic))));
HXDLIN( 193)											::String value2 = ((HX_("https://cdn.discordapp.com/avatars/",ec,61,7f,db) + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("/",2f,00,00,00));
HXDLIN( 193)											::String value3 = ((value2 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("avatar",19,80,5c,fa),::hx::paccDynamic)))) + HX_(".png",3b,2d,bd,1e));
HXLINE( 197)											::String value4 = (HX_("Replying to ",3d,7c,aa,7b) + ::Std_obj::string( ::Dynamic( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))));
HXLINE( 198)											::String value5 = (::Std_obj::string( ::Dynamic( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 198)											::String value6 = ((value5 + ::Std_obj::string( ::Dynamic( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic)))) + HX_(": ",a6,32,00,00));
HXLINE( 193)											 ::Dynamic replacer = null();
HXDLIN( 193)											::String space = null();
HXDLIN( 193)											BO->writeString(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(5)
            												->setFixed(0,HX_("attachments",30,df,33,e7),attachments)
            												->setFixed(1,HX_("content",39,8d,77,19),HX_(" ",20,00,00,00))
            												->setFixed(2,HX_("username",16,86,eb,20),value1)
            												->setFixed(3,HX_("avatar_url",09,71,c5,46),value3)
            												->setFixed(4,HX_("embeds",7a,90,cc,65),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            													->setFixed(0,HX_("fields",79,8e,8e,80),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(3)
            														->setFixed(0,HX_("inline",59,ca,3f,99),false)
            														->setFixed(1,HX_("value",71,7f,b8,31),(value6 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic)))))
            														->setFixed(2,HX_("name",4b,72,ff,48),value4)))))))),replacer,space),null());
            										}
            										else {
HXLINE( 206)											::String value7 = (::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 206)											::String value8 = (value7 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic))));
HXDLIN( 206)											::String value9 = ((HX_("https://cdn.discordapp.com/avatars/",ec,61,7f,db) + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("/",2f,00,00,00));
HXDLIN( 206)											 ::Dynamic replacer1 = null();
HXDLIN( 206)											::String space1 = null();
HXDLIN( 206)											BO->writeString(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(4)
            												->setFixed(0,HX_("attachments",30,df,33,e7),attachments)
            												->setFixed(1,HX_("content",39,8d,77,19),HX_(" ",20,00,00,00))
            												->setFixed(2,HX_("username",16,86,eb,20),value8)
            												->setFixed(3,HX_("avatar_url",09,71,c5,46),((value9 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("avatar",19,80,5c,fa),::hx::paccDynamic)))) + HX_(".png",3b,2d,bd,1e)))),replacer1,space1),null());
            										}
            									}
            									else {
HXLINE( 210)										::String value10 = (::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 210)										::String value11 = (value10 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic))));
HXDLIN( 210)										::String value12 = ((HX_("https://cdn.discordapp.com/avatars/",ec,61,7f,db) + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("/",2f,00,00,00));
HXDLIN( 210)										 ::Dynamic replacer2 = null();
HXDLIN( 210)										::String space2 = null();
HXDLIN( 210)										BO->writeString(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(4)
            											->setFixed(0,HX_("attachments",30,df,33,e7),attachments)
            											->setFixed(1,HX_("content",39,8d,77,19),HX_(" ",20,00,00,00))
            											->setFixed(2,HX_("username",16,86,eb,20),value11)
            											->setFixed(3,HX_("avatar_url",09,71,c5,46),((value12 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("avatar",19,80,5c,fa),::hx::paccDynamic)))) + HX_(".png",3b,2d,bd,1e)))),replacer2,space2),null());
            									}
            								}
            								else {
HXLINE( 214)									if (::Main_obj::showMessageUrl) {
HXLINE( 215)										if (::hx::IsNotNull( d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic) )) {
HXLINE( 216)											::String value13 = (::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 216)											::String value14 = (value13 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic))));
HXDLIN( 216)											::String value15 = ((HX_("https://cdn.discordapp.com/avatars/",ec,61,7f,db) + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("/",2f,00,00,00));
HXDLIN( 216)											::String value16 = ((value15 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("avatar",19,80,5c,fa),::hx::paccDynamic)))) + HX_(".png",3b,2d,bd,1e));
HXDLIN( 216)											::String value17 = ((HX_("`",60,00,00,00) + ::Std_obj::string( ::Dynamic(d->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic)))) + HX_("`",60,00,00,00));
HXLINE( 220)											::String value18 = (HX_("Replying to ",3d,7c,aa,7b) + ::Std_obj::string( ::Dynamic( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))));
HXLINE( 221)											::String value19 = (::Std_obj::string( ::Dynamic( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 221)											::String value20 = ((value19 + ::Std_obj::string( ::Dynamic( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic)))) + HX_(": ",a6,32,00,00));
HXLINE( 216)											 ::Dynamic replacer3 = null();
HXDLIN( 216)											::String space3 = null();
HXDLIN( 216)											BO->writeString(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(5)
            												->setFixed(0,HX_("attachments",30,df,33,e7),attachments)
            												->setFixed(1,HX_("content",39,8d,77,19),value17)
            												->setFixed(2,HX_("username",16,86,eb,20),value14)
            												->setFixed(3,HX_("avatar_url",09,71,c5,46),value16)
            												->setFixed(4,HX_("embeds",7a,90,cc,65),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            													->setFixed(0,HX_("fields",79,8e,8e,80),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(3)
            														->setFixed(0,HX_("inline",59,ca,3f,99),false)
            														->setFixed(1,HX_("value",71,7f,b8,31),(value20 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic)))))
            														->setFixed(2,HX_("name",4b,72,ff,48),value18)))))))),replacer3,space3),null());
            										}
            										else {
HXLINE( 229)											::String value21 = (::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 229)											::String value22 = (value21 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic))));
HXDLIN( 229)											::String value23 = ((HX_("https://cdn.discordapp.com/avatars/",ec,61,7f,db) + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("/",2f,00,00,00));
HXDLIN( 229)											::String value24 = ((value23 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("avatar",19,80,5c,fa),::hx::paccDynamic)))) + HX_(".png",3b,2d,bd,1e));
HXDLIN( 229)											 ::Dynamic replacer4 = null();
HXDLIN( 229)											::String space4 = null();
HXDLIN( 229)											BO->writeString(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(4)
            												->setFixed(0,HX_("attachments",30,df,33,e7),attachments)
            												->setFixed(1,HX_("content",39,8d,77,19),((HX_("`",60,00,00,00) + ::Std_obj::string( ::Dynamic(d->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic)))) + HX_("`",60,00,00,00)))
            												->setFixed(2,HX_("username",16,86,eb,20),value22)
            												->setFixed(3,HX_("avatar_url",09,71,c5,46),value24)),replacer4,space4),null());
            										}
            									}
            									else {
HXLINE( 233)										::String value25 = (::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 233)										::String value26 = (value25 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic))));
HXDLIN( 233)										::String value27 = ((HX_("https://cdn.discordapp.com/avatars/",ec,61,7f,db) + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("/",2f,00,00,00));
HXDLIN( 233)										::String value28 = ((value27 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("avatar",19,80,5c,fa),::hx::paccDynamic)))) + HX_(".png",3b,2d,bd,1e));
HXDLIN( 233)										 ::Dynamic replacer5 = null();
HXDLIN( 233)										::String space5 = null();
HXDLIN( 233)										BO->writeString(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(4)
            											->setFixed(0,HX_("attachments",30,df,33,e7),attachments)
            											->setFixed(1,HX_("content",39,8d,77,19),((HX_("`",60,00,00,00) + ::Std_obj::string( ::Dynamic(d->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic)))) + HX_("`",60,00,00,00)))
            											->setFixed(2,HX_("username",16,86,eb,20),value26)
            											->setFixed(3,HX_("avatar_url",09,71,c5,46),value28)),replacer5,space5),null());
            									}
            								}
HXLINE( 236)								{
HXLINE( 236)									int _g4 = 0;
HXDLIN( 236)									int _g5 = ( (int)( ::Dynamic(d->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic)) );
HXDLIN( 236)									while((_g4 < _g5)){
HXLINE( 236)										_g4 = (_g4 + 1);
HXDLIN( 236)										int i2 = (_g4 - 1);
HXLINE( 237)										BO->writeString(HX_("\n--boundary\n",b6,78,0b,64),null());
HXLINE( 238)										BO->writeString(( (::String)((((((HX_("Content-Disposition: form-data; name=\"files[",03,2a,e0,6d) + i2) + HX_("]\"; filename=\"",36,84,dc,08)) +  ::Dynamic(d->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i2)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) + HX_("\"",22,00,00,00)) + HX_("\n",0a,00,00,00))) ),null());
HXLINE( 239)										BO->writeString((HX_("Content-Type: ",f4,2b,e6,1d) + ::hxdiscord::utils::MimeResolver_obj::getMimeType(( (::String)( ::Dynamic(d->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i2)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) ))),null());
HXLINE( 240)										BO->writeString(HX_("\n\n",c0,08,00,00),null());
HXLINE( 241)										BO->writeFullBytes(bytes->__get(i2).StaticCast<  ::haxe::io::Bytes >(),0,bytes->__get(i2).StaticCast<  ::haxe::io::Bytes >()->length);
HXLINE( 242)										BO->writeString(HX_("\n",0a,00,00,00),null());
            									}
            								}
HXLINE( 244)								BO->writeString(HX_("--boundary--",2a,5e,79,6c),null());
HXLINE( 246)								http->setPostBytes(BO->getBytes());
HXLINE( 247)								http->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE( 250)								http->onError =  ::Dynamic(new _hx_Closure_1());
HXLINE( 254)								http->request(true);
            							}
            							HX_END_LOCAL_FUNC0((void))

HXLINE( 168)							::sys::thread::_Thread::HaxeThread_obj::create( ::Dynamic(new _hx_Closure_2(d)),false);
            						}
            						else {
            							HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_3, ::Dynamic,d, ::sys::Http,http) HXARGC(1)
            							void _hx_run(::String f){
            								HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_284_incomingMessages)
HXLINE( 285)								::haxe::Log_obj::trace(f,::hx::SourceInfo(HX_("src/WebSocketDG.hx",7f,7c,f1,91),285,HX_("WebSocketDG",8a,06,db,70),HX_("incomingMessages",d2,2b,e9,a5)));
HXLINE( 286)								 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN( 286)								::String _hx_tmp1 = http->get_responseData();
HXDLIN( 286)								_hx_tmp(_hx_tmp1,::hx::SourceInfo(HX_("src/WebSocketDG.hx",7f,7c,f1,91),286,HX_("WebSocketDG",8a,06,db,70),HX_("incomingMessages",d2,2b,e9,a5)));
HXLINE( 287)								::haxe::Log_obj::trace( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic)),::hx::SourceInfo(HX_("src/WebSocketDG.hx",7f,7c,f1,91),287,HX_("WebSocketDG",8a,06,db,70),HX_("incomingMessages",d2,2b,e9,a5)));
            							}
            							HX_END_LOCAL_FUNC1((void))

HXLINE( 259)							 ::sys::Http http = ::Main_obj::webhook->getHttp();
HXLINE( 260)							http->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE( 261)							::haxe::Log_obj::trace(HX_("ok",1c,61,00,00),::hx::SourceInfo(HX_("src/WebSocketDG.hx",7f,7c,f1,91),261,HX_("WebSocketDG",8a,06,db,70),HX_("incomingMessages",d2,2b,e9,a5)));
HXLINE( 262)							if (::Main_obj::showMessageUrl) {
HXLINE( 263)								if (::hx::IsNotNull( d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic) )) {
HXLINE( 264)									 ::sys::Http http1 = http;
HXDLIN( 264)									::String value = (::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 264)									::String value1 = (value + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic))));
HXDLIN( 264)									::String value2 = ((HX_("https://cdn.discordapp.com/avatars/",ec,61,7f,db) + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("/",2f,00,00,00));
HXDLIN( 264)									::String value3 = ((value2 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("avatar",19,80,5c,fa),::hx::paccDynamic)))) + HX_(".png",3b,2d,bd,1e));
HXDLIN( 264)									::String value4 = ((HX_("`",60,00,00,00) + ::Std_obj::string( ::Dynamic(d->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic)))) + HX_("`",60,00,00,00));
HXLINE( 268)									::String value5 = (HX_("Replying to ",3d,7c,aa,7b) + ::Std_obj::string( ::Dynamic( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))));
HXLINE( 269)									::String value6 = (::Std_obj::string( ::Dynamic( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 269)									::String value7 = ((value6 + ::Std_obj::string( ::Dynamic( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic)))) + HX_(": ",a6,32,00,00));
HXLINE( 264)									 ::Dynamic replacer = null();
HXDLIN( 264)									::String space = null();
HXDLIN( 264)									http1->setPostData(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(4)
            										->setFixed(0,HX_("content",39,8d,77,19),value4)
            										->setFixed(1,HX_("username",16,86,eb,20),value1)
            										->setFixed(2,HX_("avatar_url",09,71,c5,46),value3)
            										->setFixed(3,HX_("embeds",7a,90,cc,65),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            											->setFixed(0,HX_("fields",79,8e,8e,80),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(3)
            												->setFixed(0,HX_("inline",59,ca,3f,99),false)
            												->setFixed(1,HX_("value",71,7f,b8,31),(value7 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("referenced_message",81,ba,05,63),::hx::paccDynamic))->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic)))))
            												->setFixed(2,HX_("name",4b,72,ff,48),value5)))))))),replacer,space));
HXLINE( 275)									::haxe::Log_obj::trace(HX_("5",35,00,00,00),::hx::SourceInfo(HX_("src/WebSocketDG.hx",7f,7c,f1,91),275,HX_("WebSocketDG",8a,06,db,70),HX_("incomingMessages",d2,2b,e9,a5)));
            								}
            								else {
HXLINE( 277)									 ::sys::Http http2 = http;
HXDLIN( 277)									::String value8 = (::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 277)									::String value9 = (value8 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic))));
HXDLIN( 277)									::String value10 = ((HX_("https://cdn.discordapp.com/avatars/",ec,61,7f,db) + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("/",2f,00,00,00));
HXDLIN( 277)									::String value11 = ((value10 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("avatar",19,80,5c,fa),::hx::paccDynamic)))) + HX_(".png",3b,2d,bd,1e));
HXDLIN( 277)									 ::Dynamic replacer1 = null();
HXDLIN( 277)									::String space1 = null();
HXDLIN( 277)									http2->setPostData(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(3)
            										->setFixed(0,HX_("content",39,8d,77,19),((HX_("`",60,00,00,00) + ::Std_obj::string( ::Dynamic(d->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic)))) + HX_("`",60,00,00,00)))
            										->setFixed(1,HX_("username",16,86,eb,20),value9)
            										->setFixed(2,HX_("avatar_url",09,71,c5,46),value11)),replacer1,space1));
HXLINE( 278)									::haxe::Log_obj::trace(HX_("6",36,00,00,00),::hx::SourceInfo(HX_("src/WebSocketDG.hx",7f,7c,f1,91),278,HX_("WebSocketDG",8a,06,db,70),HX_("incomingMessages",d2,2b,e9,a5)));
            								}
            							}
            							else {
HXLINE( 281)								 ::sys::Http http3 = http;
HXDLIN( 281)								::String value12 = (::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("username",16,86,eb,20),::hx::paccDynamic))) + HX_("#",23,00,00,00));
HXDLIN( 281)								::String value13 = (value12 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("discriminator",9c,72,43,23),::hx::paccDynamic))));
HXDLIN( 281)								::String value14 = ((HX_("https://cdn.discordapp.com/avatars/",ec,61,7f,db) + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)))) + HX_("/",2f,00,00,00));
HXDLIN( 281)								::String value15 = ((value14 + ::Std_obj::string( ::Dynamic( ::Dynamic(d->__Field(HX_("author",8b,ea,7b,73),::hx::paccDynamic))->__Field(HX_("avatar",19,80,5c,fa),::hx::paccDynamic)))) + HX_(".png",3b,2d,bd,1e));
HXDLIN( 281)								 ::Dynamic replacer2 = null();
HXDLIN( 281)								::String space2 = null();
HXDLIN( 281)								http3->setPostData(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(3)
            									->setFixed(0,HX_("content",39,8d,77,19),((HX_("`",60,00,00,00) + ::Std_obj::string( ::Dynamic(d->__Field(HX_("content",39,8d,77,19),::hx::paccDynamic)))) + HX_("`",60,00,00,00)))
            									->setFixed(1,HX_("username",16,86,eb,20),value13)
            									->setFixed(2,HX_("avatar_url",09,71,c5,46),value15)),replacer2,space2));
HXLINE( 282)								::haxe::Log_obj::trace(HX_("clear msg ig?",af,33,64,93),::hx::SourceInfo(HX_("src/WebSocketDG.hx",7f,7c,f1,91),282,HX_("WebSocketDG",8a,06,db,70),HX_("incomingMessages",d2,2b,e9,a5)));
            							}
HXLINE( 284)							http->onError =  ::Dynamic(new _hx_Closure_3(d,http));
HXLINE( 289)							http->request(true);
            						}
            					}
HXLINE( 143)					goto _hx_goto_7;
            				}
            				if (  (_hx_switch_0==HX_("READY",43,d8,a8,64)) ){
HXLINE( 124)					::Sys_obj::println(HX_("[Discord Chat Logger] The logger has been started, all messages will be sent to the webhook",03,a7,15,3e));
HXLINE( 125)					::WebSocketDG_obj::session_id = ( (::String)(d->__Field(HX_("session_id",64,14,71,28),::hx::paccDynamic)) );
HXLINE( 126)					::WebSocketDG_obj::canResume = true;
HXLINE( 127)					{
HXLINE( 127)						int _g = 0;
HXDLIN( 127)						int _g1 = ( (int)( ::Dynamic(d->__Field(HX_("guilds",60,bb,5d,d2),::hx::paccDynamic))->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic)) );
HXDLIN( 127)						while((_g < _g1)){
HXLINE( 127)							_g = (_g + 1);
HXDLIN( 127)							int i = (_g - 1);
HXLINE( 128)							if (::hx::IsEq(  ::Dynamic(d->__Field(HX_("guilds",60,bb,5d,d2),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic),::WebSocketDG_obj::target_id )) {
HXLINE( 129)								::WebSocketDG_obj::server_name = ( (::String)( ::Dynamic(d->__Field(HX_("guilds",60,bb,5d,d2),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)) );
HXLINE( 130)								{
HXLINE( 130)									int _g2 = 0;
HXDLIN( 130)									int _g3 = ( (int)( ::Dynamic( ::Dynamic(d->__Field(HX_("guilds",60,bb,5d,d2),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("channels",50,aa,ee,6a),::hx::paccDynamic))->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic)) );
HXDLIN( 130)									while((_g2 < _g3)){
HXLINE( 130)										_g2 = (_g2 + 1);
HXDLIN( 130)										int x = (_g2 - 1);
HXLINE( 131)										::WebSocketDG_obj::channel_names->set(( (::String)( ::Dynamic( ::Dynamic(d->__Field(HX_("guilds",60,bb,5d,d2),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("channels",50,aa,ee,6a),::hx::paccDynamic))->__GetItem(x)->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)) ), ::Dynamic((HX_("#",23,00,00,00) +  ::Dynamic( ::Dynamic(d->__Field(HX_("guilds",60,bb,5d,d2),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("channels",50,aa,ee,6a),::hx::paccDynamic))->__GetItem(x)->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic))));
            									}
            								}
            							}
            						}
            					}
HXLINE( 120)					goto _hx_goto_7;
            				}
            				_hx_goto_7:;
            			}
            			break;
            			case (int)7: {
HXLINE( 115)				::WebSocketDG_obj::ws->close();
            			}
            			break;
            			case (int)9: {
HXLINE( 111)				::WebSocketDG_obj::ws->close();
HXLINE( 113)				::WebSocketDG_obj::canResume = false;
            			}
            			break;
            			case (int)10: {
            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_5) HXARGC(0)
            				void _hx_run(){
            					HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_4) HXARGC(0)
            					void _hx_run(){
            						HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_82_incomingMessages)
HXLINE(  82)						 ::haxe::ws::WebSocket _hx_tmp = ::WebSocketDG_obj::ws;
HXDLIN(  82)						 ::Dynamic replacer = null();
HXDLIN(  82)						::String space = null();
HXDLIN(  82)						_hx_tmp->send(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(2)
            							->setFixed(0,HX_("d",64,00,00,00),null())
            							->setFixed(1,HX_("op",21,61,00,00),1)),replacer,space));
            					}
            					HX_END_LOCAL_FUNC0((void))

            					HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_79_incomingMessages)
HXLINE(  80)					::WebSocketDG_obj::hb_timer =  ::haxe::Timer_obj::__alloc( HX_CTX ,::WebSocketDG_obj::interval);
HXLINE(  81)					::WebSocketDG_obj::hb_timer->run =  ::Dynamic(new _hx_Closure_4());
            				}
            				HX_END_LOCAL_FUNC0((void))

HXLINE(  77)				::WebSocketDG_obj::interval = ( (int)(d->__Field(HX_("heartbeat_interval",28,15,ef,34),::hx::paccDynamic)) );
HXLINE(  78)				 ::haxe::ws::WebSocket _hx_tmp6 = ::WebSocketDG_obj::ws;
HXDLIN(  78)				 ::Dynamic replacer3 = null();
HXDLIN(  78)				::String space3 = null();
HXDLIN(  78)				_hx_tmp6->send(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("d",64,00,00,00),null())
            					->setFixed(1,HX_("op",21,61,00,00),1)),replacer3,space3));
HXLINE(  79)				::haxe::EntryPoint_obj::runInMainThread( ::Dynamic(new _hx_Closure_5()));
HXLINE(  85)				if (::WebSocketDG_obj::canResume) {
HXLINE(  86)					 ::haxe::ws::WebSocket _hx_tmp7 = ::WebSocketDG_obj::ws;
HXLINE(  89)					::String value16 = ::sys::io::File_obj::getContent(HX_("token.txt",7b,32,9b,9a));
HXLINE(  86)					 ::Dynamic replacer4 = null();
HXDLIN(  86)					::String space4 = null();
HXDLIN(  86)					_hx_tmp7->send(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(2)
            						->setFixed(0,HX_("d",64,00,00,00), ::Dynamic(::hx::Anon_obj::Create(3)
            							->setFixed(0,HX_("seq",9f,9b,57,00),::WebSocketDG_obj::sequence)
            							->setFixed(1,HX_("token",f9,82,2b,14),value16)
            							->setFixed(2,HX_("session_id",64,14,71,28),::WebSocketDG_obj::session_id)))
            						->setFixed(1,HX_("op",21,61,00,00),6)),replacer4,space4));
            				}
            				else {
HXLINE(  95)					 ::haxe::ws::WebSocket _hx_tmp8 = ::WebSocketDG_obj::ws;
HXLINE(  98)					::String value17 = ::sys::io::File_obj::getContent(HX_("token.txt",7b,32,9b,9a));
HXLINE(  95)					 ::Dynamic replacer5 = null();
HXDLIN(  95)					::String space5 = null();
HXDLIN(  95)					_hx_tmp8->send(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(2)
            						->setFixed(0,HX_("d",64,00,00,00), ::Dynamic(::hx::Anon_obj::Create(3)
            							->setFixed(0,HX_("token",f9,82,2b,14),value17)
            							->setFixed(1,HX_("intents",97,1a,21,17),3276799)
            							->setFixed(2,HX_("properties",f3,fb,0e,61), ::Dynamic(::hx::Anon_obj::Create(3)
            								->setFixed(0,HX_("browser",a8,fb,60,b8),HX_("B",42,00,00,00))
            								->setFixed(1,HX_("os",24,61,00,00),HX_("a",61,00,00,00))
            								->setFixed(2,HX_("device",96,dc,77,71),HX_("C",43,00,00,00))))))
            						->setFixed(1,HX_("op",21,61,00,00),2)),replacer5,space5));
            				}
            			}
            			break;
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(WebSocketDG_obj,incomingMessages,(void))

bool WebSocketDG_obj::canILogThisChannel(::String id){
            	HX_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_303_canILogThisChannel)
HXDLIN( 303)		return true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(WebSocketDG_obj,canILogThisChannel,return )

 ::haxe::io::Bytes WebSocketDG_obj::downloadFile(::String url){
            	HX_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_306_downloadFile)
HXLINE( 307)		::Array< ::Dynamic> bytes = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXLINE( 308)		{
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,bytes) HXARGC(1)
            			void _hx_run( ::tink::core::Outcome o){
            				HX_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_309_downloadFile)
HXLINE( 309)				switch((int)(o->_hx_getIndex())){
            					case (int)0: {
HXLINE( 311)						bytes[0] = ::tink::chunk::ChunkObject_obj::toBytes(( ( ::tink::http::Message)(o->_hx_getObject(0)) )->body);
            					}
            					break;
            					case (int)1: {
            					}
            					break;
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 308)			 ::Dynamic options = null();
HXDLIN( 308)			::tink::http::_Fetch::FetchResponse_Impl__obj::all(::tink::http::Fetch_obj::fetch(::tink::_Url::Url_Impl__obj::fromString(url),options))->handle( ::Dynamic(new _hx_Closure_0(bytes)));
            		}
HXLINE( 316)		return bytes->__get(0).StaticCast<  ::haxe::io::Bytes >();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(WebSocketDG_obj,downloadFile,return )


WebSocketDG_obj::WebSocketDG_obj()
{
}

bool WebSocketDG_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"ws") ) { outValue = ( ws ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"hb_timer") ) { outValue = ( hb_timer ); return true; }
		if (HX_FIELD_EQ(inName,"sequence") ) { outValue = ( sequence ); return true; }
		if (HX_FIELD_EQ(inName,"interval") ) { outValue = ( interval ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"target_id") ) { outValue = ( target_id ); return true; }
		if (HX_FIELD_EQ(inName,"canResume") ) { outValue = ( canResume ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"session_id") ) { outValue = ( session_id ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"server_name") ) { outValue = ( server_name ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"downloadFile") ) { outValue = downloadFile_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"channel_names") ) { outValue = ( channel_names ); return true; }
		if (HX_FIELD_EQ(inName,"startTheThing") ) { outValue = startTheThing_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"stopEverything") ) { outValue = stopEverything_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"incomingMessages") ) { outValue = incomingMessages_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"resume_gateway_url") ) { outValue = ( resume_gateway_url ); return true; }
		if (HX_FIELD_EQ(inName,"canILogThisChannel") ) { outValue = canILogThisChannel_dyn(); return true; }
	}
	return false;
}

bool WebSocketDG_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"ws") ) { ws=ioValue.Cast<  ::haxe::ws::WebSocket >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"hb_timer") ) { hb_timer=ioValue.Cast<  ::haxe::Timer >(); return true; }
		if (HX_FIELD_EQ(inName,"sequence") ) { sequence=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"interval") ) { interval=ioValue.Cast< int >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"target_id") ) { target_id=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"canResume") ) { canResume=ioValue.Cast< bool >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"session_id") ) { session_id=ioValue.Cast< ::String >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"server_name") ) { server_name=ioValue.Cast< ::String >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"channel_names") ) { channel_names=ioValue.Cast<  ::haxe::ds::StringMap >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"resume_gateway_url") ) { resume_gateway_url=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *WebSocketDG_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo WebSocketDG_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ws::WebSocket */ ,(void *) &WebSocketDG_obj::ws,HX_("ws",1c,68,00,00)},
	{::hx::fsObject /*  ::haxe::Timer */ ,(void *) &WebSocketDG_obj::hb_timer,HX_("hb_timer",80,d9,d2,33)},
	{::hx::fsInt,(void *) &WebSocketDG_obj::sequence,HX_("sequence",41,1e,ed,e8)},
	{::hx::fsString,(void *) &WebSocketDG_obj::target_id,HX_("target_id",49,a7,3f,69)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &WebSocketDG_obj::channel_names,HX_("channel_names",0c,4c,97,75)},
	{::hx::fsString,(void *) &WebSocketDG_obj::server_name,HX_("server_name",87,60,c4,06)},
	{::hx::fsString,(void *) &WebSocketDG_obj::resume_gateway_url,HX_("resume_gateway_url",a2,69,d4,1e)},
	{::hx::fsString,(void *) &WebSocketDG_obj::session_id,HX_("session_id",64,14,71,28)},
	{::hx::fsInt,(void *) &WebSocketDG_obj::interval,HX_("interval",45,79,7c,28)},
	{::hx::fsBool,(void *) &WebSocketDG_obj::canResume,HX_("canResume",dd,bd,ca,5a)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void WebSocketDG_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(WebSocketDG_obj::ws,"ws");
	HX_MARK_MEMBER_NAME(WebSocketDG_obj::hb_timer,"hb_timer");
	HX_MARK_MEMBER_NAME(WebSocketDG_obj::sequence,"sequence");
	HX_MARK_MEMBER_NAME(WebSocketDG_obj::target_id,"target_id");
	HX_MARK_MEMBER_NAME(WebSocketDG_obj::channel_names,"channel_names");
	HX_MARK_MEMBER_NAME(WebSocketDG_obj::server_name,"server_name");
	HX_MARK_MEMBER_NAME(WebSocketDG_obj::resume_gateway_url,"resume_gateway_url");
	HX_MARK_MEMBER_NAME(WebSocketDG_obj::session_id,"session_id");
	HX_MARK_MEMBER_NAME(WebSocketDG_obj::interval,"interval");
	HX_MARK_MEMBER_NAME(WebSocketDG_obj::canResume,"canResume");
};

#ifdef HXCPP_VISIT_ALLOCS
static void WebSocketDG_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(WebSocketDG_obj::ws,"ws");
	HX_VISIT_MEMBER_NAME(WebSocketDG_obj::hb_timer,"hb_timer");
	HX_VISIT_MEMBER_NAME(WebSocketDG_obj::sequence,"sequence");
	HX_VISIT_MEMBER_NAME(WebSocketDG_obj::target_id,"target_id");
	HX_VISIT_MEMBER_NAME(WebSocketDG_obj::channel_names,"channel_names");
	HX_VISIT_MEMBER_NAME(WebSocketDG_obj::server_name,"server_name");
	HX_VISIT_MEMBER_NAME(WebSocketDG_obj::resume_gateway_url,"resume_gateway_url");
	HX_VISIT_MEMBER_NAME(WebSocketDG_obj::session_id,"session_id");
	HX_VISIT_MEMBER_NAME(WebSocketDG_obj::interval,"interval");
	HX_VISIT_MEMBER_NAME(WebSocketDG_obj::canResume,"canResume");
};

#endif

::hx::Class WebSocketDG_obj::__mClass;

static ::String WebSocketDG_obj_sStaticFields[] = {
	HX_("ws",1c,68,00,00),
	HX_("hb_timer",80,d9,d2,33),
	HX_("sequence",41,1e,ed,e8),
	HX_("target_id",49,a7,3f,69),
	HX_("channel_names",0c,4c,97,75),
	HX_("server_name",87,60,c4,06),
	HX_("resume_gateway_url",a2,69,d4,1e),
	HX_("session_id",64,14,71,28),
	HX_("interval",45,79,7c,28),
	HX_("canResume",dd,bd,ca,5a),
	HX_("startTheThing",3f,c0,11,d9),
	HX_("stopEverything",15,95,eb,87),
	HX_("incomingMessages",d2,2b,e9,a5),
	HX_("canILogThisChannel",fa,d3,76,83),
	HX_("downloadFile",24,ca,eb,49),
	::String(null())
};

void WebSocketDG_obj::__register()
{
	WebSocketDG_obj _hx_dummy;
	WebSocketDG_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("WebSocketDG",8a,06,db,70);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &WebSocketDG_obj::__GetStatic;
	__mClass->mSetStaticField = &WebSocketDG_obj::__SetStatic;
	__mClass->mMarkFunc = WebSocketDG_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(WebSocketDG_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< WebSocketDG_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = WebSocketDG_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = WebSocketDG_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = WebSocketDG_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void WebSocketDG_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_16_boot)
HXDLIN(  16)		sequence = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_17_boot)
HXDLIN(  17)		target_id = HX_("",00,00,00,00);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_18_boot)
HXDLIN(  18)		channel_names =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}
{
            	HX_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_19_boot)
HXDLIN(  19)		server_name = HX_("",00,00,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_20_boot)
HXDLIN(  20)		resume_gateway_url = HX_("wss://gateway.discord.gg/?v=10&encoding=json",11,02,1b,6a);
            	}
{
            	HX_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_21_boot)
HXDLIN(  21)		session_id = HX_("",00,00,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_22_boot)
HXDLIN(  22)		interval = 0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_82c2c2b563c65d2c_23_boot)
HXDLIN(  23)		canResume = false;
            	}
}

