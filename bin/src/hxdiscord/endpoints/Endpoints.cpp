// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe__Int64_Int64_Impl_
#include <haxe/_Int64/Int64_Impl_.h>
#endif
#ifndef INCLUDED_haxe_format_JsonParser
#include <haxe/format/JsonParser.h>
#endif
#ifndef INCLUDED_haxe_format_JsonPrinter
#include <haxe/format/JsonPrinter.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_BytesOutput
#include <haxe/io/BytesOutput.h>
#endif
#ifndef INCLUDED_haxe_io_Encoding
#include <haxe/io/Encoding.h>
#endif
#ifndef INCLUDED_haxe_io_Output
#include <haxe/io/Output.h>
#endif
#ifndef INCLUDED_hxdiscord_DiscordClient
#include <hxdiscord/DiscordClient.h>
#endif
#ifndef INCLUDED_hxdiscord_endpoints_Endpoints
#include <hxdiscord/endpoints/Endpoints.h>
#endif
#ifndef INCLUDED_hxdiscord_gateway_Gateway
#include <hxdiscord/gateway/Gateway.h>
#endif
#ifndef INCLUDED_hxdiscord_types_Guild
#include <hxdiscord/types/Guild.h>
#endif
#ifndef INCLUDED_hxdiscord_types_Member
#include <hxdiscord/types/Member.h>
#endif
#ifndef INCLUDED_hxdiscord_types_User
#include <hxdiscord/types/User.h>
#endif
#ifndef INCLUDED_hxdiscord_types_message_ActionRow
#include <hxdiscord/types/message/ActionRow.h>
#endif
#ifndef INCLUDED_hxdiscord_utils_Http
#include <hxdiscord/utils/Http.h>
#endif
#ifndef INCLUDED_hxdiscord_utils_Https
#include <hxdiscord/utils/Https.h>
#endif
#ifndef INCLUDED_hxdiscord_utils_MimeResolver
#include <hxdiscord/utils/MimeResolver.h>
#endif
#ifndef INCLUDED_hxdiscord_utils_Permissions
#include <hxdiscord/utils/Permissions.h>
#endif
#ifndef INCLUDED_sys_FileSystem
#include <sys/FileSystem.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f1f00be883a777db_31_new,"hxdiscord.endpoints.Endpoints","new",0x30e1860e,"hxdiscord.endpoints.Endpoints.new","hxdiscord/endpoints/Endpoints.hx",31,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_38_getEndpointData,"hxdiscord.endpoints.Endpoints","getEndpointData",0x797c9fc3,"hxdiscord.endpoints.Endpoints.getEndpointData","hxdiscord/endpoints/Endpoints.hx",38,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_64_createDM,"hxdiscord.endpoints.Endpoints","createDM",0x06af4d17,"hxdiscord.endpoints.Endpoints.createDM","hxdiscord/endpoints/Endpoints.hx",64,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_73_createDM,"hxdiscord.endpoints.Endpoints","createDM",0x06af4d17,"hxdiscord.endpoints.Endpoints.createDM","hxdiscord/endpoints/Endpoints.hx",73,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_49_createDM,"hxdiscord.endpoints.Endpoints","createDM",0x06af4d17,"hxdiscord.endpoints.Endpoints.createDM","hxdiscord/endpoints/Endpoints.hx",49,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_101_getCurrentUser,"hxdiscord.endpoints.Endpoints","getCurrentUser",0x470eab40,"hxdiscord.endpoints.Endpoints.getCurrentUser","hxdiscord/endpoints/Endpoints.hx",101,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_105_getCurrentUser,"hxdiscord.endpoints.Endpoints","getCurrentUser",0x470eab40,"hxdiscord.endpoints.Endpoints.getCurrentUser","hxdiscord/endpoints/Endpoints.hx",105,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_89_getCurrentUser,"hxdiscord.endpoints.Endpoints","getCurrentUser",0x470eab40,"hxdiscord.endpoints.Endpoints.getCurrentUser","hxdiscord/endpoints/Endpoints.hx",89,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_132_hasPermission,"hxdiscord.endpoints.Endpoints","hasPermission",0x3bf40437,"hxdiscord.endpoints.Endpoints.hasPermission","hxdiscord/endpoints/Endpoints.hx",132,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_156_hasPermission,"hxdiscord.endpoints.Endpoints","hasPermission",0x3bf40437,"hxdiscord.endpoints.Endpoints.hasPermission","hxdiscord/endpoints/Endpoints.hx",156,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_123_hasPermission,"hxdiscord.endpoints.Endpoints","hasPermission",0x3bf40437,"hxdiscord.endpoints.Endpoints.hasPermission","hxdiscord/endpoints/Endpoints.hx",123,0x915cbb64)
static const bool _hx_array_data_934e271c_13[] = {
	0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_182_getUser,"hxdiscord.endpoints.Endpoints","getUser",0xd1f566af,"hxdiscord.endpoints.Endpoints.getUser","hxdiscord/endpoints/Endpoints.hx",182,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_186_getUser,"hxdiscord.endpoints.Endpoints","getUser",0xd1f566af,"hxdiscord.endpoints.Endpoints.getUser","hxdiscord/endpoints/Endpoints.hx",186,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_170_getUser,"hxdiscord.endpoints.Endpoints","getUser",0xd1f566af,"hxdiscord.endpoints.Endpoints.getUser","hxdiscord/endpoints/Endpoints.hx",170,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_213_getGuildMember,"hxdiscord.endpoints.Endpoints","getGuildMember",0x9a4e2089,"hxdiscord.endpoints.Endpoints.getGuildMember","hxdiscord/endpoints/Endpoints.hx",213,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_220_getGuildMember,"hxdiscord.endpoints.Endpoints","getGuildMember",0x9a4e2089,"hxdiscord.endpoints.Endpoints.getGuildMember","hxdiscord/endpoints/Endpoints.hx",220,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_203_getGuildMember,"hxdiscord.endpoints.Endpoints","getGuildMember",0x9a4e2089,"hxdiscord.endpoints.Endpoints.getGuildMember","hxdiscord/endpoints/Endpoints.hx",203,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_246_getRoles,"hxdiscord.endpoints.Endpoints","getRoles",0x27f11f59,"hxdiscord.endpoints.Endpoints.getRoles","hxdiscord/endpoints/Endpoints.hx",246,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_255_getRoles,"hxdiscord.endpoints.Endpoints","getRoles",0x27f11f59,"hxdiscord.endpoints.Endpoints.getRoles","hxdiscord/endpoints/Endpoints.hx",255,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_234_getRoles,"hxdiscord.endpoints.Endpoints","getRoles",0x27f11f59,"hxdiscord.endpoints.Endpoints.getRoles","hxdiscord/endpoints/Endpoints.hx",234,0x915cbb64)
static const ::String _hx_array_data_934e271c_23[] = {
	HX_("",00,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_279_deleteMessage,"hxdiscord.endpoints.Endpoints","deleteMessage",0x1469a40a,"hxdiscord.endpoints.Endpoints.deleteMessage","hxdiscord/endpoints/Endpoints.hx",279,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_285_deleteMessage,"hxdiscord.endpoints.Endpoints","deleteMessage",0x1469a40a,"hxdiscord.endpoints.Endpoints.deleteMessage","hxdiscord/endpoints/Endpoints.hx",285,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_271_deleteMessage,"hxdiscord.endpoints.Endpoints","deleteMessage",0x1469a40a,"hxdiscord.endpoints.Endpoints.deleteMessage","hxdiscord/endpoints/Endpoints.hx",271,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_313_editMessage,"hxdiscord.endpoints.Endpoints","editMessage",0xe0f95c8b,"hxdiscord.endpoints.Endpoints.editMessage","hxdiscord/endpoints/Endpoints.hx",313,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_319_editMessage,"hxdiscord.endpoints.Endpoints","editMessage",0xe0f95c8b,"hxdiscord.endpoints.Endpoints.editMessage","hxdiscord/endpoints/Endpoints.hx",319,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_303_editMessage,"hxdiscord.endpoints.Endpoints","editMessage",0xe0f95c8b,"hxdiscord.endpoints.Endpoints.editMessage","hxdiscord/endpoints/Endpoints.hx",303,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_431_sendMessage,"hxdiscord.endpoints.Endpoints","sendMessage",0x38fd9d0d,"hxdiscord.endpoints.Endpoints.sendMessage","hxdiscord/endpoints/Endpoints.hx",431,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_440_sendMessage,"hxdiscord.endpoints.Endpoints","sendMessage",0x38fd9d0d,"hxdiscord.endpoints.Endpoints.sendMessage","hxdiscord/endpoints/Endpoints.hx",440,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_336_sendMessage,"hxdiscord.endpoints.Endpoints","sendMessage",0x38fd9d0d,"hxdiscord.endpoints.Endpoints.sendMessage","hxdiscord/endpoints/Endpoints.hx",336,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_581_sendMessageToChannelID,"hxdiscord.endpoints.Endpoints","sendMessageToChannelID",0x4c145656,"hxdiscord.endpoints.Endpoints.sendMessageToChannelID","hxdiscord/endpoints/Endpoints.hx",581,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_588_sendMessageToChannelID,"hxdiscord.endpoints.Endpoints","sendMessageToChannelID",0x4c145656,"hxdiscord.endpoints.Endpoints.sendMessageToChannelID","hxdiscord/endpoints/Endpoints.hx",588,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_563_sendMessageToChannelID,"hxdiscord.endpoints.Endpoints","sendMessageToChannelID",0x4c145656,"hxdiscord.endpoints.Endpoints.sendMessageToChannelID","hxdiscord/endpoints/Endpoints.hx",563,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_611_sendDataToMessageAPI,"hxdiscord.endpoints.Endpoints","sendDataToMessageAPI",0xd156e3b2,"hxdiscord.endpoints.Endpoints.sendDataToMessageAPI","hxdiscord/endpoints/Endpoints.hx",611,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_618_sendDataToMessageAPI,"hxdiscord.endpoints.Endpoints","sendDataToMessageAPI",0xd156e3b2,"hxdiscord.endpoints.Endpoints.sendDataToMessageAPI","hxdiscord/endpoints/Endpoints.hx",618,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_598_sendDataToMessageAPI,"hxdiscord.endpoints.Endpoints","sendDataToMessageAPI",0xd156e3b2,"hxdiscord.endpoints.Endpoints.sendDataToMessageAPI","hxdiscord/endpoints/Endpoints.hx",598,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_644_createReaction,"hxdiscord.endpoints.Endpoints","createReaction",0x822053d7,"hxdiscord.endpoints.Endpoints.createReaction","hxdiscord/endpoints/Endpoints.hx",644,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_650_createReaction,"hxdiscord.endpoints.Endpoints","createReaction",0x822053d7,"hxdiscord.endpoints.Endpoints.createReaction","hxdiscord/endpoints/Endpoints.hx",650,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_636_createReaction,"hxdiscord.endpoints.Endpoints","createReaction",0x822053d7,"hxdiscord.endpoints.Endpoints.createReaction","hxdiscord/endpoints/Endpoints.hx",636,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_675_deleteOwnReaction,"hxdiscord.endpoints.Endpoints","deleteOwnReaction",0xe53047d2,"hxdiscord.endpoints.Endpoints.deleteOwnReaction","hxdiscord/endpoints/Endpoints.hx",675,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_681_deleteOwnReaction,"hxdiscord.endpoints.Endpoints","deleteOwnReaction",0xe53047d2,"hxdiscord.endpoints.Endpoints.deleteOwnReaction","hxdiscord/endpoints/Endpoints.hx",681,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_667_deleteOwnReaction,"hxdiscord.endpoints.Endpoints","deleteOwnReaction",0xe53047d2,"hxdiscord.endpoints.Endpoints.deleteOwnReaction","hxdiscord/endpoints/Endpoints.hx",667,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_708_deleteUserReaction,"hxdiscord.endpoints.Endpoints","deleteUserReaction",0x9ff1f7f1,"hxdiscord.endpoints.Endpoints.deleteUserReaction","hxdiscord/endpoints/Endpoints.hx",708,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_714_deleteUserReaction,"hxdiscord.endpoints.Endpoints","deleteUserReaction",0x9ff1f7f1,"hxdiscord.endpoints.Endpoints.deleteUserReaction","hxdiscord/endpoints/Endpoints.hx",714,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_699_deleteUserReaction,"hxdiscord.endpoints.Endpoints","deleteUserReaction",0x9ff1f7f1,"hxdiscord.endpoints.Endpoints.deleteUserReaction","hxdiscord/endpoints/Endpoints.hx",699,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_739_deleteAllReactions,"hxdiscord.endpoints.Endpoints","deleteAllReactions",0x02730626,"hxdiscord.endpoints.Endpoints.deleteAllReactions","hxdiscord/endpoints/Endpoints.hx",739,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_745_deleteAllReactions,"hxdiscord.endpoints.Endpoints","deleteAllReactions",0x02730626,"hxdiscord.endpoints.Endpoints.deleteAllReactions","hxdiscord/endpoints/Endpoints.hx",745,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_730_deleteAllReactions,"hxdiscord.endpoints.Endpoints","deleteAllReactions",0x02730626,"hxdiscord.endpoints.Endpoints.deleteAllReactions","hxdiscord/endpoints/Endpoints.hx",730,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_771_deleteAllReactionsForEmoji,"hxdiscord.endpoints.Endpoints","deleteAllReactionsForEmoji",0x690e5003,"hxdiscord.endpoints.Endpoints.deleteAllReactionsForEmoji","hxdiscord/endpoints/Endpoints.hx",771,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_777_deleteAllReactionsForEmoji,"hxdiscord.endpoints.Endpoints","deleteAllReactionsForEmoji",0x690e5003,"hxdiscord.endpoints.Endpoints.deleteAllReactionsForEmoji","hxdiscord/endpoints/Endpoints.hx",777,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_762_deleteAllReactionsForEmoji,"hxdiscord.endpoints.Endpoints","deleteAllReactionsForEmoji",0x690e5003,"hxdiscord.endpoints.Endpoints.deleteAllReactionsForEmoji","hxdiscord/endpoints/Endpoints.hx",762,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_803_getGuild,"hxdiscord.endpoints.Endpoints","getGuild",0xd67dc4cf,"hxdiscord.endpoints.Endpoints.getGuild","hxdiscord/endpoints/Endpoints.hx",803,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_809_getGuild,"hxdiscord.endpoints.Endpoints","getGuild",0xd67dc4cf,"hxdiscord.endpoints.Endpoints.getGuild","hxdiscord/endpoints/Endpoints.hx",809,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_793_getGuild,"hxdiscord.endpoints.Endpoints","getGuild",0xd67dc4cf,"hxdiscord.endpoints.Endpoints.getGuild","hxdiscord/endpoints/Endpoints.hx",793,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_844_createGuildBan,"hxdiscord.endpoints.Endpoints","createGuildBan",0xfd11e60a,"hxdiscord.endpoints.Endpoints.createGuildBan","hxdiscord/endpoints/Endpoints.hx",844,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_851_createGuildBan,"hxdiscord.endpoints.Endpoints","createGuildBan",0xfd11e60a,"hxdiscord.endpoints.Endpoints.createGuildBan","hxdiscord/endpoints/Endpoints.hx",851,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_826_createGuildBan,"hxdiscord.endpoints.Endpoints","createGuildBan",0xfd11e60a,"hxdiscord.endpoints.Endpoints.createGuildBan","hxdiscord/endpoints/Endpoints.hx",826,0x915cbb64)
static const bool _hx_array_data_934e271c_62[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_876_removeGuildBan,"hxdiscord.endpoints.Endpoints","removeGuildBan",0x752da352,"hxdiscord.endpoints.Endpoints.removeGuildBan","hxdiscord/endpoints/Endpoints.hx",876,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_883_removeGuildBan,"hxdiscord.endpoints.Endpoints","removeGuildBan",0x752da352,"hxdiscord.endpoints.Endpoints.removeGuildBan","hxdiscord/endpoints/Endpoints.hx",883,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_867_removeGuildBan,"hxdiscord.endpoints.Endpoints","removeGuildBan",0x752da352,"hxdiscord.endpoints.Endpoints.removeGuildBan","hxdiscord/endpoints/Endpoints.hx",867,0x915cbb64)
static const bool _hx_array_data_934e271c_66[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_914_removeGuildMember,"hxdiscord.endpoints.Endpoints","removeGuildMember",0xec1684b7,"hxdiscord.endpoints.Endpoints.removeGuildMember","hxdiscord/endpoints/Endpoints.hx",914,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_921_removeGuildMember,"hxdiscord.endpoints.Endpoints","removeGuildMember",0xec1684b7,"hxdiscord.endpoints.Endpoints.removeGuildMember","hxdiscord/endpoints/Endpoints.hx",921,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_900_removeGuildMember,"hxdiscord.endpoints.Endpoints","removeGuildMember",0xec1684b7,"hxdiscord.endpoints.Endpoints.removeGuildMember","hxdiscord/endpoints/Endpoints.hx",900,0x915cbb64)
static const bool _hx_array_data_934e271c_70[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_949_modifyGuildMember,"hxdiscord.endpoints.Endpoints","modifyGuildMember",0x1f392c41,"hxdiscord.endpoints.Endpoints.modifyGuildMember","hxdiscord/endpoints/Endpoints.hx",949,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_956_modifyGuildMember,"hxdiscord.endpoints.Endpoints","modifyGuildMember",0x1f392c41,"hxdiscord.endpoints.Endpoints.modifyGuildMember","hxdiscord/endpoints/Endpoints.hx",956,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_938_modifyGuildMember,"hxdiscord.endpoints.Endpoints","modifyGuildMember",0x1f392c41,"hxdiscord.endpoints.Endpoints.modifyGuildMember","hxdiscord/endpoints/Endpoints.hx",938,0x915cbb64)
static const bool _hx_array_data_934e271c_74[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_984_modifyGuild,"hxdiscord.endpoints.Endpoints","modifyGuild",0x51b0b687,"hxdiscord.endpoints.Endpoints.modifyGuild","hxdiscord/endpoints/Endpoints.hx",984,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_991_modifyGuild,"hxdiscord.endpoints.Endpoints","modifyGuild",0x51b0b687,"hxdiscord.endpoints.Endpoints.modifyGuild","hxdiscord/endpoints/Endpoints.hx",991,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_973_modifyGuild,"hxdiscord.endpoints.Endpoints","modifyGuild",0x51b0b687,"hxdiscord.endpoints.Endpoints.modifyGuild","hxdiscord/endpoints/Endpoints.hx",973,0x915cbb64)
static const bool _hx_array_data_934e271c_78[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1016_getGuildChannels,"hxdiscord.endpoints.Endpoints","getGuildChannels",0xc5b6123f,"hxdiscord.endpoints.Endpoints.getGuildChannels","hxdiscord/endpoints/Endpoints.hx",1016,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1025_getGuildChannels,"hxdiscord.endpoints.Endpoints","getGuildChannels",0xc5b6123f,"hxdiscord.endpoints.Endpoints.getGuildChannels","hxdiscord/endpoints/Endpoints.hx",1025,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1007_getGuildChannels,"hxdiscord.endpoints.Endpoints","getGuildChannels",0xc5b6123f,"hxdiscord.endpoints.Endpoints.getGuildChannels","hxdiscord/endpoints/Endpoints.hx",1007,0x915cbb64)
static const ::String _hx_array_data_934e271c_82[] = {
	HX_("",00,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1051_deleteGuild,"hxdiscord.endpoints.Endpoints","deleteGuild",0x40c10936,"hxdiscord.endpoints.Endpoints.deleteGuild","hxdiscord/endpoints/Endpoints.hx",1051,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1058_deleteGuild,"hxdiscord.endpoints.Endpoints","deleteGuild",0x40c10936,"hxdiscord.endpoints.Endpoints.deleteGuild","hxdiscord/endpoints/Endpoints.hx",1058,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1041_deleteGuild,"hxdiscord.endpoints.Endpoints","deleteGuild",0x40c10936,"hxdiscord.endpoints.Endpoints.deleteGuild","hxdiscord/endpoints/Endpoints.hx",1041,0x915cbb64)
static const bool _hx_array_data_934e271c_86[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1086_editChannelPermissions,"hxdiscord.endpoints.Endpoints","editChannelPermissions",0x3b331c3d,"hxdiscord.endpoints.Endpoints.editChannelPermissions","hxdiscord/endpoints/Endpoints.hx",1086,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1093_editChannelPermissions,"hxdiscord.endpoints.Endpoints","editChannelPermissions",0x3b331c3d,"hxdiscord.endpoints.Endpoints.editChannelPermissions","hxdiscord/endpoints/Endpoints.hx",1093,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1075_editChannelPermissions,"hxdiscord.endpoints.Endpoints","editChannelPermissions",0x3b331c3d,"hxdiscord.endpoints.Endpoints.editChannelPermissions","hxdiscord/endpoints/Endpoints.hx",1075,0x915cbb64)
static const bool _hx_array_data_934e271c_90[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1118_getChannelInvites,"hxdiscord.endpoints.Endpoints","getChannelInvites",0xbb7e6d6b,"hxdiscord.endpoints.Endpoints.getChannelInvites","hxdiscord/endpoints/Endpoints.hx",1118,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1127_getChannelInvites,"hxdiscord.endpoints.Endpoints","getChannelInvites",0xbb7e6d6b,"hxdiscord.endpoints.Endpoints.getChannelInvites","hxdiscord/endpoints/Endpoints.hx",1127,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1109_getChannelInvites,"hxdiscord.endpoints.Endpoints","getChannelInvites",0xbb7e6d6b,"hxdiscord.endpoints.Endpoints.getChannelInvites","hxdiscord/endpoints/Endpoints.hx",1109,0x915cbb64)
static const ::String _hx_array_data_934e271c_94[] = {
	HX_("",00,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1152_getChannelMessages,"hxdiscord.endpoints.Endpoints","getChannelMessages",0x440c0ecb,"hxdiscord.endpoints.Endpoints.getChannelMessages","hxdiscord/endpoints/Endpoints.hx",1152,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1161_getChannelMessages,"hxdiscord.endpoints.Endpoints","getChannelMessages",0x440c0ecb,"hxdiscord.endpoints.Endpoints.getChannelMessages","hxdiscord/endpoints/Endpoints.hx",1161,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1143_getChannelMessages,"hxdiscord.endpoints.Endpoints","getChannelMessages",0x440c0ecb,"hxdiscord.endpoints.Endpoints.getChannelMessages","hxdiscord/endpoints/Endpoints.hx",1143,0x915cbb64)
static const ::String _hx_array_data_934e271c_98[] = {
	HX_("",00,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1190_createChannelInvite,"hxdiscord.endpoints.Endpoints","createChannelInvite",0xd7b387fe,"hxdiscord.endpoints.Endpoints.createChannelInvite","hxdiscord/endpoints/Endpoints.hx",1190,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1199_createChannelInvite,"hxdiscord.endpoints.Endpoints","createChannelInvite",0xd7b387fe,"hxdiscord.endpoints.Endpoints.createChannelInvite","hxdiscord/endpoints/Endpoints.hx",1199,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1178_createChannelInvite,"hxdiscord.endpoints.Endpoints","createChannelInvite",0xd7b387fe,"hxdiscord.endpoints.Endpoints.createChannelInvite","hxdiscord/endpoints/Endpoints.hx",1178,0x915cbb64)
static const ::String _hx_array_data_934e271c_102[] = {
	HX_("",00,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1226_deleteChannelPermission,"hxdiscord.endpoints.Endpoints","deleteChannelPermission",0x11e127b5,"hxdiscord.endpoints.Endpoints.deleteChannelPermission","hxdiscord/endpoints/Endpoints.hx",1226,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1233_deleteChannelPermission,"hxdiscord.endpoints.Endpoints","deleteChannelPermission",0x11e127b5,"hxdiscord.endpoints.Endpoints.deleteChannelPermission","hxdiscord/endpoints/Endpoints.hx",1233,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1215_deleteChannelPermission,"hxdiscord.endpoints.Endpoints","deleteChannelPermission",0x11e127b5,"hxdiscord.endpoints.Endpoints.deleteChannelPermission","hxdiscord/endpoints/Endpoints.hx",1215,0x915cbb64)
static const bool _hx_array_data_934e271c_106[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1264_followAnnouncementChannel,"hxdiscord.endpoints.Endpoints","followAnnouncementChannel",0x7abf0bf9,"hxdiscord.endpoints.Endpoints.followAnnouncementChannel","hxdiscord/endpoints/Endpoints.hx",1264,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1271_followAnnouncementChannel,"hxdiscord.endpoints.Endpoints","followAnnouncementChannel",0x7abf0bf9,"hxdiscord.endpoints.Endpoints.followAnnouncementChannel","hxdiscord/endpoints/Endpoints.hx",1271,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1250_followAnnouncementChannel,"hxdiscord.endpoints.Endpoints","followAnnouncementChannel",0x7abf0bf9,"hxdiscord.endpoints.Endpoints.followAnnouncementChannel","hxdiscord/endpoints/Endpoints.hx",1250,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1297_triggerTypingIndicator,"hxdiscord.endpoints.Endpoints","triggerTypingIndicator",0x6ed16312,"hxdiscord.endpoints.Endpoints.triggerTypingIndicator","hxdiscord/endpoints/Endpoints.hx",1297,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1304_triggerTypingIndicator,"hxdiscord.endpoints.Endpoints","triggerTypingIndicator",0x6ed16312,"hxdiscord.endpoints.Endpoints.triggerTypingIndicator","hxdiscord/endpoints/Endpoints.hx",1304,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1285_triggerTypingIndicator,"hxdiscord.endpoints.Endpoints","triggerTypingIndicator",0x6ed16312,"hxdiscord.endpoints.Endpoints.triggerTypingIndicator","hxdiscord/endpoints/Endpoints.hx",1285,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1330_getPinnedMessages,"hxdiscord.endpoints.Endpoints","getPinnedMessages",0x84b3c168,"hxdiscord.endpoints.Endpoints.getPinnedMessages","hxdiscord/endpoints/Endpoints.hx",1330,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1338_getPinnedMessages,"hxdiscord.endpoints.Endpoints","getPinnedMessages",0x84b3c168,"hxdiscord.endpoints.Endpoints.getPinnedMessages","hxdiscord/endpoints/Endpoints.hx",1338,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1318_getPinnedMessages,"hxdiscord.endpoints.Endpoints","getPinnedMessages",0x84b3c168,"hxdiscord.endpoints.Endpoints.getPinnedMessages","hxdiscord/endpoints/Endpoints.hx",1318,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1364_pinMessage,"hxdiscord.endpoints.Endpoints","pinMessage",0xd6b46604,"hxdiscord.endpoints.Endpoints.pinMessage","hxdiscord/endpoints/Endpoints.hx",1364,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1371_pinMessage,"hxdiscord.endpoints.Endpoints","pinMessage",0xd6b46604,"hxdiscord.endpoints.Endpoints.pinMessage","hxdiscord/endpoints/Endpoints.hx",1371,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1354_pinMessage,"hxdiscord.endpoints.Endpoints","pinMessage",0xd6b46604,"hxdiscord.endpoints.Endpoints.pinMessage","hxdiscord/endpoints/Endpoints.hx",1354,0x915cbb64)
static const bool _hx_array_data_934e271c_119[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1398_unpinMessage,"hxdiscord.endpoints.Endpoints","unpinMessage",0x3be83e1d,"hxdiscord.endpoints.Endpoints.unpinMessage","hxdiscord/endpoints/Endpoints.hx",1398,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1405_unpinMessage,"hxdiscord.endpoints.Endpoints","unpinMessage",0x3be83e1d,"hxdiscord.endpoints.Endpoints.unpinMessage","hxdiscord/endpoints/Endpoints.hx",1405,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1388_unpinMessage,"hxdiscord.endpoints.Endpoints","unpinMessage",0x3be83e1d,"hxdiscord.endpoints.Endpoints.unpinMessage","hxdiscord/endpoints/Endpoints.hx",1388,0x915cbb64)
static const bool _hx_array_data_934e271c_123[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1429_groupDMAddRecipient,"hxdiscord.endpoints.Endpoints","groupDMAddRecipient",0x42ee03ce,"hxdiscord.endpoints.Endpoints.groupDMAddRecipient","hxdiscord/endpoints/Endpoints.hx",1429,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1435_groupDMAddRecipient,"hxdiscord.endpoints.Endpoints","groupDMAddRecipient",0x42ee03ce,"hxdiscord.endpoints.Endpoints.groupDMAddRecipient","hxdiscord/endpoints/Endpoints.hx",1435,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1417_groupDMAddRecipient,"hxdiscord.endpoints.Endpoints","groupDMAddRecipient",0x42ee03ce,"hxdiscord.endpoints.Endpoints.groupDMAddRecipient","hxdiscord/endpoints/Endpoints.hx",1417,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1455_groupDMRemoveRecipient,"hxdiscord.endpoints.Endpoints","groupDMRemoveRecipient",0x3db6ca5f,"hxdiscord.endpoints.Endpoints.groupDMRemoveRecipient","hxdiscord/endpoints/Endpoints.hx",1455,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1461_groupDMRemoveRecipient,"hxdiscord.endpoints.Endpoints","groupDMRemoveRecipient",0x3db6ca5f,"hxdiscord.endpoints.Endpoints.groupDMRemoveRecipient","hxdiscord/endpoints/Endpoints.hx",1461,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1446_groupDMRemoveRecipient,"hxdiscord.endpoints.Endpoints","groupDMRemoveRecipient",0x3db6ca5f,"hxdiscord.endpoints.Endpoints.groupDMRemoveRecipient","hxdiscord/endpoints/Endpoints.hx",1446,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1491_startThreadFromMessage,"hxdiscord.endpoints.Endpoints","startThreadFromMessage",0x0bae0323,"hxdiscord.endpoints.Endpoints.startThreadFromMessage","hxdiscord/endpoints/Endpoints.hx",1491,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1500_startThreadFromMessage,"hxdiscord.endpoints.Endpoints","startThreadFromMessage",0x0bae0323,"hxdiscord.endpoints.Endpoints.startThreadFromMessage","hxdiscord/endpoints/Endpoints.hx",1500,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1477_startThreadFromMessage,"hxdiscord.endpoints.Endpoints","startThreadFromMessage",0x0bae0323,"hxdiscord.endpoints.Endpoints.startThreadFromMessage","hxdiscord/endpoints/Endpoints.hx",1477,0x915cbb64)
static const bool _hx_array_data_934e271c_133[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1530_startThreadWithoutMessage,"hxdiscord.endpoints.Endpoints","startThreadWithoutMessage",0x97c02679,"hxdiscord.endpoints.Endpoints.startThreadWithoutMessage","hxdiscord/endpoints/Endpoints.hx",1530,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1537_startThreadWithoutMessage,"hxdiscord.endpoints.Endpoints","startThreadWithoutMessage",0x97c02679,"hxdiscord.endpoints.Endpoints.startThreadWithoutMessage","hxdiscord/endpoints/Endpoints.hx",1537,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1517_startThreadWithoutMessage,"hxdiscord.endpoints.Endpoints","startThreadWithoutMessage",0x97c02679,"hxdiscord.endpoints.Endpoints.startThreadWithoutMessage","hxdiscord/endpoints/Endpoints.hx",1517,0x915cbb64)
static const bool _hx_array_data_934e271c_137[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1567_startThreadInForumChannel,"hxdiscord.endpoints.Endpoints","startThreadInForumChannel",0xe7f65ac1,"hxdiscord.endpoints.Endpoints.startThreadInForumChannel","hxdiscord/endpoints/Endpoints.hx",1567,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1574_startThreadInForumChannel,"hxdiscord.endpoints.Endpoints","startThreadInForumChannel",0xe7f65ac1,"hxdiscord.endpoints.Endpoints.startThreadInForumChannel","hxdiscord/endpoints/Endpoints.hx",1574,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1554_startThreadInForumChannel,"hxdiscord.endpoints.Endpoints","startThreadInForumChannel",0xe7f65ac1,"hxdiscord.endpoints.Endpoints.startThreadInForumChannel","hxdiscord/endpoints/Endpoints.hx",1554,0x915cbb64)
static const bool _hx_array_data_934e271c_141[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1600_joinThread,"hxdiscord.endpoints.Endpoints","joinThread",0x62c66a66,"hxdiscord.endpoints.Endpoints.joinThread","hxdiscord/endpoints/Endpoints.hx",1600,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1607_joinThread,"hxdiscord.endpoints.Endpoints","joinThread",0x62c66a66,"hxdiscord.endpoints.Endpoints.joinThread","hxdiscord/endpoints/Endpoints.hx",1607,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1590_joinThread,"hxdiscord.endpoints.Endpoints","joinThread",0x62c66a66,"hxdiscord.endpoints.Endpoints.joinThread","hxdiscord/endpoints/Endpoints.hx",1590,0x915cbb64)
static const bool _hx_array_data_934e271c_145[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1634_addThreadMember,"hxdiscord.endpoints.Endpoints","addThreadMember",0x7b38f333,"hxdiscord.endpoints.Endpoints.addThreadMember","hxdiscord/endpoints/Endpoints.hx",1634,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1641_addThreadMember,"hxdiscord.endpoints.Endpoints","addThreadMember",0x7b38f333,"hxdiscord.endpoints.Endpoints.addThreadMember","hxdiscord/endpoints/Endpoints.hx",1641,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1624_addThreadMember,"hxdiscord.endpoints.Endpoints","addThreadMember",0x7b38f333,"hxdiscord.endpoints.Endpoints.addThreadMember","hxdiscord/endpoints/Endpoints.hx",1624,0x915cbb64)
static const bool _hx_array_data_934e271c_149[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1667_leaveThread,"hxdiscord.endpoints.Endpoints","leaveThread",0xc615cacf,"hxdiscord.endpoints.Endpoints.leaveThread","hxdiscord/endpoints/Endpoints.hx",1667,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1674_leaveThread,"hxdiscord.endpoints.Endpoints","leaveThread",0xc615cacf,"hxdiscord.endpoints.Endpoints.leaveThread","hxdiscord/endpoints/Endpoints.hx",1674,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1657_leaveThread,"hxdiscord.endpoints.Endpoints","leaveThread",0xc615cacf,"hxdiscord.endpoints.Endpoints.leaveThread","hxdiscord/endpoints/Endpoints.hx",1657,0x915cbb64)
static const bool _hx_array_data_934e271c_153[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1701_removeThreadMember,"hxdiscord.endpoints.Endpoints","removeThreadMember",0x5563213a,"hxdiscord.endpoints.Endpoints.removeThreadMember","hxdiscord/endpoints/Endpoints.hx",1701,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1708_removeThreadMember,"hxdiscord.endpoints.Endpoints","removeThreadMember",0x5563213a,"hxdiscord.endpoints.Endpoints.removeThreadMember","hxdiscord/endpoints/Endpoints.hx",1708,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1691_removeThreadMember,"hxdiscord.endpoints.Endpoints","removeThreadMember",0x5563213a,"hxdiscord.endpoints.Endpoints.removeThreadMember","hxdiscord/endpoints/Endpoints.hx",1691,0x915cbb64)
static const bool _hx_array_data_934e271c_157[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1737_getThreadMember,"hxdiscord.endpoints.Endpoints","getThreadMember",0x17d3dd28,"hxdiscord.endpoints.Endpoints.getThreadMember","hxdiscord/endpoints/Endpoints.hx",1737,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1745_getThreadMember,"hxdiscord.endpoints.Endpoints","getThreadMember",0x17d3dd28,"hxdiscord.endpoints.Endpoints.getThreadMember","hxdiscord/endpoints/Endpoints.hx",1745,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1725_getThreadMember,"hxdiscord.endpoints.Endpoints","getThreadMember",0x17d3dd28,"hxdiscord.endpoints.Endpoints.getThreadMember","hxdiscord/endpoints/Endpoints.hx",1725,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1773_listThreadMembers,"hxdiscord.endpoints.Endpoints","listThreadMembers",0x73c0821f,"hxdiscord.endpoints.Endpoints.listThreadMembers","hxdiscord/endpoints/Endpoints.hx",1773,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1781_listThreadMembers,"hxdiscord.endpoints.Endpoints","listThreadMembers",0x73c0821f,"hxdiscord.endpoints.Endpoints.listThreadMembers","hxdiscord/endpoints/Endpoints.hx",1781,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1761_listThreadMembers,"hxdiscord.endpoints.Endpoints","listThreadMembers",0x73c0821f,"hxdiscord.endpoints.Endpoints.listThreadMembers","hxdiscord/endpoints/Endpoints.hx",1761,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1808_listPublicArchivedThreads,"hxdiscord.endpoints.Endpoints","listPublicArchivedThreads",0xef16906e,"hxdiscord.endpoints.Endpoints.listPublicArchivedThreads","hxdiscord/endpoints/Endpoints.hx",1808,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1816_listPublicArchivedThreads,"hxdiscord.endpoints.Endpoints","listPublicArchivedThreads",0xef16906e,"hxdiscord.endpoints.Endpoints.listPublicArchivedThreads","hxdiscord/endpoints/Endpoints.hx",1816,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1796_listPublicArchivedThreads,"hxdiscord.endpoints.Endpoints","listPublicArchivedThreads",0xef16906e,"hxdiscord.endpoints.Endpoints.listPublicArchivedThreads","hxdiscord/endpoints/Endpoints.hx",1796,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1844_listPrivateArchivedThreads,"hxdiscord.endpoints.Endpoints","listPrivateArchivedThreads",0xf594d574,"hxdiscord.endpoints.Endpoints.listPrivateArchivedThreads","hxdiscord/endpoints/Endpoints.hx",1844,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1852_listPrivateArchivedThreads,"hxdiscord.endpoints.Endpoints","listPrivateArchivedThreads",0xf594d574,"hxdiscord.endpoints.Endpoints.listPrivateArchivedThreads","hxdiscord/endpoints/Endpoints.hx",1852,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1832_listPrivateArchivedThreads,"hxdiscord.endpoints.Endpoints","listPrivateArchivedThreads",0xf594d574,"hxdiscord.endpoints.Endpoints.listPrivateArchivedThreads","hxdiscord/endpoints/Endpoints.hx",1832,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1879_listJoinedPrivateArchivedThreads,"hxdiscord.endpoints.Endpoints","listJoinedPrivateArchivedThreads",0x7acf2f1d,"hxdiscord.endpoints.Endpoints.listJoinedPrivateArchivedThreads","hxdiscord/endpoints/Endpoints.hx",1879,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1887_listJoinedPrivateArchivedThreads,"hxdiscord.endpoints.Endpoints","listJoinedPrivateArchivedThreads",0x7acf2f1d,"hxdiscord.endpoints.Endpoints.listJoinedPrivateArchivedThreads","hxdiscord/endpoints/Endpoints.hx",1887,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1867_listJoinedPrivateArchivedThreads,"hxdiscord.endpoints.Endpoints","listJoinedPrivateArchivedThreads",0x7acf2f1d,"hxdiscord.endpoints.Endpoints.listJoinedPrivateArchivedThreads","hxdiscord/endpoints/Endpoints.hx",1867,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1915_modifyGuildRole,"hxdiscord.endpoints.Endpoints","modifyGuildRole",0xc8e41d9d,"hxdiscord.endpoints.Endpoints.modifyGuildRole","hxdiscord/endpoints/Endpoints.hx",1915,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1922_modifyGuildRole,"hxdiscord.endpoints.Endpoints","modifyGuildRole",0xc8e41d9d,"hxdiscord.endpoints.Endpoints.modifyGuildRole","hxdiscord/endpoints/Endpoints.hx",1922,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1904_modifyGuildRole,"hxdiscord.endpoints.Endpoints","modifyGuildRole",0xc8e41d9d,"hxdiscord.endpoints.Endpoints.modifyGuildRole","hxdiscord/endpoints/Endpoints.hx",1904,0x915cbb64)
static const bool _hx_array_data_934e271c_176[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1950_addGuildMemberRole,"hxdiscord.endpoints.Endpoints","addGuildMemberRole",0x5ffdb374,"hxdiscord.endpoints.Endpoints.addGuildMemberRole","hxdiscord/endpoints/Endpoints.hx",1950,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1957_addGuildMemberRole,"hxdiscord.endpoints.Endpoints","addGuildMemberRole",0x5ffdb374,"hxdiscord.endpoints.Endpoints.addGuildMemberRole","hxdiscord/endpoints/Endpoints.hx",1957,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1940_addGuildMemberRole,"hxdiscord.endpoints.Endpoints","addGuildMemberRole",0x5ffdb374,"hxdiscord.endpoints.Endpoints.addGuildMemberRole","hxdiscord/endpoints/Endpoints.hx",1940,0x915cbb64)
static const bool _hx_array_data_934e271c_180[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1985_removeGuildMemberRole,"hxdiscord.endpoints.Endpoints","removeGuildMemberRole",0x2884c3cd,"hxdiscord.endpoints.Endpoints.removeGuildMemberRole","hxdiscord/endpoints/Endpoints.hx",1985,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1992_removeGuildMemberRole,"hxdiscord.endpoints.Endpoints","removeGuildMemberRole",0x2884c3cd,"hxdiscord.endpoints.Endpoints.removeGuildMemberRole","hxdiscord/endpoints/Endpoints.hx",1992,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_1975_removeGuildMemberRole,"hxdiscord.endpoints.Endpoints","removeGuildMemberRole",0x2884c3cd,"hxdiscord.endpoints.Endpoints.removeGuildMemberRole","hxdiscord/endpoints/Endpoints.hx",1975,0x915cbb64)
static const bool _hx_array_data_934e271c_184[] = {
	1,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2018_getGlobalApplicationCommands,"hxdiscord.endpoints.Endpoints","getGlobalApplicationCommands",0xe7b831b1,"hxdiscord.endpoints.Endpoints.getGlobalApplicationCommands","hxdiscord/endpoints/Endpoints.hx",2018,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2025_getGlobalApplicationCommands,"hxdiscord.endpoints.Endpoints","getGlobalApplicationCommands",0xe7b831b1,"hxdiscord.endpoints.Endpoints.getGlobalApplicationCommands","hxdiscord/endpoints/Endpoints.hx",2025,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2009_getGlobalApplicationCommands,"hxdiscord.endpoints.Endpoints","getGlobalApplicationCommands",0xe7b831b1,"hxdiscord.endpoints.Endpoints.getGlobalApplicationCommands","hxdiscord/endpoints/Endpoints.hx",2009,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2050_createGlobalApplicationCommand,"hxdiscord.endpoints.Endpoints","createGlobalApplicationCommand",0xf4b58a4c,"hxdiscord.endpoints.Endpoints.createGlobalApplicationCommand","hxdiscord/endpoints/Endpoints.hx",2050,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2057_createGlobalApplicationCommand,"hxdiscord.endpoints.Endpoints","createGlobalApplicationCommand",0xf4b58a4c,"hxdiscord.endpoints.Endpoints.createGlobalApplicationCommand","hxdiscord/endpoints/Endpoints.hx",2057,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2039_createGlobalApplicationCommand,"hxdiscord.endpoints.Endpoints","createGlobalApplicationCommand",0xf4b58a4c,"hxdiscord.endpoints.Endpoints.createGlobalApplicationCommand","hxdiscord/endpoints/Endpoints.hx",2039,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2092_bulkOverwriteGlobalApplicationCommands,"hxdiscord.endpoints.Endpoints","bulkOverwriteGlobalApplicationCommands",0x5edd04ce,"hxdiscord.endpoints.Endpoints.bulkOverwriteGlobalApplicationCommands","hxdiscord/endpoints/Endpoints.hx",2092,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2098_bulkOverwriteGlobalApplicationCommands,"hxdiscord.endpoints.Endpoints","bulkOverwriteGlobalApplicationCommands",0x5edd04ce,"hxdiscord.endpoints.Endpoints.bulkOverwriteGlobalApplicationCommands","hxdiscord/endpoints/Endpoints.hx",2098,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2068_bulkOverwriteGlobalApplicationCommands,"hxdiscord.endpoints.Endpoints","bulkOverwriteGlobalApplicationCommands",0x5edd04ce,"hxdiscord.endpoints.Endpoints.bulkOverwriteGlobalApplicationCommands","hxdiscord/endpoints/Endpoints.hx",2068,0x915cbb64)
static const bool _hx_array_data_934e271c_196[] = {
	0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2136_bulkDeleteMessages,"hxdiscord.endpoints.Endpoints","bulkDeleteMessages",0x5039f4db,"hxdiscord.endpoints.Endpoints.bulkDeleteMessages","hxdiscord/endpoints/Endpoints.hx",2136,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2143_bulkDeleteMessages,"hxdiscord.endpoints.Endpoints","bulkDeleteMessages",0x5039f4db,"hxdiscord.endpoints.Endpoints.bulkDeleteMessages","hxdiscord/endpoints/Endpoints.hx",2143,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2123_bulkDeleteMessages,"hxdiscord.endpoints.Endpoints","bulkDeleteMessages",0x5039f4db,"hxdiscord.endpoints.Endpoints.bulkDeleteMessages","hxdiscord/endpoints/Endpoints.hx",2123,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2182_makeInteractionThink,"hxdiscord.endpoints.Endpoints","makeInteractionThink",0x1aeb7f60,"hxdiscord.endpoints.Endpoints.makeInteractionThink","hxdiscord/endpoints/Endpoints.hx",2182,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2188_makeInteractionThink,"hxdiscord.endpoints.Endpoints","makeInteractionThink",0x1aeb7f60,"hxdiscord.endpoints.Endpoints.makeInteractionThink","hxdiscord/endpoints/Endpoints.hx",2188,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2154_makeInteractionThink,"hxdiscord.endpoints.Endpoints","makeInteractionThink",0x1aeb7f60,"hxdiscord.endpoints.Endpoints.makeInteractionThink","hxdiscord/endpoints/Endpoints.hx",2154,0x915cbb64)
static const ::String _hx_array_data_934e271c_203[] = {
	HX_("",00,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2222_showInteractionModal,"hxdiscord.endpoints.Endpoints","showInteractionModal",0x202600aa,"hxdiscord.endpoints.Endpoints.showInteractionModal","hxdiscord/endpoints/Endpoints.hx",2222,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2228_showInteractionModal,"hxdiscord.endpoints.Endpoints","showInteractionModal",0x202600aa,"hxdiscord.endpoints.Endpoints.showInteractionModal","hxdiscord/endpoints/Endpoints.hx",2228,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2200_showInteractionModal,"hxdiscord.endpoints.Endpoints","showInteractionModal",0x202600aa,"hxdiscord.endpoints.Endpoints.showInteractionModal","hxdiscord/endpoints/Endpoints.hx",2200,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2371_sendInteractionCallback,"hxdiscord.endpoints.Endpoints","sendInteractionCallback",0xd3b5e7fd,"hxdiscord.endpoints.Endpoints.sendInteractionCallback","hxdiscord/endpoints/Endpoints.hx",2371,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2380_sendInteractionCallback,"hxdiscord.endpoints.Endpoints","sendInteractionCallback",0xd3b5e7fd,"hxdiscord.endpoints.Endpoints.sendInteractionCallback","hxdiscord/endpoints/Endpoints.hx",2380,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2240_sendInteractionCallback,"hxdiscord.endpoints.Endpoints","sendInteractionCallback",0xd3b5e7fd,"hxdiscord.endpoints.Endpoints.sendInteractionCallback","hxdiscord/endpoints/Endpoints.hx",2240,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2408_editInteractionResponse,"hxdiscord.endpoints.Endpoints","editInteractionResponse",0x1d980137,"hxdiscord.endpoints.Endpoints.editInteractionResponse","hxdiscord/endpoints/Endpoints.hx",2408,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2414_editInteractionResponse,"hxdiscord.endpoints.Endpoints","editInteractionResponse",0x1d980137,"hxdiscord.endpoints.Endpoints.editInteractionResponse","hxdiscord/endpoints/Endpoints.hx",2414,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_2396_editInteractionResponse,"hxdiscord.endpoints.Endpoints","editInteractionResponse",0x1d980137,"hxdiscord.endpoints.Endpoints.editInteractionResponse","hxdiscord/endpoints/Endpoints.hx",2396,0x915cbb64)
static const bool _hx_array_data_934e271c_215[] = {
	0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_26_boot,"hxdiscord.endpoints.Endpoints","boot",0x8c8cc6c4,"hxdiscord.endpoints.Endpoints.boot","hxdiscord/endpoints/Endpoints.hx",26,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_28_boot,"hxdiscord.endpoints.Endpoints","boot",0x8c8cc6c4,"hxdiscord.endpoints.Endpoints.boot","hxdiscord/endpoints/Endpoints.hx",28,0x915cbb64)
HX_LOCAL_STACK_FRAME(_hx_pos_f1f00be883a777db_33_boot,"hxdiscord.endpoints.Endpoints","boot",0x8c8cc6c4,"hxdiscord.endpoints.Endpoints.boot","hxdiscord/endpoints/Endpoints.hx",33,0x915cbb64)
namespace hxdiscord{
namespace endpoints{

void Endpoints_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_f1f00be883a777db_31_new)
HXDLIN(  31)		this->getGateway = HX_("/gateway",b5,33,9c,11);
            	}

Dynamic Endpoints_obj::__CreateEmpty() { return new Endpoints_obj; }

void *Endpoints_obj::_hx_vtable = 0;

Dynamic Endpoints_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Endpoints_obj > _hx_result = new Endpoints_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Endpoints_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1977e4d0;
}

::String Endpoints_obj::url;

::String Endpoints_obj::version;

::String Endpoints_obj::getGatewayBot;

::String Endpoints_obj::getEndpointData(::String token,::String _url,::String _version,::String _endpointPath,::String _args){
            	HX_STACKFRAME(&_hx_pos_f1f00be883a777db_38_getEndpointData)
HXDLIN(  38)		return ::hxdiscord::utils::Https_obj::sendRequest(_url,_version,_endpointPath,_args,token);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Endpoints_obj,getEndpointData,return )

::String Endpoints_obj::createDM(::String userID){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,_data) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_64_createDM)
HXLINE(  65)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(  67)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),67,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createDM",85,59,f4,2b)));
            			}
HXLINE(  69)			_data[0] = data;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_73_createDM)
HXLINE(  74)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),74,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createDM",85,59,f4,2b)));
HXLINE(  75)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),75,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createDM",85,59,f4,2b)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_49_createDM)
HXLINE(  50)		::Array< ::String > _data = ::Array_obj< ::String >::__new(0);
HXLINE(  51)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/users/@me/channels",bd,64,0c,aa)));
HXLINE(  53)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(  54)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(  55)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(  57)		 ::hxdiscord::utils::Http r1 = r;
HXDLIN(  57)		 ::Dynamic replacer = null();
HXDLIN(  57)		::String space = null();
HXDLIN(  57)		r1->setPostData(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("recipient_id",c1,a3,43,1a),userID)),replacer,space));
HXLINE(  61)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(  63)		r->onData =  ::Dynamic(new _hx_Closure_0(_data));
HXLINE(  72)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(  78)		r->send();
HXLINE(  80)		return _data->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,createDM,return )

 ::hxdiscord::types::User Endpoints_obj::getCurrentUser(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,user) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_101_getCurrentUser)
HXLINE( 101)			user[0] =  ::hxdiscord::types::User_obj::__alloc( HX_CTX ,null(), ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,data)->doParse());
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_105_getCurrentUser)
HXLINE( 106)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),106,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getCurrentUser",2e,be,dd,0d)));
HXLINE( 107)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),107,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getCurrentUser",2e,be,dd,0d)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_89_getCurrentUser)
HXLINE(  90)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/users/@me",82,ec,a7,ba)));
HXLINE(  92)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(  93)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(  95)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(  97)		::Array< ::Dynamic> user = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXLINE(  99)		r->onData =  ::Dynamic(new _hx_Closure_0(user));
HXLINE( 104)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE( 110)		r->send();
HXLINE( 112)		return user->__get(0).StaticCast<  ::hxdiscord::types::User >();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Endpoints_obj,getCurrentUser,return )

bool Endpoints_obj::hasPermission(::String userID,::String guild_id,::String permissionToLookFor){
            		HX_BEGIN_LOCAL_FUNC_S3(::hx::LocalFunc,_hx_Closure_0,::String,guild_id,::Array< bool >,hasPermission,::String,permissionToLookFor) HXARGC(1)
            		void _hx_run(::String dataG){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_132_hasPermission)
HXLINE( 133)			::String data = ::hxdiscord::endpoints::Endpoints_obj::getRoles(guild_id);
HXLINE( 136)			::Array< ::String > roles = ( (::Array< ::String >)( ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,dataG)->doParse()->__Field(HX_("roles",3d,1c,5f,ed),::hx::paccDynamic)) );
HXLINE( 138)			 ::Dynamic jsonRole =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,data)->doParse();
HXLINE( 139)			{
HXLINE( 139)				int _g = 0;
HXDLIN( 139)				int _g1 = ( (int)(jsonRole->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic)) );
HXDLIN( 139)				while((_g < _g1)){
HXLINE( 139)					_g = (_g + 1);
HXDLIN( 139)					int i = (_g - 1);
HXLINE( 141)					{
HXLINE( 141)						int _g2 = 0;
HXDLIN( 141)						int _g3 = roles->length;
HXDLIN( 141)						while((_g2 < _g3)){
HXLINE( 141)							_g2 = (_g2 + 1);
HXLINE( 143)							if (::hx::IsEq( jsonRole->__GetItem(i)->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic),roles->__get((_g2 - 1)) )) {
HXLINE( 145)								::Array< ::String > array = ::hxdiscord::utils::Permissions_obj::resolve(::haxe::_Int64::Int64_Impl__obj::fromFloat(::Std_obj::parseFloat(( (::String)(jsonRole->__GetItem(i)->__Field(HX_("permissions",84,7c,d4,0e),::hx::paccDynamic)) ))));
HXLINE( 146)								if (array->contains(permissionToLookFor)) {
HXLINE( 148)									hasPermission[0] = true;
            								}
            							}
            						}
            					}
            				}
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_156_hasPermission)
HXLINE( 157)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),157,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("hasPermission",09,29,25,20)));
HXLINE( 158)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),158,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("hasPermission",09,29,25,20)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_123_hasPermission)
HXLINE( 124)		::Array< bool > hasPermission = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_13,1);
HXLINE( 125)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/members/",65,58,09,c2)) + userID));
HXLINE( 126)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 127)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 128)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE( 131)		r->onData =  ::Dynamic(new _hx_Closure_0(guild_id,hasPermission,permissionToLookFor));
HXLINE( 155)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE( 161)		r->send();
HXLINE( 162)		return hasPermission->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,hasPermission,return )

 ::hxdiscord::types::User Endpoints_obj::getUser(::String id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,user) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_182_getUser)
HXLINE( 182)			user[0] =  ::hxdiscord::types::User_obj::__alloc( HX_CTX ,null(), ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,data)->doParse());
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_186_getUser)
HXLINE( 187)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),187,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getUser",01,42,30,20)));
HXLINE( 188)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),188,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getUser",01,42,30,20)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_170_getUser)
HXLINE( 171)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/users/",d6,2c,60,e4)) + id));
HXLINE( 174)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 175)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 176)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE( 178)		::Array< ::Dynamic> user = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXLINE( 180)		r->onData =  ::Dynamic(new _hx_Closure_0(user));
HXLINE( 185)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE( 191)		r->send();
HXLINE( 193)		return user->__get(0).StaticCast<  ::hxdiscord::types::User >();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,getUser,return )

void Endpoints_obj::getGuildMember(::String guild_id,::String id, ::Dynamic cb, ::Dynamic err){
            		HX_BEGIN_LOCAL_FUNC_S3(::hx::LocalFunc,_hx_Closure_0,::String,guild_id,::Array< ::Dynamic>,guildmember, ::Dynamic,cb) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_213_getGuildMember)
HXLINE( 214)			::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),214,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGuildMember",77,33,1d,61)));
HXLINE( 215)			::Array< ::Dynamic> guildmember1 = guildmember;
HXDLIN( 215)			 ::Dynamic _hx_tmp =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,data)->doParse();
HXDLIN( 215)			guildmember1[0] =  ::hxdiscord::types::Member_obj::__alloc( HX_CTX ,_hx_tmp,guild_id);
HXLINE( 216)			cb(guildmember->__get(0).StaticCast<  ::hxdiscord::types::Member >());
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1, ::Dynamic,err, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_220_getGuildMember)
HXLINE( 221)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),221,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGuildMember",77,33,1d,61)));
HXLINE( 222)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),222,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGuildMember",77,33,1d,61)));
HXLINE( 223)			err(error);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_203_getGuildMember)
HXLINE( 204)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/members/",65,58,09,c2)) + id));
HXLINE( 206)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 207)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 208)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE( 210)		::Array< ::Dynamic> guildmember = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXLINE( 212)		r->onData =  ::Dynamic(new _hx_Closure_0(guild_id,guildmember,cb));
HXLINE( 219)		r->onError =  ::Dynamic(new _hx_Closure_1(err,r));
HXLINE( 226)		r->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Endpoints_obj,getGuildMember,(void))

::String Endpoints_obj::getRoles(::String guild_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,response) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_246_getRoles)
HXLINE( 247)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 249)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),249,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getRoles",c7,2b,36,4d)));
            			}
HXLINE( 251)			response[0] = data;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_255_getRoles)
HXLINE( 256)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),256,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getRoles",c7,2b,36,4d)));
HXLINE( 257)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),257,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getRoles",c7,2b,36,4d)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_234_getRoles)
HXLINE( 235)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/roles",ae,11,25,b8)));
HXLINE( 238)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 239)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 240)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE( 242)		::Array< ::String > response = ::Array_obj< ::String >::fromData( _hx_array_data_934e271c_23,1);
HXLINE( 245)		r->onData =  ::Dynamic(new _hx_Closure_0(response));
HXLINE( 254)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE( 260)		r->send();
HXLINE( 262)		return response->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,getRoles,return )

void Endpoints_obj::deleteMessage(::String channel_id,::String m_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_279_deleteMessage)
HXLINE( 280)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),280,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteMessage",dc,c8,9a,f8)));
HXLINE( 281)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),281,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteMessage",dc,c8,9a,f8)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_285_deleteMessage)
HXLINE( 285)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 287)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),287,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteMessage",dc,c8,9a,f8)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_271_deleteMessage)
HXLINE( 272)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages/",d4,db,cb,76)) + m_id));
HXLINE( 274)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 275)		req->addHeader(HX_("Content-type",ae,3d,84,51),HX_("application/json",87,d8,7f,4e));
HXLINE( 276)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 277)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE( 279)		req->onError =  ::Dynamic(new _hx_Closure_0(req));
HXLINE( 284)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 291)		req->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,deleteMessage,(void))

void Endpoints_obj::editMessage(::String channel_id,::String m_id, ::Dynamic m){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_313_editMessage)
HXLINE( 314)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),314,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("editMessage",dd,48,19,cc)));
HXLINE( 315)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),315,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("editMessage",dd,48,19,cc)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_319_editMessage)
HXLINE( 319)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 321)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),321,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("editMessage",dd,48,19,cc)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_303_editMessage)
HXLINE( 304)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages/",d4,db,cb,76)) + m_id));
HXLINE( 305)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE( 307)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 308)		req->addHeader(HX_("Content-type",ae,3d,84,51),HX_("application/json",87,d8,7f,4e));
HXLINE( 309)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 310)		 ::hxdiscord::utils::Http req1 = req;
HXDLIN( 310)		 ::Dynamic replacer = null();
HXDLIN( 310)		::String space = null();
HXDLIN( 310)		req1->setPostData(::haxe::format::JsonPrinter_obj::print(m,replacer,space));
HXLINE( 311)		req->setMethod(HX_("PATCH",a8,3e,45,3b));
HXLINE( 313)		req->onError =  ::Dynamic(new _hx_Closure_0(req));
HXLINE( 318)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 325)		req->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,editMessage,(void))

 ::Dynamic Endpoints_obj::sendMessage(::String channel_id, ::Dynamic message,::String id,bool reply){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,response) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_431_sendMessage)
HXLINE( 432)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 434)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),434,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendMessage",5f,89,1d,24)));
            			}
HXLINE( 436)			response[0] = data;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_440_sendMessage)
HXLINE( 441)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),441,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendMessage",5f,89,1d,24)));
HXLINE( 442)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),442,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendMessage",5f,89,1d,24)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_336_sendMessage)
HXLINE( 338)		::Array< ::String > response = ::Array_obj< ::String >::__new(0);
HXLINE( 339)		if (reply) {
HXLINE( 341)			message->__SetField(HX_("message_reference",13,58,d2,28), ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("message_id",93,d2,af,d2),id)),::hx::paccDynamic);
            		}
HXLINE( 345)		bool attachments = false;
HXLINE( 346)		if (::hx::IsNull( message->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic) )) {
HXLINE( 347)			attachments = false;
            		}
            		else {
HXLINE( 349)			attachments = true;
            		}
HXLINE( 352)		 ::haxe::io::BytesOutput bytesOutput =  ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE( 353)		bytesOutput->writeString(HX_("--boundary",4a,10,dd,2e),null());
HXLINE( 354)		bytesOutput->writeString(HX_("\n",0a,00,00,00),null());
HXLINE( 355)		bytesOutput->writeString(HX_("Content-Disposition: form-data; name=\"payload_json\"",2a,f4,d2,13),null());
HXLINE( 356)		bytesOutput->writeString(HX_("\n",0a,00,00,00),null());
HXLINE( 357)		bytesOutput->writeString(HX_("Content-Type: application/json;",60,bf,16,91),null());
HXLINE( 358)		bytesOutput->writeString(HX_("\n\n",c0,08,00,00),null());
HXLINE( 360)		 ::Dynamic replacer = null();
HXDLIN( 360)		::String space = null();
HXDLIN( 360)		 ::Dynamic jsonCheck =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,::haxe::format::JsonPrinter_obj::print(message,replacer,space))->doParse();
HXLINE( 361)		if (::hx::IsNotNull( jsonCheck->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic) )) {
HXLINE( 364)			::String thing = HX_("",00,00,00,00);
HXLINE( 365)			 ::Dynamic replacer1 = null();
HXDLIN( 365)			::String space1 = null();
HXDLIN( 365)			 ::Dynamic returnJson =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,::haxe::format::JsonPrinter_obj::print(message,replacer1,space1))->doParse();
HXLINE( 366)			{
HXLINE( 366)				int _g = 0;
HXDLIN( 366)				int _g1 = ( (int)( ::Dynamic(jsonCheck->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic)) );
HXDLIN( 366)				while((_g < _g1)){
HXLINE( 366)					_g = (_g + 1);
HXDLIN( 366)					int i = (_g - 1);
HXLINE( 368)					thing = ( (::String)( ::Dynamic( ::Dynamic(jsonCheck->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic))->toString()) );
HXLINE( 369)					::Array< ::String > split = thing.split(HX_("/",2f,00,00,00));
HXLINE( 370)					 ::Dynamic(returnJson->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i)->__SetField(HX_("filename",c7,2e,6a,77),split->__get((split->length - 1)),::hx::paccDynamic);
            				}
            			}
HXLINE( 372)			 ::Dynamic replacer2 = null();
HXDLIN( 372)			::String space2 = null();
HXDLIN( 372)			bytesOutput->writeString((::haxe::format::JsonPrinter_obj::print(returnJson,replacer2,space2) + HX_("\n",0a,00,00,00)),null());
            		}
            		else {
HXLINE( 376)			 ::Dynamic replacer3 = null();
HXDLIN( 376)			::String space3 = null();
HXDLIN( 376)			bytesOutput->writeString((::haxe::format::JsonPrinter_obj::print(message,replacer3,space3) + HX_("\n",0a,00,00,00)),null());
            		}
HXLINE( 378)		if (!(attachments)) {
HXLINE( 380)			bytesOutput->writeString(HX_("--boundary--",2a,5e,79,6c),null());
            		}
            		else {
HXLINE( 382)			if (attachments) {
HXLINE( 384)				 ::Dynamic replacer4 = null();
HXDLIN( 384)				::String space4 = null();
HXDLIN( 384)				 ::Dynamic json =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,::haxe::format::JsonPrinter_obj::print(message,replacer4,space4))->doParse();
HXLINE( 385)				{
HXLINE( 385)					int _g2 = 0;
HXDLIN( 385)					int _g3 = ( (::cpp::VirtualArray)(message->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic)) )->get_length();
HXDLIN( 385)					while((_g2 < _g3)){
HXLINE( 385)						_g2 = (_g2 + 1);
HXDLIN( 385)						int i1 = (_g2 - 1);
HXLINE( 387)						::String filename = HX_("",00,00,00,00);
HXLINE( 388)						::String thing1 = HX_("",00,00,00,00);
HXLINE( 392)						thing1 = ( (::String)( ::Dynamic(json->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i1)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) ).toString();
HXLINE( 394)						if ((thing1.indexOf(HX_("/",2f,00,00,00),null()) != -1)) {
HXLINE( 396)							::Array< ::String > split1 = thing1.split(HX_("/",2f,00,00,00));
HXLINE( 397)							filename = split1->__get((split1->length - 1));
            						}
            						else {
HXLINE( 401)							filename = thing1;
            						}
HXLINE( 403)						if (!(::sys::FileSystem_obj::exists(( (::String)( ::Dynamic(json->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i1)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) )))) {
HXLINE( 405)							HX_STACK_DO_THROW( ::Dynamic(((HX_("\"",22,00,00,00) +  ::Dynamic(json->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i1)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) + HX_("\" does not exist.",0d,75,ac,03))));
            						}
HXLINE( 407)						bytesOutput->writeString(HX_("--boundary\n",80,30,91,d2),null());
HXLINE( 408)						bytesOutput->writeString((((((HX_("Content-Disposition: form-data; name=\"files[",03,2a,e0,6d) + i1) + HX_("]\"; filename=\"",36,84,dc,08)) + filename) + HX_("\"",22,00,00,00)) + HX_("\n",0a,00,00,00)),null());
HXLINE( 409)						bytesOutput->writeString(((HX_("Content-Type: ",f4,2b,e6,1d) + ::hxdiscord::utils::MimeResolver_obj::getMimeType(filename)) + HX_(";base64",0a,5c,9a,ea)),null());
HXLINE( 410)						bytesOutput->writeString(HX_("\n\n",c0,08,00,00),null());
HXLINE( 411)						 ::haxe::io::Bytes _hx_tmp = ::sys::io::File_obj::getBytes(( (::String)( ::Dynamic(json->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i1)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) ));
HXDLIN( 411)						bytesOutput->writeFullBytes(_hx_tmp,0,( (int)(::sys::FileSystem_obj::stat(( (::String)( ::Dynamic(json->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i1)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) ))->__Field(HX_("size",c1,a0,53,4c),::hx::paccDynamic)) ));
HXLINE( 412)						bytesOutput->writeString(HX_("\n",0a,00,00,00),null());
            					}
            				}
HXLINE( 414)				bytesOutput->writeString(HX_("--boundary--",2a,5e,79,6c),null());
            			}
            		}
HXLINE( 417)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages",fb,1f,50,ef)));
HXLINE( 419)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 420)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 421)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("multipart/form-data; boundary=boundary",e8,7b,54,aa));
HXLINE( 423)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE( 426)		 ::hxdiscord::utils::Http r1 = r;
HXDLIN( 426)		r1->setPostBytes(bytesOutput->getBytes());
HXLINE( 430)		r->onData =  ::Dynamic(new _hx_Closure_0(response));
HXLINE( 439)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE( 445)		r->send();
HXLINE( 447)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 448)			 ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,response->__get(0))->doParse();
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g4 = _hx_e;
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE( 453)		return  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,response->__get(0))->doParse();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Endpoints_obj,sendMessage,return )

void Endpoints_obj::sendMessageToChannelID(::String channelID, ::Dynamic data){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_581_sendMessageToChannelID)
HXLINE( 581)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 583)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),583,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendMessageToChannelID",44,07,b5,0f)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_588_sendMessageToChannelID)
HXLINE( 589)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),589,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendMessageToChannelID",44,07,b5,0f)));
HXLINE( 590)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),590,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendMessageToChannelID",44,07,b5,0f)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_563_sendMessageToChannelID)
HXLINE( 564)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((HX_("https://discord.com/api/v9/channels/",87,38,4f,64) + channelID) + HX_("/messages",fb,1f,50,ef)));
HXLINE( 566)		if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 568)			::haxe::Log_obj::trace(channelID,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),568,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendMessageToChannelID",44,07,b5,0f)));
HXLINE( 569)			::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),569,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendMessageToChannelID",44,07,b5,0f)));
            		}
HXLINE( 572)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 573)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE( 574)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 575)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE( 577)		 ::hxdiscord::utils::Http r1 = r;
HXDLIN( 577)		 ::Dynamic replacer = null();
HXDLIN( 577)		::String space = null();
HXDLIN( 577)		r1->setPostData(::haxe::format::JsonPrinter_obj::print(data,replacer,space));
HXLINE( 579)		r->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE( 587)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE( 593)		r->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,sendMessageToChannelID,(void))

void Endpoints_obj::sendDataToMessageAPI( ::Dynamic data,::String channelId){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_611_sendDataToMessageAPI)
HXLINE( 611)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 613)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),613,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendDataToMessageAPI",20,dd,b3,48)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_618_sendDataToMessageAPI)
HXLINE( 619)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),619,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendDataToMessageAPI",20,dd,b3,48)));
HXLINE( 620)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),620,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendDataToMessageAPI",20,dd,b3,48)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_598_sendDataToMessageAPI)
HXLINE( 599)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channelId) + HX_("/messages",fb,1f,50,ef)));
HXLINE( 601)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 602)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE( 603)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 605)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE( 607)		 ::hxdiscord::utils::Http r1 = r;
HXDLIN( 607)		 ::Dynamic replacer = null();
HXDLIN( 607)		::String space = null();
HXDLIN( 607)		r1->setPostData(::haxe::format::JsonPrinter_obj::print(data,replacer,space));
HXLINE( 609)		r->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE( 617)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE( 623)		r->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,sendDataToMessageAPI,(void))

void Endpoints_obj::createReaction(::String channel_id,::String message_id,::String emoji){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_644_createReaction)
HXLINE( 645)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),645,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createReaction",c5,66,ef,48)));
HXLINE( 646)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),646,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createReaction",c5,66,ef,48)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_650_createReaction)
HXLINE( 650)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 652)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),652,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createReaction",c5,66,ef,48)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_636_createReaction)
HXLINE( 637)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages/",d4,db,cb,76)) + message_id) + HX_("/reactions/",34,f9,52,64)) + emoji) + HX_("/@me",c9,f6,41,1f)));
HXLINE( 639)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 640)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 641)		req->setPostData(HX_("",00,00,00,00));
HXLINE( 642)		req->setMethod(HX_("PUT",af,fe,3c,00));
HXLINE( 644)		req->onError =  ::Dynamic(new _hx_Closure_0(req));
HXLINE( 649)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 656)		req->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,createReaction,(void))

void Endpoints_obj::deleteOwnReaction(::String channel_id,::String message_id,::String emoji){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_675_deleteOwnReaction)
HXLINE( 676)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),676,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteOwnReaction",a4,3d,e9,8c)));
HXLINE( 677)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),677,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteOwnReaction",a4,3d,e9,8c)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_681_deleteOwnReaction)
HXLINE( 681)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 683)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),683,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteOwnReaction",a4,3d,e9,8c)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_667_deleteOwnReaction)
HXLINE( 668)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages/",d4,db,cb,76)) + message_id) + HX_("/reactions/",34,f9,52,64)) + emoji) + HX_("/@me",c9,f6,41,1f)));
HXLINE( 670)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 671)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 672)		req->setPostData(HX_("",00,00,00,00));
HXLINE( 673)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE( 675)		req->onError =  ::Dynamic(new _hx_Closure_0(req));
HXLINE( 680)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 687)		req->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,deleteOwnReaction,(void))

void Endpoints_obj::deleteUserReaction(::String channel_id,::String message_id,::String emoji,::String user_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_708_deleteUserReaction)
HXLINE( 709)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),709,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteUserReaction",df,19,10,ba)));
HXLINE( 710)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),710,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteUserReaction",df,19,10,ba)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_714_deleteUserReaction)
HXLINE( 714)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 716)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),716,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteUserReaction",df,19,10,ba)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_699_deleteUserReaction)
HXLINE( 700)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages/",d4,db,cb,76)) + message_id) + HX_("/reactions/",34,f9,52,64)) + emoji) + HX_("/",2f,00,00,00)) + user_id));
HXLINE( 701)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE( 703)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 704)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 705)		req->setPostData(HX_("",00,00,00,00));
HXLINE( 706)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE( 708)		req->onError =  ::Dynamic(new _hx_Closure_0(req));
HXLINE( 713)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 720)		req->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Endpoints_obj,deleteUserReaction,(void))

void Endpoints_obj::deleteAllReactions(::String channel_id,::String message_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_739_deleteAllReactions)
HXLINE( 740)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),740,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteAllReactions",14,28,91,1c)));
HXLINE( 741)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),741,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteAllReactions",14,28,91,1c)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_745_deleteAllReactions)
HXLINE( 745)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 747)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),747,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteAllReactions",14,28,91,1c)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_730_deleteAllReactions)
HXLINE( 731)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages/",d4,db,cb,76)) + message_id) + HX_("/reactions",9b,ce,41,35)));
HXLINE( 732)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE( 734)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 735)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 736)		req->setPostData(HX_("",00,00,00,00));
HXLINE( 737)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE( 739)		req->onError =  ::Dynamic(new _hx_Closure_0(req));
HXLINE( 744)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 751)		req->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,deleteAllReactions,(void))

void Endpoints_obj::deleteAllReactionsForEmoji(::String channel_id,::String message_id,::String emoji){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_771_deleteAllReactionsForEmoji)
HXLINE( 772)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),772,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteAllReactionsForEmoji",f1,0f,25,0c)));
HXLINE( 773)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),773,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteAllReactionsForEmoji",f1,0f,25,0c)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_777_deleteAllReactionsForEmoji)
HXLINE( 777)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 779)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),779,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteAllReactionsForEmoji",f1,0f,25,0c)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_762_deleteAllReactionsForEmoji)
HXLINE( 763)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages/",d4,db,cb,76)) + message_id) + HX_("/reactions/",34,f9,52,64)) + emoji));
HXLINE( 764)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE( 766)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 767)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 768)		req->setPostData(HX_("",00,00,00,00));
HXLINE( 769)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE( 771)		req->onError =  ::Dynamic(new _hx_Closure_0(req));
HXLINE( 776)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 783)		req->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,deleteAllReactionsForEmoji,(void))

 ::hxdiscord::types::Guild Endpoints_obj::getGuild(::String guild_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,guild) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_803_getGuild)
HXLINE( 804)			 ::Dynamic d =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,data)->doParse();
HXLINE( 805)			guild[0] =  ::hxdiscord::types::Guild_obj::__alloc( HX_CTX ,d);
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_809_getGuild)
HXLINE( 810)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),810,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGuild",3d,d1,c2,fb)));
HXLINE( 811)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),811,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGuild",3d,d1,c2,fb)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_793_getGuild)
HXLINE( 794)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("?with_counts=true",0d,96,e7,50)));
HXLINE( 796)		::Array< ::Dynamic> guild = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXLINE( 798)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 799)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 800)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE( 802)		r->onData =  ::Dynamic(new _hx_Closure_0(guild));
HXLINE( 808)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE( 814)		r->send();
HXLINE( 816)		return guild->__get(0).StaticCast<  ::hxdiscord::types::Guild >();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,getGuild,return )

bool Endpoints_obj::createGuildBan(::String id,::String guild_id,::String reason){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_844_createGuildBan)
HXLINE( 845)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),845,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createGuildBan",f8,f8,e0,c3)));
HXLINE( 846)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),846,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createGuildBan",f8,f8,e0,c3)));
HXLINE( 847)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_851_createGuildBan)
HXLINE( 851)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 853)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),853,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createGuildBan",f8,f8,e0,c3)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_826_createGuildBan)
HXLINE( 827)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_62,1);
HXLINE( 828)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/bans/",5c,5d,7c,78)) + id));
HXLINE( 830)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 831)		req->addHeader(HX_("Content-type",ae,3d,84,51),HX_("application/json",87,d8,7f,4e));
HXLINE( 832)		if (::hx::IsNotNull( reason )) {
HXLINE( 834)			req->addHeader(HX_("X-Audit-Log-Reason",54,78,7a,2b),reason);
            		}
HXLINE( 836)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 837)		req->setMethod(HX_("PUT",af,fe,3c,00));
HXLINE( 839)		 ::hxdiscord::utils::Http req1 = req;
HXDLIN( 839)		 ::Dynamic replacer = null();
HXDLIN( 839)		::String space = null();
HXDLIN( 839)		req1->setPostData(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("delete_message_days",23,c3,22,fb),0)
            			->setFixed(1,HX_("delete_message_seconds",73,2d,e9,7d),0)),replacer,space));
HXLINE( 844)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE( 850)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 857)		req->send();
HXLINE( 858)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,createGuildBan,return )

bool Endpoints_obj::removeGuildBan(::String id,::String guild_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_876_removeGuildBan)
HXLINE( 877)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),877,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeGuildBan",40,b6,fc,3b)));
HXLINE( 878)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),878,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeGuildBan",40,b6,fc,3b)));
HXLINE( 879)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_883_removeGuildBan)
HXLINE( 883)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 885)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),885,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeGuildBan",40,b6,fc,3b)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_867_removeGuildBan)
HXLINE( 868)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_66,1);
HXLINE( 869)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/bans/",5c,5d,7c,78)) + id));
HXLINE( 870)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE( 872)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 873)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 874)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE( 876)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE( 882)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 889)		req->send();
HXLINE( 890)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,removeGuildBan,return )

bool Endpoints_obj::removeGuildMember(::String id,::String guild_id,::String reason){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_914_removeGuildMember)
HXLINE( 915)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),915,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeGuildMember",89,7a,cf,93)));
HXLINE( 916)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),916,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeGuildMember",89,7a,cf,93)));
HXLINE( 917)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_921_removeGuildMember)
HXLINE( 921)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 923)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),923,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeGuildMember",89,7a,cf,93)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_900_removeGuildMember)
HXLINE( 901)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_70,1);
HXLINE( 902)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/members/",65,58,09,c2)) + id));
HXLINE( 903)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE( 905)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 906)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 907)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE( 908)		if (::hx::IsNotNull( reason )) {
HXLINE( 910)			req->addHeader(HX_("X-Audit-Log-Reason",54,78,7a,2b),reason);
            		}
HXLINE( 914)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE( 920)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 927)		req->send();
HXLINE( 928)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,removeGuildMember,return )

bool Endpoints_obj::modifyGuildMember(::String guild_id,::String user_id, ::Dynamic d){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_949_modifyGuildMember)
HXLINE( 950)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),950,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("modifyGuildMember",13,22,f2,c6)));
HXLINE( 951)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),951,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("modifyGuildMember",13,22,f2,c6)));
HXLINE( 952)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_956_modifyGuildMember)
HXLINE( 956)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 958)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),958,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("modifyGuildMember",13,22,f2,c6)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_938_modifyGuildMember)
HXLINE( 939)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_74,1);
HXLINE( 940)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/members/",65,58,09,c2)) + user_id));
HXLINE( 941)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE( 943)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 944)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 945)		req->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE( 946)		 ::hxdiscord::utils::Http req1 = req;
HXDLIN( 946)		 ::Dynamic replacer = null();
HXDLIN( 946)		::String space = null();
HXDLIN( 946)		req1->setPostData(::haxe::format::JsonPrinter_obj::print(d,replacer,space));
HXLINE( 947)		req->setMethod(HX_("PATCH",a8,3e,45,3b));
HXLINE( 949)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE( 955)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 962)		req->send();
HXLINE( 963)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,modifyGuildMember,return )

bool Endpoints_obj::modifyGuild(::String guild_id, ::Dynamic params){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_984_modifyGuild)
HXLINE( 985)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),985,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("modifyGuild",d9,a2,d0,3c)));
HXLINE( 986)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),986,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("modifyGuild",d9,a2,d0,3c)));
HXLINE( 987)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_991_modifyGuild)
HXLINE( 991)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE( 993)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),993,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("modifyGuild",d9,a2,d0,3c)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_973_modifyGuild)
HXLINE( 974)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_78,1);
HXLINE( 975)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id));
HXLINE( 976)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE( 978)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE( 979)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE( 980)		req->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE( 981)		 ::hxdiscord::utils::Http req1 = req;
HXDLIN( 981)		 ::Dynamic replacer = null();
HXDLIN( 981)		::String space = null();
HXDLIN( 981)		req1->setPostData(::haxe::format::JsonPrinter_obj::print(params,replacer,space));
HXLINE( 982)		req->setMethod(HX_("PATCH",a8,3e,45,3b));
HXLINE( 984)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE( 990)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE( 997)		req->send();
HXLINE( 998)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,modifyGuild,return )

::String Endpoints_obj::getGuildChannels(::String guild_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,thing) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1016_getGuildChannels)
HXLINE(1017)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1019)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1019,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGuildChannels",ad,3c,a2,2c)));
            			}
HXLINE(1021)			thing[0] = data;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1025_getGuildChannels)
HXLINE(1026)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1026,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGuildChannels",ad,3c,a2,2c)));
HXLINE(1027)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1027,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGuildChannels",ad,3c,a2,2c)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1007_getGuildChannels)
HXLINE(1008)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/channels",7f,f1,40,25)));
HXLINE(1010)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1011)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1012)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(1013)		::Array< ::String > thing = ::Array_obj< ::String >::fromData( _hx_array_data_934e271c_82,1);
HXLINE(1015)		r->onData =  ::Dynamic(new _hx_Closure_0(thing));
HXLINE(1024)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1030)		r->send();
HXLINE(1032)		return thing->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,getGuildChannels,return )

bool Endpoints_obj::deleteGuild(::String guild_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1051_deleteGuild)
HXLINE(1052)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1052,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteGuild",88,f5,e0,2b)));
HXLINE(1053)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1053,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteGuild",88,f5,e0,2b)));
HXLINE(1054)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1058_deleteGuild)
HXLINE(1058)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1060)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1060,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteGuild",88,f5,e0,2b)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1041_deleteGuild)
HXLINE(1042)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_86,1);
HXLINE(1043)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id));
HXLINE(1044)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1046)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1047)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1048)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1049)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE(1051)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1057)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1064)		req->send();
HXLINE(1065)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,deleteGuild,return )

bool Endpoints_obj::editChannelPermissions(::String channel_id,::String overwrite_id, ::Dynamic data){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1086_editChannelPermissions)
HXLINE(1087)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1087,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("editChannelPermissions",2b,cd,d3,fe)));
HXLINE(1088)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1088,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("editChannelPermissions",2b,cd,d3,fe)));
HXLINE(1089)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1093_editChannelPermissions)
HXLINE(1093)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1095)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1095,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("editChannelPermissions",2b,cd,d3,fe)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1075_editChannelPermissions)
HXLINE(1076)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_90,1);
HXLINE(1077)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/permissions/",da,81,6f,b9)) + overwrite_id));
HXLINE(1078)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1080)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1081)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1082)		req->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1083)		 ::hxdiscord::utils::Http req1 = req;
HXDLIN(1083)		 ::Dynamic replacer = null();
HXDLIN(1083)		::String space = null();
HXDLIN(1083)		req1->setPostData(::haxe::format::JsonPrinter_obj::print(data,replacer,space));
HXLINE(1084)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE(1086)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1092)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1099)		req->send();
HXLINE(1100)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,editChannelPermissions,return )

::String Endpoints_obj::getChannelInvites(::String channel_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,thing) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1118_getChannelInvites)
HXLINE(1119)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1121)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1121,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getChannelInvites",3d,63,37,63)));
            			}
HXLINE(1123)			thing[0] = data;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1127_getChannelInvites)
HXLINE(1128)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1128,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getChannelInvites",3d,63,37,63)));
HXLINE(1129)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1129,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getChannelInvites",3d,63,37,63)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1109_getChannelInvites)
HXLINE(1110)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/invites",3b,92,da,c0)));
HXLINE(1112)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1113)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1114)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(1115)		::Array< ::String > thing = ::Array_obj< ::String >::fromData( _hx_array_data_934e271c_94,1);
HXLINE(1117)		r->onData =  ::Dynamic(new _hx_Closure_0(thing));
HXLINE(1126)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1132)		r->send();
HXLINE(1134)		return thing->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,getChannelInvites,return )

::String Endpoints_obj::getChannelMessages(::String channel_id,int limit){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,thing) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1152_getChannelMessages)
HXLINE(1153)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1155)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1155,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getChannelMessages",b9,30,2a,5e)));
            			}
HXLINE(1157)			thing[0] = data;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1161_getChannelMessages)
HXLINE(1162)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1162,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getChannelMessages",b9,30,2a,5e)));
HXLINE(1163)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1163,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getChannelMessages",b9,30,2a,5e)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1143_getChannelMessages)
HXLINE(1144)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages?limit=",86,13,ba,f2)) + limit));
HXLINE(1146)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1147)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1148)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(1149)		::Array< ::String > thing = ::Array_obj< ::String >::fromData( _hx_array_data_934e271c_98,1);
HXLINE(1151)		r->onData =  ::Dynamic(new _hx_Closure_0(thing));
HXLINE(1160)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1166)		r->send();
HXLINE(1168)		return thing->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,getChannelMessages,return )

::String Endpoints_obj::createChannelInvite(::String channel_id, ::Dynamic obj){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,thing) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1190_createChannelInvite)
HXLINE(1191)			thing[0] = data;
HXLINE(1192)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1194)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1194,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createChannelInvite",50,16,f3,97)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1199_createChannelInvite)
HXLINE(1200)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1200,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createChannelInvite",50,16,f3,97)));
HXLINE(1201)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1201,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createChannelInvite",50,16,f3,97)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1178_createChannelInvite)
HXLINE(1179)		::Array< ::String > thing = ::Array_obj< ::String >::fromData( _hx_array_data_934e271c_102,1);
HXLINE(1180)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/invites",3b,92,da,c0)));
HXLINE(1182)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1183)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1184)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1185)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(1187)		 ::hxdiscord::utils::Http r1 = r;
HXDLIN(1187)		 ::Dynamic replacer = null();
HXDLIN(1187)		::String space = null();
HXDLIN(1187)		r1->setPostData(::haxe::format::JsonPrinter_obj::print(obj,replacer,space));
HXLINE(1189)		r->onData =  ::Dynamic(new _hx_Closure_0(thing));
HXLINE(1198)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1204)		r->send();
HXLINE(1205)		return thing->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,createChannelInvite,return )

bool Endpoints_obj::deleteChannelPermission(::String channel_id,::String overwrite_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1226_deleteChannelPermission)
HXLINE(1227)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1227,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteChannelPermission",07,47,db,7a)));
HXLINE(1228)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1228,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteChannelPermission",07,47,db,7a)));
HXLINE(1229)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1233_deleteChannelPermission)
HXLINE(1233)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1235)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1235,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("deleteChannelPermission",07,47,db,7a)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1215_deleteChannelPermission)
HXLINE(1216)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_106,1);
HXLINE(1217)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/permissions/",da,81,6f,b9)) + overwrite_id));
HXLINE(1218)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1220)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1221)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1222)		req->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1223)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1224)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE(1226)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1232)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1239)		req->send();
HXLINE(1240)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,deleteChannelPermission,return )

void Endpoints_obj::followAnnouncementChannel(::String channel_id,::String id){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1264_followAnnouncementChannel)
HXLINE(1264)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1266)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1266,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("followAnnouncementChannel",cb,23,fd,ad)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1271_followAnnouncementChannel)
HXLINE(1272)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1272,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("followAnnouncementChannel",cb,23,fd,ad)));
HXLINE(1273)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1273,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("followAnnouncementChannel",cb,23,fd,ad)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1250_followAnnouncementChannel)
HXLINE(1251)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/invites",3b,92,da,c0)));
HXLINE(1253)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1254)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1255)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1256)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(1258)		 ::hxdiscord::utils::Http r1 = r;
HXDLIN(1258)		 ::Dynamic replacer = null();
HXDLIN(1258)		::String space = null();
HXDLIN(1258)		r1->setPostData(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("webhook_channel_id",1f,c5,13,f6),id)),replacer,space));
HXLINE(1262)		r->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE(1270)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1276)		r->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,followAnnouncementChannel,(void))

void Endpoints_obj::triggerTypingIndicator(::String channel_id){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1297_triggerTypingIndicator)
HXLINE(1297)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1299)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1299,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("triggerTypingIndicator",00,14,72,32)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1304_triggerTypingIndicator)
HXLINE(1305)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1305,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("triggerTypingIndicator",00,14,72,32)));
HXLINE(1306)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1306,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("triggerTypingIndicator",00,14,72,32)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1285_triggerTypingIndicator)
HXLINE(1286)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/typing",e6,cb,aa,f9)));
HXLINE(1288)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1289)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1290)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1291)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(1293)		r->setPostData(HX_("",00,00,00,00));
HXLINE(1295)		r->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE(1303)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1309)		r->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,triggerTypingIndicator,(void))

::String Endpoints_obj::getPinnedMessages(::String channel_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,thing) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1330_getPinnedMessages)
HXLINE(1330)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1332)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1332,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getPinnedMessages",3a,b7,6c,2c)));
HXLINE(1333)				thing[0] = data;
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1338_getPinnedMessages)
HXLINE(1339)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1339,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getPinnedMessages",3a,b7,6c,2c)));
HXLINE(1340)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1340,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getPinnedMessages",3a,b7,6c,2c)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1318_getPinnedMessages)
HXLINE(1319)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/pins",2d,36,2d,5a)));
HXLINE(1321)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1322)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1323)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1324)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(1326)		::Array< ::String > thing = ::Array_obj< ::String >::__new(1)->init(0,null());
HXLINE(1328)		r->onData =  ::Dynamic(new _hx_Closure_0(thing));
HXLINE(1337)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1343)		r->send();
HXLINE(1344)		return thing->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,getPinnedMessages,return )

bool Endpoints_obj::pinMessage(::String channel_id,::String message_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1364_pinMessage)
HXLINE(1365)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1365,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("pinMessage",f2,e9,a7,a0)));
HXLINE(1366)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1366,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("pinMessage",f2,e9,a7,a0)));
HXLINE(1367)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1371_pinMessage)
HXLINE(1371)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1373)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1373,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("pinMessage",f2,e9,a7,a0)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1354_pinMessage)
HXLINE(1355)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_119,1);
HXLINE(1356)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/pins/",62,31,62,8d)) + message_id));
HXLINE(1357)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1359)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1360)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1361)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1362)		req->setMethod(HX_("PUT",af,fe,3c,00));
HXLINE(1364)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1370)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1377)		req->send();
HXLINE(1378)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,pinMessage,return )

bool Endpoints_obj::unpinMessage(::String channel_id,::String message_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1398_unpinMessage)
HXLINE(1399)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1399,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("unpinMessage",8b,19,b7,0c)));
HXLINE(1400)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1400,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("unpinMessage",8b,19,b7,0c)));
HXLINE(1401)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1405_unpinMessage)
HXLINE(1405)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1407)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1407,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("unpinMessage",8b,19,b7,0c)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1388_unpinMessage)
HXLINE(1389)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_123,1);
HXLINE(1390)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/pins/",62,31,62,8d)) + message_id));
HXLINE(1391)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1393)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1394)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1395)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1396)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE(1398)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1404)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1411)		req->send();
HXLINE(1412)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,unpinMessage,return )

void Endpoints_obj::groupDMAddRecipient(::String channel_id,::String user_id,::String access_token,::String nick){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1429_groupDMAddRecipient)
HXLINE(1430)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1430,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("groupDMAddRecipient",20,92,2d,03)));
HXLINE(1431)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1431,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("groupDMAddRecipient",20,92,2d,03)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1435_groupDMAddRecipient)
HXLINE(1435)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1437)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1437,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("groupDMAddRecipient",20,92,2d,03)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1417_groupDMAddRecipient)
HXLINE(1418)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/recipients/",a6,e8,01,f9)) + user_id));
HXLINE(1419)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1421)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1422)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1423)		 ::hxdiscord::utils::Http req1 = req;
HXDLIN(1423)		 ::Dynamic replacer = null();
HXDLIN(1423)		::String space = null();
HXDLIN(1423)		req1->setPostData(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("access_token",de,32,77,c5),access_token)
            			->setFixed(1,HX_("nick",a3,7b,05,49),nick)),replacer,space));
HXLINE(1427)		req->setMethod(HX_("PUT",af,fe,3c,00));
HXLINE(1429)		req->onError =  ::Dynamic(new _hx_Closure_0(req));
HXLINE(1434)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1441)		req->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Endpoints_obj,groupDMAddRecipient,(void))

void Endpoints_obj::groupDMRemoveRecipient(::String channel_id,::String user_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1455_groupDMRemoveRecipient)
HXLINE(1456)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1456,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("groupDMRemoveRecipient",4d,7b,57,01)));
HXLINE(1457)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1457,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("groupDMRemoveRecipient",4d,7b,57,01)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1461_groupDMRemoveRecipient)
HXLINE(1461)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1463)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1463,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("groupDMRemoveRecipient",4d,7b,57,01)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1446_groupDMRemoveRecipient)
HXLINE(1447)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/recipients/",a6,e8,01,f9)) + user_id));
HXLINE(1448)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1450)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1451)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1452)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1453)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE(1455)		req->onError =  ::Dynamic(new _hx_Closure_0(req));
HXLINE(1460)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1467)		req->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,groupDMRemoveRecipient,(void))

 ::Dynamic Endpoints_obj::startThreadFromMessage(::String channel_id,::String message_id, ::Dynamic obj){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::cpp::VirtualArray,dataa) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1491_startThreadFromMessage)
HXLINE(1492)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1494)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1494,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("startThreadFromMessage",11,b4,4e,cf)));
            			}
HXLINE(1496)			dataa->set(0, ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,data)->doParse());
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1,::Array< bool >,s, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1500_startThreadFromMessage)
HXLINE(1501)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1501,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("startThreadFromMessage",11,b4,4e,cf)));
HXLINE(1502)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1502,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("startThreadFromMessage",11,b4,4e,cf)));
HXLINE(1503)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1477_startThreadFromMessage)
HXLINE(1478)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_133,1);
HXLINE(1479)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages/",d4,db,cb,76)) + message_id) + HX_("/threads",1a,ea,d4,d3)));
HXLINE(1481)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1482)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1483)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1484)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(1486)		 ::hxdiscord::utils::Http r1 = r;
HXDLIN(1486)		 ::Dynamic replacer = null();
HXDLIN(1486)		::String space = null();
HXDLIN(1486)		r1->setPostData(::haxe::format::JsonPrinter_obj::print(obj,replacer,space));
HXLINE(1488)		::cpp::VirtualArray dataa = ::cpp::VirtualArray_obj::__new(1)->init(0,null());
HXLINE(1490)		r->onData =  ::Dynamic(new _hx_Closure_0(dataa));
HXLINE(1499)		r->onError =  ::Dynamic(new _hx_Closure_1(s,r));
HXLINE(1506)		r->send();
HXLINE(1507)		return dataa->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,startThreadFromMessage,return )

bool Endpoints_obj::startThreadWithoutMessage(::String channel_id, ::Dynamic obj){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1530_startThreadWithoutMessage)
HXLINE(1530)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1532)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1532,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("startThreadWithoutMessage",4b,3e,fe,ca)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1,::Array< bool >,s, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1537_startThreadWithoutMessage)
HXLINE(1538)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1538,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("startThreadWithoutMessage",4b,3e,fe,ca)));
HXLINE(1539)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1539,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("startThreadWithoutMessage",4b,3e,fe,ca)));
HXLINE(1540)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1517_startThreadWithoutMessage)
HXLINE(1518)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_137,1);
HXLINE(1519)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/threads",1a,ea,d4,d3)));
HXLINE(1521)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1522)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1523)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1524)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(1526)		 ::hxdiscord::utils::Http r1 = r;
HXDLIN(1526)		 ::Dynamic replacer = null();
HXDLIN(1526)		::String space = null();
HXDLIN(1526)		r1->setPostData(::haxe::format::JsonPrinter_obj::print(obj,replacer,space));
HXLINE(1528)		r->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE(1536)		r->onError =  ::Dynamic(new _hx_Closure_1(s,r));
HXLINE(1543)		r->send();
HXLINE(1544)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,startThreadWithoutMessage,return )

bool Endpoints_obj::startThreadInForumChannel(::String channel_id,::String message_id, ::Dynamic obj){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1567_startThreadInForumChannel)
HXLINE(1567)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1569)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1569,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("startThreadInForumChannel",93,72,34,1b)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1,::Array< bool >,s, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1574_startThreadInForumChannel)
HXLINE(1575)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1575,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("startThreadInForumChannel",93,72,34,1b)));
HXLINE(1576)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1576,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("startThreadInForumChannel",93,72,34,1b)));
HXLINE(1577)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1554_startThreadInForumChannel)
HXLINE(1555)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_141,1);
HXLINE(1556)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/threads",1a,ea,d4,d3)));
HXLINE(1558)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1559)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1560)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1561)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(1563)		 ::hxdiscord::utils::Http r1 = r;
HXDLIN(1563)		 ::Dynamic replacer = null();
HXDLIN(1563)		::String space = null();
HXDLIN(1563)		r1->setPostData(::haxe::format::JsonPrinter_obj::print(obj,replacer,space));
HXLINE(1565)		r->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE(1573)		r->onError =  ::Dynamic(new _hx_Closure_1(s,r));
HXLINE(1580)		r->send();
HXLINE(1581)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,startThreadInForumChannel,return )

bool Endpoints_obj::joinThread(::String channel_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1600_joinThread)
HXLINE(1601)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1601,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("joinThread",54,ee,b9,2c)));
HXLINE(1602)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1602,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("joinThread",54,ee,b9,2c)));
HXLINE(1603)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1607_joinThread)
HXLINE(1607)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1609)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1609,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("joinThread",54,ee,b9,2c)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1590_joinThread)
HXLINE(1591)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_145,1);
HXLINE(1592)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/thread-members/@me",ce,82,24,47)));
HXLINE(1593)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1595)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1596)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1597)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1598)		req->setMethod(HX_("PUT",af,fe,3c,00));
HXLINE(1600)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1606)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1613)		req->send();
HXLINE(1614)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,joinThread,return )

bool Endpoints_obj::addThreadMember(::String channel_id,::String user_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1634_addThreadMember)
HXLINE(1635)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1635,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("addThreadMember",85,70,9a,a9)));
HXLINE(1636)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1636,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("addThreadMember",85,70,9a,a9)));
HXLINE(1637)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1641_addThreadMember)
HXLINE(1641)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1643)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1643,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("addThreadMember",85,70,9a,a9)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1624_addThreadMember)
HXLINE(1625)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_149,1);
HXLINE(1626)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/thread-members/",0a,ef,07,38)) + user_id));
HXLINE(1627)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1629)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1630)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1631)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1632)		req->setMethod(HX_("PUT",af,fe,3c,00));
HXLINE(1634)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1640)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1647)		req->send();
HXLINE(1648)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,addThreadMember,return )

bool Endpoints_obj::leaveThread(::String channel_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1667_leaveThread)
HXLINE(1668)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1668,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("leaveThread",21,b7,35,b1)));
HXLINE(1669)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1669,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("leaveThread",21,b7,35,b1)));
HXLINE(1670)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1674_leaveThread)
HXLINE(1674)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1676)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1676,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("leaveThread",21,b7,35,b1)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1657_leaveThread)
HXLINE(1658)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_153,1);
HXLINE(1659)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/thread-members/@me",ce,82,24,47)));
HXLINE(1660)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1662)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1663)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1664)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1665)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE(1667)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1673)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1680)		req->send();
HXLINE(1681)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,leaveThread,return )

bool Endpoints_obj::removeThreadMember(::String channel_id,::String user_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1701_removeThreadMember)
HXLINE(1702)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1702,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeThreadMember",28,43,81,6f)));
HXLINE(1703)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1703,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeThreadMember",28,43,81,6f)));
HXLINE(1704)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1708_removeThreadMember)
HXLINE(1708)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1710)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1710,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeThreadMember",28,43,81,6f)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1691_removeThreadMember)
HXLINE(1692)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_157,1);
HXLINE(1693)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/thread-members/",0a,ef,07,38)) + user_id));
HXLINE(1694)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1696)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1697)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1698)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1699)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE(1701)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1707)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1714)		req->send();
HXLINE(1715)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,removeThreadMember,return )

::String Endpoints_obj::getThreadMember(::String channel_id,::String user_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,thing) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1737_getThreadMember)
HXLINE(1737)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1739)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1739,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getThreadMember",7a,5a,35,46)));
HXLINE(1740)				thing[0] = data;
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1745_getThreadMember)
HXLINE(1746)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1746,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getThreadMember",7a,5a,35,46)));
HXLINE(1747)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1747,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getThreadMember",7a,5a,35,46)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1725_getThreadMember)
HXLINE(1726)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/thread-members/",0a,ef,07,38)) + user_id));
HXLINE(1728)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1729)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1730)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1731)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(1733)		::Array< ::String > thing = ::Array_obj< ::String >::__new(1)->init(0,null());
HXLINE(1735)		r->onData =  ::Dynamic(new _hx_Closure_0(thing));
HXLINE(1744)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1750)		r->send();
HXLINE(1751)		return thing->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,getThreadMember,return )

::String Endpoints_obj::listThreadMembers(::String channel_id,::String user_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,thing) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1773_listThreadMembers)
HXLINE(1773)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1775)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1775,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listThreadMembers",f1,77,79,1b)));
HXLINE(1776)				thing[0] = data;
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1781_listThreadMembers)
HXLINE(1782)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1782,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listThreadMembers",f1,77,79,1b)));
HXLINE(1783)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1783,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listThreadMembers",f1,77,79,1b)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1761_listThreadMembers)
HXLINE(1762)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/thread-members/",0a,ef,07,38)));
HXLINE(1764)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1765)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1766)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1767)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(1769)		::Array< ::String > thing = ::Array_obj< ::String >::__new(1)->init(0,null());
HXLINE(1771)		r->onData =  ::Dynamic(new _hx_Closure_0(thing));
HXLINE(1780)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1786)		r->send();
HXLINE(1787)		return thing->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,listThreadMembers,return )

::String Endpoints_obj::listPublicArchivedThreads(::String channel_id,::String user_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,thing) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1808_listPublicArchivedThreads)
HXLINE(1808)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1810)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1810,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listPublicArchivedThreads",40,a8,54,22)));
HXLINE(1811)				thing[0] = data;
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1816_listPublicArchivedThreads)
HXLINE(1817)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1817,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listPublicArchivedThreads",40,a8,54,22)));
HXLINE(1818)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1818,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listPublicArchivedThreads",40,a8,54,22)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1796_listPublicArchivedThreads)
HXLINE(1797)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/thread-members/archived/public",2c,d4,be,91)));
HXLINE(1799)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1800)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1801)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1802)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(1804)		::Array< ::String > thing = ::Array_obj< ::String >::__new(1)->init(0,null());
HXLINE(1806)		r->onData =  ::Dynamic(new _hx_Closure_0(thing));
HXLINE(1815)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1821)		r->send();
HXLINE(1822)		return thing->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,listPublicArchivedThreads,return )

::String Endpoints_obj::listPrivateArchivedThreads(::String channel_id,::String user_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,thing) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1844_listPrivateArchivedThreads)
HXLINE(1844)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1846)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1846,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listPrivateArchivedThreads",62,95,ab,98)));
HXLINE(1847)				thing[0] = data;
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1852_listPrivateArchivedThreads)
HXLINE(1853)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1853,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listPrivateArchivedThreads",62,95,ab,98)));
HXLINE(1854)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1854,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listPrivateArchivedThreads",62,95,ab,98)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1832_listPrivateArchivedThreads)
HXLINE(1833)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/thread-members/archived/public",2c,d4,be,91)));
HXLINE(1835)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1836)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1837)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1838)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(1840)		::Array< ::String > thing = ::Array_obj< ::String >::__new(1)->init(0,null());
HXLINE(1842)		r->onData =  ::Dynamic(new _hx_Closure_0(thing));
HXLINE(1851)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1857)		r->send();
HXLINE(1858)		return thing->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,listPrivateArchivedThreads,return )

::String Endpoints_obj::listJoinedPrivateArchivedThreads(::String channel_id){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,thing) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1879_listJoinedPrivateArchivedThreads)
HXLINE(1879)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1881)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1881,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listJoinedPrivateArchivedThreads",8b,95,f3,be)));
HXLINE(1882)				thing[0] = data;
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1887_listJoinedPrivateArchivedThreads)
HXLINE(1888)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1888,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listJoinedPrivateArchivedThreads",8b,95,f3,be)));
HXLINE(1889)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1889,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("listJoinedPrivateArchivedThreads",8b,95,f3,be)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1867_listJoinedPrivateArchivedThreads)
HXLINE(1868)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/users/@me/thread-members/archived/private",a2,20,8e,94)));
HXLINE(1870)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1871)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1872)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1873)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(1875)		::Array< ::String > thing = ::Array_obj< ::String >::__new(1)->init(0,null());
HXLINE(1877)		r->onData =  ::Dynamic(new _hx_Closure_0(thing));
HXLINE(1886)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(1892)		r->send();
HXLINE(1893)		return thing->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,listJoinedPrivateArchivedThreads,return )

bool Endpoints_obj::modifyGuildRole(::String guild_id,::String role_id, ::Dynamic data){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1915_modifyGuildRole)
HXLINE(1916)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1916,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("modifyGuildRole",ef,9a,45,f7)));
HXLINE(1917)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1917,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("modifyGuildRole",ef,9a,45,f7)));
HXLINE(1918)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1922_modifyGuildRole)
HXLINE(1922)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1924)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1924,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("modifyGuildRole",ef,9a,45,f7)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1904_modifyGuildRole)
HXLINE(1905)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_176,1);
HXLINE(1906)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/roles/",c1,66,4a,68)) + role_id));
HXLINE(1907)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1909)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1910)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1911)		req->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(1912)		 ::hxdiscord::utils::Http req1 = req;
HXDLIN(1912)		 ::Dynamic replacer = null();
HXDLIN(1912)		::String space = null();
HXDLIN(1912)		req1->setPostData(::haxe::format::JsonPrinter_obj::print(data,replacer,space));
HXLINE(1913)		req->setMethod(HX_("PATCH",a8,3e,45,3b));
HXLINE(1915)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1921)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1928)		req->send();
HXLINE(1929)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,modifyGuildRole,return )

bool Endpoints_obj::addGuildMemberRole(::String guild_id,::String user_id,::String role_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1950_addGuildMemberRole)
HXLINE(1951)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1951,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("addGuildMemberRole",62,d5,1b,7a)));
HXLINE(1952)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1952,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("addGuildMemberRole",62,d5,1b,7a)));
HXLINE(1953)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1957_addGuildMemberRole)
HXLINE(1957)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1959)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1959,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("addGuildMemberRole",62,d5,1b,7a)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1940_addGuildMemberRole)
HXLINE(1941)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_180,1);
HXLINE(1942)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/members/",65,58,09,c2)) + user_id) + HX_("/roles/",c1,66,4a,68)) + role_id));
HXLINE(1943)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1945)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1946)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1947)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1948)		req->setMethod(HX_("PUT",af,fe,3c,00));
HXLINE(1950)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1956)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1963)		req->send();
HXLINE(1964)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,addGuildMemberRole,return )

bool Endpoints_obj::removeGuildMemberRole(::String guild_id,::String user_id,::String role_id){
            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,s, ::hxdiscord::utils::Http,req) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1985_removeGuildMemberRole)
HXLINE(1986)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1986,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeGuildMemberRole",9f,0a,82,22)));
HXLINE(1987)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1987,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeGuildMemberRole",9f,0a,82,22)));
HXLINE(1988)			s[0] = false;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1992_removeGuildMemberRole)
HXLINE(1992)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(1994)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),1994,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("removeGuildMemberRole",9f,0a,82,22)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_1975_removeGuildMemberRole)
HXLINE(1976)		::Array< bool > s = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_184,1);
HXLINE(1977)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,(((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/guilds/",80,2c,e9,bf)) + guild_id) + HX_("/members/",65,58,09,c2)) + user_id) + HX_("/roles/",c1,66,4a,68)) + role_id));
HXLINE(1978)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(1980)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(1981)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(1982)		req->setPostData(HX_("",00,00,00,00));
HXLINE(1983)		req->setMethod(HX_("DELETE",2b,6c,5b,1d));
HXLINE(1985)		req->onError =  ::Dynamic(new _hx_Closure_0(s,req));
HXLINE(1991)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(1998)		req->send();
HXLINE(1999)		return s->__get(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,removeGuildMemberRole,return )

::String Endpoints_obj::getGlobalApplicationCommands(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2018_getGlobalApplicationCommands)
HXLINE(2018)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(2020)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2020,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGlobalApplicationCommands",1f,49,f1,8d)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2025_getGlobalApplicationCommands)
HXLINE(2026)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2026,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGlobalApplicationCommands",1f,49,f1,8d)));
HXLINE(2027)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2027,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("getGlobalApplicationCommands",1f,49,f1,8d)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2009_getGlobalApplicationCommands)
HXLINE(2010)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/applications/",1d,d2,8e,f5)) + ::hxdiscord::DiscordClient_obj::accountId) + HX_("/commands",f7,f7,a7,78)));
HXLINE(2012)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(2013)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(2014)		r->setMethod(HX_("GET",76,1c,36,00));
HXLINE(2016)		r->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE(2024)		r->onError =  ::Dynamic(new _hx_Closure_1(r));
HXLINE(2030)		r->send();
HXLINE(2032)		return r->responseData;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Endpoints_obj,getGlobalApplicationCommands,return )

void Endpoints_obj::createGlobalApplicationCommand( ::Dynamic data){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String _data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2050_createGlobalApplicationCommand)
HXLINE(2050)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(2052)				::haxe::Log_obj::trace(_data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2052,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("createGlobalApplicationCommand",3a,d9,f5,6c)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2057_createGlobalApplicationCommand)
HXLINE(2057)			HX_STACK_DO_THROW((HX_("An error has occurred: ",1c,60,a4,c4) + error));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2039_createGlobalApplicationCommand)
HXLINE(2040)		::Array< ::Dynamic> r = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(2042)		r[0] =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/applications/",1d,d2,8e,f5)) + ::hxdiscord::DiscordClient_obj::accountId) + HX_("/commands",f7,f7,a7,78)));
HXLINE(2043)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(2044)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(2045)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(2046)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(2047)		 ::hxdiscord::utils::Http r1 = r->__get(0).StaticCast<  ::hxdiscord::utils::Http >();
HXDLIN(2047)		 ::Dynamic replacer = null();
HXDLIN(2047)		::String space = null();
HXDLIN(2047)		r1->setPostData(::haxe::format::JsonPrinter_obj::print(data,replacer,space));
HXLINE(2048)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE(2055)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->onError =  ::Dynamic(new _hx_Closure_1());
HXLINE(2060)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,createGlobalApplicationCommand,(void))

 ::Dynamic Endpoints_obj::bulkOverwriteGlobalApplicationCommands( ::Dynamic data){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,error) HXARGC(1)
            		void _hx_run(::String err){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2092_bulkOverwriteGlobalApplicationCommands)
HXLINE(2093)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + err),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2093,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("bulkOverwriteGlobalApplicationCommands",bc,f1,8a,c1)));
HXLINE(2094)			error[0] = true;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2098_bulkOverwriteGlobalApplicationCommands)
HXLINE(2098)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(2100)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2100,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("bulkOverwriteGlobalApplicationCommands",bc,f1,8a,c1)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2068_bulkOverwriteGlobalApplicationCommands)
HXLINE(2069)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/applications/",1d,d2,8e,f5)) + ::hxdiscord::DiscordClient_obj::accountId) + HX_("/commands",f7,f7,a7,78)));
HXLINE(2070)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(2071)		::Array< bool > error = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_196,1);
HXLINE(2073)		 ::Dynamic replacer = null();
HXDLIN(2073)		::String space = null();
HXDLIN(2073)		 ::Dynamic json =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,::haxe::format::JsonPrinter_obj::print(data,replacer,space))->doParse();
HXLINE(2075)		req->setMethod(HX_("PUT",af,fe,3c,00));
HXLINE(2078)		{
HXLINE(2078)			int _g = 0;
HXDLIN(2078)			int _g1 = ( (int)(json->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic)) );
HXDLIN(2078)			while((_g < _g1)){
HXLINE(2078)				_g = (_g + 1);
HXDLIN(2078)				int i = (_g - 1);
HXLINE(2079)				{
HXLINE(2079)					int _g2 = 0;
HXDLIN(2079)					::Array< ::String > _g3 = ::Reflect_obj::fields(json->__GetItem(i));
HXDLIN(2079)					while((_g2 < _g3->length)){
HXLINE(2079)						::String field = _g3->__get(_g2);
HXDLIN(2079)						_g2 = (_g2 + 1);
HXLINE(2080)						if (::hx::IsNull( ::Reflect_obj::field(json->__GetItem(i),field) )) {
HXLINE(2081)							::Reflect_obj::deleteField(json->__GetItem(i),field);
            						}
            					}
            				}
            			}
            		}
HXLINE(2087)		 ::Dynamic replacer1 = null();
HXDLIN(2087)		::String space1 = null();
HXDLIN(2087)		req->setPostData(::haxe::format::JsonPrinter_obj::print(json,replacer1,space1));
HXLINE(2088)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(2089)		req->addHeader(HX_("Content-type",ae,3d,84,51),HX_("application/json",87,d8,7f,4e));
HXLINE(2090)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(2092)		req->onError =  ::Dynamic(new _hx_Closure_0(error));
HXLINE(2097)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(2104)		req->send();
HXLINE(2105)		if (error->__get(0)) {
HXLINE(2107)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2107,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("bulkOverwriteGlobalApplicationCommands",bc,f1,8a,c1)));
            		}
HXLINE(2112)		return req->responseData;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Endpoints_obj,bulkOverwriteGlobalApplicationCommands,return )

void Endpoints_obj::bulkDeleteMessages(::String channel_id,::Array< ::String > messages){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String _data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2136_bulkDeleteMessages)
HXLINE(2136)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(2138)				::haxe::Log_obj::trace(_data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2138,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("bulkDeleteMessages",c9,16,58,6a)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2143_bulkDeleteMessages)
HXLINE(2143)			HX_STACK_DO_THROW((HX_("An error has occurred: ",1c,60,a4,c4) + error));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2123_bulkDeleteMessages)
HXLINE(2124)		::Array< ::Dynamic> r = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(2126)		r[0] =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/channels/",d0,5d,92,73)) + channel_id) + HX_("/messages/bulk-delete",f2,43,9d,43)));
HXLINE(2127)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(2128)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(2129)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(2130)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(2131)		 ::hxdiscord::utils::Http r1 = r->__get(0).StaticCast<  ::hxdiscord::utils::Http >();
HXDLIN(2131)		 ::Dynamic replacer = null();
HXDLIN(2131)		::String space = null();
HXDLIN(2131)		r1->setPostData(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("messages",cc,d8,fd,34),messages)),replacer,space));
HXLINE(2134)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE(2141)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->onError =  ::Dynamic(new _hx_Closure_1());
HXLINE(2146)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,bulkDeleteMessages,(void))

void Endpoints_obj::makeInteractionThink(::String interactionID,::String interactionToken, ::Dynamic __o_ephemeral){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String _data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2182_makeInteractionThink)
HXLINE(2182)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(2184)				::haxe::Log_obj::trace(_data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2184,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("makeInteractionThink",ce,78,48,92)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1,::Array< ::String >,data,::Array< ::Dynamic>,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2188_makeInteractionThink)
HXLINE(2189)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2189,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("makeInteractionThink",ce,78,48,92)));
HXLINE(2190)			::haxe::Log_obj::trace(r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2190,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("makeInteractionThink",ce,78,48,92)));
HXLINE(2191)			::haxe::Log_obj::trace(data->__get(0),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2191,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("makeInteractionThink",ce,78,48,92)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            		 ::Dynamic ephemeral = __o_ephemeral;
            		if (::hx::IsNull(__o_ephemeral)) ephemeral = false;
            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2154_makeInteractionThink)
HXLINE(2155)		::Array< ::Dynamic> r = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(2157)		r[0] =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/interactions/",1f,03,c7,ac)) + interactionID) + HX_("/",2f,00,00,00)) + interactionToken) + HX_("/callback",f4,e0,58,39)));
HXLINE(2158)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(2159)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(2160)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(2161)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(2162)		::Array< ::String > data = ::Array_obj< ::String >::fromData( _hx_array_data_934e271c_203,1);
HXLINE(2163)		if (( (bool)(ephemeral) )) {
HXLINE(2164)			 ::Dynamic replacer = null();
HXDLIN(2164)			::String space = null();
HXDLIN(2164)			data[0] = ::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("data",2a,56,63,42), ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("flags",47,2b,8c,02),64)))
            				->setFixed(1,HX_("type",ba,f2,08,4d),5)),replacer,space);
            		}
            		else {
HXLINE(2173)			 ::Dynamic replacer1 = null();
HXDLIN(2173)			::String space1 = null();
HXDLIN(2173)			data[0] = ::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("type",ba,f2,08,4d),5)),replacer1,space1);
            		}
HXLINE(2179)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->setPostData(data->__get(0));
HXLINE(2180)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE(2187)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->onError =  ::Dynamic(new _hx_Closure_1(data,r));
HXLINE(2193)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Endpoints_obj,makeInteractionThink,(void))

void Endpoints_obj::showInteractionModal(::Array< ::Dynamic> imc,::String interactionID,::String interactionToken,int type,::String title,::String custom_id){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		void _hx_run(::String _data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2222_showInteractionModal)
HXLINE(2222)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(2224)				::haxe::Log_obj::trace(_data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2224,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("showInteractionModal",18,fa,82,97)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1,::String,data,::Array< ::Dynamic>,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2228_showInteractionModal)
HXLINE(2229)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2229,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("showInteractionModal",18,fa,82,97)));
HXLINE(2230)			::haxe::Log_obj::trace(r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2230,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("showInteractionModal",18,fa,82,97)));
HXLINE(2231)			::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2231,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("showInteractionModal",18,fa,82,97)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2200_showInteractionModal)
HXLINE(2201)		::Array< ::Dynamic> r = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(2203)		r[0] =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/interactions/",1f,03,c7,ac)) + interactionID) + HX_("/",2f,00,00,00)) + interactionToken) + HX_("/callback",f4,e0,58,39)));
HXLINE(2204)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(2205)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(2206)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(2207)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(2208)		 ::Dynamic replacer = null();
HXDLIN(2208)		::String space = null();
HXDLIN(2208)		::String data = ::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("data",2a,56,63,42), ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("custom_id",e9,0e,c3,f8),custom_id)
            				->setFixed(1,HX_("title",98,15,3b,10),title)
            				->setFixed(2,HX_("type",ba,f2,08,4d),5)
            				->setFixed(3,HX_("components",16,b5,1e,5a),imc)))
            			->setFixed(1,HX_("type",ba,f2,08,4d),9)),replacer,space);
HXLINE(2219)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->setPostData(data);
HXLINE(2220)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->onData =  ::Dynamic(new _hx_Closure_0());
HXLINE(2227)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->onError =  ::Dynamic(new _hx_Closure_1(data,r));
HXLINE(2233)		r->__get(0).StaticCast<  ::hxdiscord::utils::Http >()->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(Endpoints_obj,showInteractionModal,(void))

void Endpoints_obj::sendInteractionCallback( ::Dynamic ic,::String interactionID,::String interactionToken,int type, ::Dynamic ephemeral){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< ::String >,response) HXARGC(1)
            		void _hx_run(::String data){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2371_sendInteractionCallback)
HXLINE(2372)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(2374)				::haxe::Log_obj::trace(data,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2374,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendInteractionCallback",4f,07,b0,3c)));
            			}
HXLINE(2376)			response[0] = data;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S2(::hx::LocalFunc,_hx_Closure_1, ::Dynamic,ic, ::hxdiscord::utils::Http,r) HXARGC(1)
            		void _hx_run(::String error){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2380_sendInteractionCallback)
HXLINE(2381)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + error),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2381,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendInteractionCallback",4f,07,b0,3c)));
HXLINE(2382)			::haxe::Log_obj::trace(r->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2382,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendInteractionCallback",4f,07,b0,3c)));
HXLINE(2383)			 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(2383)			 ::Dynamic replacer = null();
HXDLIN(2383)			::String space = null();
HXDLIN(2383)			::String _hx_tmp1 = ::haxe::format::JsonPrinter_obj::print(ic,replacer,space);
HXDLIN(2383)			_hx_tmp(_hx_tmp1,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2383,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("sendInteractionCallback",4f,07,b0,3c)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2240_sendInteractionCallback)
HXLINE(2241)		::Array< ::String > response = ::Array_obj< ::String >::__new(0);
HXLINE(2242)		bool attachments = false;
HXLINE(2243)		if (::hx::IsNotNull( ic->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic) )) {
HXLINE(2245)			attachments = true;
            		}
            		else {
HXLINE(2249)			attachments = false;
            		}
HXLINE(2251)		 ::Dynamic replacer = null();
HXDLIN(2251)		::String space = null();
HXDLIN(2251)		 ::Dynamic getJson =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,::haxe::format::JsonPrinter_obj::print(ic,replacer,space))->doParse();
HXLINE(2253)		if (( (bool)(ephemeral) )) {
HXLINE(2255)			ic->__SetField(HX_("flags",47,2b,8c,02),64,::hx::paccDynamic);
            		}
HXLINE(2260)		 ::haxe::io::BytesOutput bytesOutput =  ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(2261)		bytesOutput->writeString(HX_("--boundary",4a,10,dd,2e),null());
HXLINE(2262)		bytesOutput->writeString(HX_("\n",0a,00,00,00),null());
HXLINE(2263)		bytesOutput->writeString(HX_("Content-Disposition: form-data; name=\"payload_json\"",2a,f4,d2,13),null());
HXLINE(2264)		bytesOutput->writeString(HX_("\n",0a,00,00,00),null());
HXLINE(2265)		bytesOutput->writeString(HX_("Content-Type: application/json;",60,bf,16,91),null());
HXLINE(2266)		bytesOutput->writeString(HX_("\n\n",c0,08,00,00),null());
HXLINE(2267)		if (attachments) {
HXLINE(2269)			 ::Dynamic replacer1 = null();
HXDLIN(2269)			::String space1 = null();
HXDLIN(2269)			 ::Dynamic newJson =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("data",2a,56,63,42),ic)
            				->setFixed(1,HX_("type",ba,f2,08,4d),type)),replacer1,space1))->doParse();
HXLINE(2274)			::String thing = HX_("",00,00,00,00);
HXLINE(2275)			{
HXLINE(2275)				int _g = 0;
HXDLIN(2275)				int _g1 = ( (int)( ::Dynamic( ::Dynamic(newJson->__Field(HX_("data",2a,56,63,42),::hx::paccDynamic))->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic)) );
HXDLIN(2275)				while((_g < _g1)){
HXLINE(2275)					_g = (_g + 1);
HXDLIN(2275)					int i = (_g - 1);
HXLINE(2277)					thing = ( (::String)( ::Dynamic( ::Dynamic( ::Dynamic(newJson->__Field(HX_("data",2a,56,63,42),::hx::paccDynamic))->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic))->toString()) );
HXLINE(2278)					::Array< ::String > split = thing.split(HX_("/",2f,00,00,00));
HXLINE(2279)					 ::Dynamic( ::Dynamic(newJson->__Field(HX_("data",2a,56,63,42),::hx::paccDynamic))->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i)->__SetField(HX_("filename",c7,2e,6a,77),split->__get((split->length - 1)),::hx::paccDynamic);
            				}
            			}
HXLINE(2281)			 ::Dynamic replacer2 = null();
HXDLIN(2281)			::String space2 = null();
HXDLIN(2281)			bytesOutput->writeString(::haxe::format::JsonPrinter_obj::print(newJson,replacer2,space2),null());
            		}
            		else {
HXLINE(2285)			 ::Dynamic replacer3 = null();
HXDLIN(2285)			::String space3 = null();
HXDLIN(2285)			bytesOutput->writeString(::haxe::format::JsonPrinter_obj::print( ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("data",2a,56,63,42),ic)
            				->setFixed(1,HX_("type",ba,f2,08,4d),type)),replacer3,space3),null());
            		}
HXLINE(2290)		if (attachments) {
HXLINE(2292)			{
HXLINE(2292)				int _g2 = 0;
HXDLIN(2292)				int _g3 = ( (::cpp::VirtualArray)(ic->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic)) )->get_length();
HXDLIN(2292)				while((_g2 < _g3)){
HXLINE(2292)					_g2 = (_g2 + 1);
HXDLIN(2292)					int i1 = (_g2 - 1);
HXLINE(2294)					bytesOutput->writeString(HX_("\n--boundary",d4,40,8d,37),null());
HXLINE(2295)					bytesOutput->writeString(( (::String)(((((HX_("\nContent-Disposition: form-data; name=\"files[",0d,79,15,c6) + i1) + HX_("]\"; filename=\"",36,84,dc,08)) +  ::Dynamic(getJson->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i1)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) + HX_("\"",22,00,00,00))) ),null());
HXLINE(2296)					bytesOutput->writeString((HX_("\nContent-Type: ",7e,69,ba,ef) + ::hxdiscord::utils::MimeResolver_obj::getMimeType(( (::String)( ::Dynamic(getJson->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i1)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) ))),null());
HXLINE(2297)					bytesOutput->writeString(HX_("\n\n",c0,08,00,00),null());
HXLINE(2298)					 ::haxe::io::Bytes _hx_tmp = ::sys::io::File_obj::getBytes(( (::String)( ::Dynamic(getJson->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i1)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) ));
HXDLIN(2298)					bytesOutput->writeFullBytes(_hx_tmp,0,( (int)(::sys::FileSystem_obj::stat(( (::String)( ::Dynamic(getJson->__Field(HX_("attachments",30,df,33,e7),::hx::paccDynamic))->__GetItem(i1)->__Field(HX_("filename",c7,2e,6a,77),::hx::paccDynamic)) ))->__Field(HX_("size",c1,a0,53,4c),::hx::paccDynamic)) ));
            				}
            			}
HXLINE(2300)			bytesOutput->writeString(HX_("\n--boundary--",34,45,fe,25),null());
            		}
            		else {
HXLINE(2304)			bytesOutput->writeString(HX_("\n--boundary--",34,45,fe,25),null());
            		}
HXLINE(2356)		 ::hxdiscord::utils::Http r =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/interactions/",1f,03,c7,ac)) + interactionID) + HX_("/",2f,00,00,00)) + interactionToken) + HX_("/callback",f4,e0,58,39)));
HXLINE(2358)		r->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(2359)		r->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(2360)		r->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("multipart/form-data; boundary=boundary",e8,7b,54,aa));
HXLINE(2362)		r->setMethod(HX_("POST",60,4c,1d,35));
HXLINE(2365)		 ::hxdiscord::utils::Http r1 = r;
HXDLIN(2365)		r1->setPostBytes(bytesOutput->getBytes());
HXLINE(2370)		r->onData =  ::Dynamic(new _hx_Closure_0(response));
HXLINE(2379)		r->onError =  ::Dynamic(new _hx_Closure_1(ic,r));
HXLINE(2386)		r->send();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Endpoints_obj,sendInteractionCallback,(void))

 ::Dynamic Endpoints_obj::editInteractionResponse( ::Dynamic ic,::String interactionToken){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0,::Array< bool >,error) HXARGC(1)
            		void _hx_run(::String err){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2408_editInteractionResponse)
HXLINE(2409)			::haxe::Log_obj::trace((HX_("An error has occurred: ",1c,60,a4,c4) + err),::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2409,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("editInteractionResponse",89,20,92,86)));
HXLINE(2410)			error[0] = true;
            		}
            		HX_END_LOCAL_FUNC1((void))

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		void _hx_run(int status){
            			HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2414_editInteractionResponse)
HXLINE(2414)			if (::hxdiscord::DiscordClient_obj::debug) {
HXLINE(2416)				::haxe::Log_obj::trace(status,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2416,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("editInteractionResponse",89,20,92,86)));
            			}
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_f1f00be883a777db_2396_editInteractionResponse)
HXLINE(2398)		 ::hxdiscord::utils::Http req =  ::hxdiscord::utils::Http_obj::__alloc( HX_CTX ,((((((HX_("https://discord.com/api/v",02,22,37,fe) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("/webhooks/",84,7c,4a,a0)) + ::hxdiscord::DiscordClient_obj::accountId) + HX_("/",2f,00,00,00)) + interactionToken) + HX_("/messages/@original",3d,7e,4e,67)));
HXLINE(2399)		 ::haxe::io::BytesOutput_obj::__alloc( HX_CTX );
HXLINE(2400)		::Array< bool > error = ::Array_obj< bool >::fromData( _hx_array_data_934e271c_215,1);
HXLINE(2402)		 ::Dynamic replacer = null();
HXDLIN(2402)		::String space = null();
HXDLIN(2402)		req->setPostData(::haxe::format::JsonPrinter_obj::print(ic,replacer,space));
HXLINE(2403)		req->addHeader(HX_("User-Agent",03,d0,1e,60),HX_("hxdiscord (https://github.com/FurretDev/hxdiscord)",ab,fd,3f,7d));
HXLINE(2404)		req->addHeader(HX_("Content-type",ae,3d,84,51),HX_("application/json",87,d8,7f,4e));
HXLINE(2405)		req->addHeader(HX_("Authorization",d9,69,3c,31),::hxdiscord::DiscordClient_obj::authHeader);
HXLINE(2406)		req->setMethod(HX_("PATCH",a8,3e,45,3b));
HXLINE(2408)		req->onError =  ::Dynamic(new _hx_Closure_0(error));
HXLINE(2413)		req->onStatus =  ::Dynamic(new _hx_Closure_1());
HXLINE(2420)		req->send();
HXLINE(2421)		if (error->__get(0)) {
HXLINE(2423)			::haxe::Log_obj::trace(req->responseData,::hx::SourceInfo(HX_("hxdiscord/endpoints/Endpoints.hx",64,bb,5c,91),2423,HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93),HX_("editInteractionResponse",89,20,92,86)));
            		}
HXLINE(2425)		return  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,req->responseData)->doParse();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Endpoints_obj,editInteractionResponse,return )


Endpoints_obj::Endpoints_obj()
{
}

void Endpoints_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Endpoints);
	HX_MARK_MEMBER_NAME(getGateway,"getGateway");
	HX_MARK_END_CLASS();
}

void Endpoints_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(getGateway,"getGateway");
}

::hx::Val Endpoints_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"getGateway") ) { return ::hx::Val( getGateway ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Endpoints_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"url") ) { outValue = ( url ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { outValue = ( version ); return true; }
		if (HX_FIELD_EQ(inName,"getUser") ) { outValue = getUser_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"createDM") ) { outValue = createDM_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getRoles") ) { outValue = getRoles_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getGuild") ) { outValue = getGuild_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pinMessage") ) { outValue = pinMessage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"joinThread") ) { outValue = joinThread_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"editMessage") ) { outValue = editMessage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sendMessage") ) { outValue = sendMessage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"modifyGuild") ) { outValue = modifyGuild_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteGuild") ) { outValue = deleteGuild_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"leaveThread") ) { outValue = leaveThread_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"unpinMessage") ) { outValue = unpinMessage_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getGatewayBot") ) { outValue = ( getGatewayBot ); return true; }
		if (HX_FIELD_EQ(inName,"hasPermission") ) { outValue = hasPermission_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteMessage") ) { outValue = deleteMessage_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getCurrentUser") ) { outValue = getCurrentUser_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getGuildMember") ) { outValue = getGuildMember_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createReaction") ) { outValue = createReaction_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createGuildBan") ) { outValue = createGuildBan_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"removeGuildBan") ) { outValue = removeGuildBan_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"getEndpointData") ) { outValue = getEndpointData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addThreadMember") ) { outValue = addThreadMember_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getThreadMember") ) { outValue = getThreadMember_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"modifyGuildRole") ) { outValue = modifyGuildRole_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getGuildChannels") ) { outValue = getGuildChannels_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"deleteOwnReaction") ) { outValue = deleteOwnReaction_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"removeGuildMember") ) { outValue = removeGuildMember_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"modifyGuildMember") ) { outValue = modifyGuildMember_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getChannelInvites") ) { outValue = getChannelInvites_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getPinnedMessages") ) { outValue = getPinnedMessages_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listThreadMembers") ) { outValue = listThreadMembers_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"deleteUserReaction") ) { outValue = deleteUserReaction_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteAllReactions") ) { outValue = deleteAllReactions_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getChannelMessages") ) { outValue = getChannelMessages_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"removeThreadMember") ) { outValue = removeThreadMember_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addGuildMemberRole") ) { outValue = addGuildMemberRole_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bulkDeleteMessages") ) { outValue = bulkDeleteMessages_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"createChannelInvite") ) { outValue = createChannelInvite_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"groupDMAddRecipient") ) { outValue = groupDMAddRecipient_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"sendDataToMessageAPI") ) { outValue = sendDataToMessageAPI_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"makeInteractionThink") ) { outValue = makeInteractionThink_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"showInteractionModal") ) { outValue = showInteractionModal_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"removeGuildMemberRole") ) { outValue = removeGuildMemberRole_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"sendMessageToChannelID") ) { outValue = sendMessageToChannelID_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"editChannelPermissions") ) { outValue = editChannelPermissions_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"triggerTypingIndicator") ) { outValue = triggerTypingIndicator_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"groupDMRemoveRecipient") ) { outValue = groupDMRemoveRecipient_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"startThreadFromMessage") ) { outValue = startThreadFromMessage_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"deleteChannelPermission") ) { outValue = deleteChannelPermission_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sendInteractionCallback") ) { outValue = sendInteractionCallback_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"editInteractionResponse") ) { outValue = editInteractionResponse_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"followAnnouncementChannel") ) { outValue = followAnnouncementChannel_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"startThreadWithoutMessage") ) { outValue = startThreadWithoutMessage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"startThreadInForumChannel") ) { outValue = startThreadInForumChannel_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listPublicArchivedThreads") ) { outValue = listPublicArchivedThreads_dyn(); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"deleteAllReactionsForEmoji") ) { outValue = deleteAllReactionsForEmoji_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listPrivateArchivedThreads") ) { outValue = listPrivateArchivedThreads_dyn(); return true; }
		break;
	case 28:
		if (HX_FIELD_EQ(inName,"getGlobalApplicationCommands") ) { outValue = getGlobalApplicationCommands_dyn(); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"createGlobalApplicationCommand") ) { outValue = createGlobalApplicationCommand_dyn(); return true; }
		break;
	case 32:
		if (HX_FIELD_EQ(inName,"listJoinedPrivateArchivedThreads") ) { outValue = listJoinedPrivateArchivedThreads_dyn(); return true; }
		break;
	case 38:
		if (HX_FIELD_EQ(inName,"bulkOverwriteGlobalApplicationCommands") ) { outValue = bulkOverwriteGlobalApplicationCommands_dyn(); return true; }
	}
	return false;
}

::hx::Val Endpoints_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"getGateway") ) { getGateway=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Endpoints_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"url") ) { url=ioValue.Cast< ::String >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { version=ioValue.Cast< ::String >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getGatewayBot") ) { getGatewayBot=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

void Endpoints_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("getGateway",0e,c6,ba,e0));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Endpoints_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(Endpoints_obj,getGateway),HX_("getGateway",0e,c6,ba,e0)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo Endpoints_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &Endpoints_obj::url,HX_("url",6f,2b,59,00)},
	{::hx::fsString,(void *) &Endpoints_obj::version,HX_("version",18,e7,f1,7c)},
	{::hx::fsString,(void *) &Endpoints_obj::getGatewayBot,HX_("getGatewayBot",99,6c,38,b9)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String Endpoints_obj_sMemberFields[] = {
	HX_("getGateway",0e,c6,ba,e0),
	::String(null()) };

static void Endpoints_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Endpoints_obj::url,"url");
	HX_MARK_MEMBER_NAME(Endpoints_obj::version,"version");
	HX_MARK_MEMBER_NAME(Endpoints_obj::getGatewayBot,"getGatewayBot");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Endpoints_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Endpoints_obj::url,"url");
	HX_VISIT_MEMBER_NAME(Endpoints_obj::version,"version");
	HX_VISIT_MEMBER_NAME(Endpoints_obj::getGatewayBot,"getGatewayBot");
};

#endif

::hx::Class Endpoints_obj::__mClass;

static ::String Endpoints_obj_sStaticFields[] = {
	HX_("url",6f,2b,59,00),
	HX_("version",18,e7,f1,7c),
	HX_("getGatewayBot",99,6c,38,b9),
	HX_("getEndpointData",15,1d,de,a7),
	HX_("createDM",85,59,f4,2b),
	HX_("getCurrentUser",2e,be,dd,0d),
	HX_("hasPermission",09,29,25,20),
	HX_("getUser",01,42,30,20),
	HX_("getGuildMember",77,33,1d,61),
	HX_("getRoles",c7,2b,36,4d),
	HX_("deleteMessage",dc,c8,9a,f8),
	HX_("editMessage",dd,48,19,cc),
	HX_("sendMessage",5f,89,1d,24),
	HX_("sendMessageToChannelID",44,07,b5,0f),
	HX_("sendDataToMessageAPI",20,dd,b3,48),
	HX_("createReaction",c5,66,ef,48),
	HX_("deleteOwnReaction",a4,3d,e9,8c),
	HX_("deleteUserReaction",df,19,10,ba),
	HX_("deleteAllReactions",14,28,91,1c),
	HX_("deleteAllReactionsForEmoji",f1,0f,25,0c),
	HX_("getGuild",3d,d1,c2,fb),
	HX_("createGuildBan",f8,f8,e0,c3),
	HX_("removeGuildBan",40,b6,fc,3b),
	HX_("removeGuildMember",89,7a,cf,93),
	HX_("modifyGuildMember",13,22,f2,c6),
	HX_("modifyGuild",d9,a2,d0,3c),
	HX_("getGuildChannels",ad,3c,a2,2c),
	HX_("deleteGuild",88,f5,e0,2b),
	HX_("editChannelPermissions",2b,cd,d3,fe),
	HX_("getChannelInvites",3d,63,37,63),
	HX_("getChannelMessages",b9,30,2a,5e),
	HX_("createChannelInvite",50,16,f3,97),
	HX_("deleteChannelPermission",07,47,db,7a),
	HX_("followAnnouncementChannel",cb,23,fd,ad),
	HX_("triggerTypingIndicator",00,14,72,32),
	HX_("getPinnedMessages",3a,b7,6c,2c),
	HX_("pinMessage",f2,e9,a7,a0),
	HX_("unpinMessage",8b,19,b7,0c),
	HX_("groupDMAddRecipient",20,92,2d,03),
	HX_("groupDMRemoveRecipient",4d,7b,57,01),
	HX_("startThreadFromMessage",11,b4,4e,cf),
	HX_("startThreadWithoutMessage",4b,3e,fe,ca),
	HX_("startThreadInForumChannel",93,72,34,1b),
	HX_("joinThread",54,ee,b9,2c),
	HX_("addThreadMember",85,70,9a,a9),
	HX_("leaveThread",21,b7,35,b1),
	HX_("removeThreadMember",28,43,81,6f),
	HX_("getThreadMember",7a,5a,35,46),
	HX_("listThreadMembers",f1,77,79,1b),
	HX_("listPublicArchivedThreads",40,a8,54,22),
	HX_("listPrivateArchivedThreads",62,95,ab,98),
	HX_("listJoinedPrivateArchivedThreads",8b,95,f3,be),
	HX_("modifyGuildRole",ef,9a,45,f7),
	HX_("addGuildMemberRole",62,d5,1b,7a),
	HX_("removeGuildMemberRole",9f,0a,82,22),
	HX_("getGlobalApplicationCommands",1f,49,f1,8d),
	HX_("createGlobalApplicationCommand",3a,d9,f5,6c),
	HX_("bulkOverwriteGlobalApplicationCommands",bc,f1,8a,c1),
	HX_("bulkDeleteMessages",c9,16,58,6a),
	HX_("makeInteractionThink",ce,78,48,92),
	HX_("showInteractionModal",18,fa,82,97),
	HX_("sendInteractionCallback",4f,07,b0,3c),
	HX_("editInteractionResponse",89,20,92,86),
	::String(null())
};

void Endpoints_obj::__register()
{
	Endpoints_obj _hx_dummy;
	Endpoints_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hxdiscord.endpoints.Endpoints",1c,27,4e,93);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Endpoints_obj::__GetStatic;
	__mClass->mSetStaticField = &Endpoints_obj::__SetStatic;
	__mClass->mMarkFunc = Endpoints_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Endpoints_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Endpoints_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Endpoints_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Endpoints_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Endpoints_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Endpoints_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Endpoints_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_f1f00be883a777db_26_boot)
HXDLIN(  26)		url = HX_("https://discord.com/api/",f4,53,d2,99);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f1f00be883a777db_28_boot)
HXDLIN(  28)		version = HX_("v10",d5,b4,59,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_f1f00be883a777db_33_boot)
HXDLIN(  33)		getGatewayBot = HX_("/gateway/bot",6d,77,14,d6);
            	}
}

} // end namespace hxdiscord
} // end namespace endpoints
