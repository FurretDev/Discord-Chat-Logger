// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_haxe_format_JsonPrinter
#include <haxe/format/JsonPrinter.h>
#endif
#ifndef INCLUDED_hxdiscord_gateway_Gateway
#include <hxdiscord/gateway/Gateway.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_2dcaf6d57974de92_12_preparePackage,"hxdiscord.gateway.Gateway","preparePackage",0x1004d8c5,"hxdiscord.gateway.Gateway.preparePackage","hxdiscord/gateway/Gateway.hx",12,0x2bc43198)
HX_LOCAL_STACK_FRAME(_hx_pos_2dcaf6d57974de92_5_boot,"hxdiscord.gateway.Gateway","boot",0x4efc28b8,"hxdiscord.gateway.Gateway.boot","hxdiscord/gateway/Gateway.hx",5,0x2bc43198)
HX_LOCAL_STACK_FRAME(_hx_pos_2dcaf6d57974de92_6_boot,"hxdiscord.gateway.Gateway","boot",0x4efc28b8,"hxdiscord.gateway.Gateway.boot","hxdiscord/gateway/Gateway.hx",6,0x2bc43198)
HX_LOCAL_STACK_FRAME(_hx_pos_2dcaf6d57974de92_7_boot,"hxdiscord.gateway.Gateway","boot",0x4efc28b8,"hxdiscord.gateway.Gateway.boot","hxdiscord/gateway/Gateway.hx",7,0x2bc43198)
HX_LOCAL_STACK_FRAME(_hx_pos_2dcaf6d57974de92_9_boot,"hxdiscord.gateway.Gateway","boot",0x4efc28b8,"hxdiscord.gateway.Gateway.boot","hxdiscord/gateway/Gateway.hx",9,0x2bc43198)
namespace hxdiscord{
namespace gateway{

void Gateway_obj::__construct() { }

Dynamic Gateway_obj::__CreateEmpty() { return new Gateway_obj; }

void *Gateway_obj::_hx_vtable = 0;

Dynamic Gateway_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Gateway_obj > _hx_result = new Gateway_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Gateway_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x024ce558;
}

::String Gateway_obj::API_VERSION;

::String Gateway_obj::GATEWAY_URL;

 ::Dynamic Gateway_obj::GATEWAY_JSON;

 ::Dynamic Gateway_obj::heartbeat_interval;

::String Gateway_obj::preparePackage(::String pack){
            	HX_STACKFRAME(&_hx_pos_2dcaf6d57974de92_12_preparePackage)
HXLINE(  13)		 ::Dynamic data = null();
HXLINE(  15)		if ((pack == HX_("heartbeat_package",03,dd,d9,78))) {
HXLINE(  18)			data =  ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("d",64,00,00,00),null())
            				->setFixed(1,HX_("op",21,61,00,00),1));
            		}
HXLINE(  23)		 ::Dynamic replacer = null();
HXDLIN(  23)		::String space = null();
HXDLIN(  23)		return ::haxe::format::JsonPrinter_obj::print(data,replacer,space);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Gateway_obj,preparePackage,return )


Gateway_obj::Gateway_obj()
{
}

bool Gateway_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"API_VERSION") ) { outValue = ( API_VERSION ); return true; }
		if (HX_FIELD_EQ(inName,"GATEWAY_URL") ) { outValue = ( GATEWAY_URL ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"GATEWAY_JSON") ) { outValue = ( GATEWAY_JSON ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"preparePackage") ) { outValue = preparePackage_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"heartbeat_interval") ) { outValue = ( heartbeat_interval ); return true; }
	}
	return false;
}

bool Gateway_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"API_VERSION") ) { API_VERSION=ioValue.Cast< ::String >(); return true; }
		if (HX_FIELD_EQ(inName,"GATEWAY_URL") ) { GATEWAY_URL=ioValue.Cast< ::String >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"GATEWAY_JSON") ) { GATEWAY_JSON=ioValue.Cast<  ::Dynamic >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"heartbeat_interval") ) { heartbeat_interval=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Gateway_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Gateway_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &Gateway_obj::API_VERSION,HX_("API_VERSION",f3,b6,13,2d)},
	{::hx::fsString,(void *) &Gateway_obj::GATEWAY_URL,HX_("GATEWAY_URL",34,e2,1a,cf)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Gateway_obj::GATEWAY_JSON,HX_("GATEWAY_JSON",a3,77,26,61)},
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &Gateway_obj::heartbeat_interval,HX_("heartbeat_interval",28,15,ef,34)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Gateway_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Gateway_obj::API_VERSION,"API_VERSION");
	HX_MARK_MEMBER_NAME(Gateway_obj::GATEWAY_URL,"GATEWAY_URL");
	HX_MARK_MEMBER_NAME(Gateway_obj::GATEWAY_JSON,"GATEWAY_JSON");
	HX_MARK_MEMBER_NAME(Gateway_obj::heartbeat_interval,"heartbeat_interval");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Gateway_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Gateway_obj::API_VERSION,"API_VERSION");
	HX_VISIT_MEMBER_NAME(Gateway_obj::GATEWAY_URL,"GATEWAY_URL");
	HX_VISIT_MEMBER_NAME(Gateway_obj::GATEWAY_JSON,"GATEWAY_JSON");
	HX_VISIT_MEMBER_NAME(Gateway_obj::heartbeat_interval,"heartbeat_interval");
};

#endif

::hx::Class Gateway_obj::__mClass;

static ::String Gateway_obj_sStaticFields[] = {
	HX_("API_VERSION",f3,b6,13,2d),
	HX_("GATEWAY_URL",34,e2,1a,cf),
	HX_("GATEWAY_JSON",a3,77,26,61),
	HX_("heartbeat_interval",28,15,ef,34),
	HX_("preparePackage",bf,10,03,f9),
	::String(null())
};

void Gateway_obj::__register()
{
	Gateway_obj _hx_dummy;
	Gateway_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hxdiscord.gateway.Gateway",a8,09,82,19);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Gateway_obj::__GetStatic;
	__mClass->mSetStaticField = &Gateway_obj::__SetStatic;
	__mClass->mMarkFunc = Gateway_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Gateway_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Gateway_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Gateway_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Gateway_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Gateway_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Gateway_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_2dcaf6d57974de92_5_boot)
HXDLIN(   5)		API_VERSION = HX_("10",df,2a,00,00);
            	}
{
            	HX_STACKFRAME(&_hx_pos_2dcaf6d57974de92_6_boot)
HXDLIN(   6)		GATEWAY_URL = ((HX_("wss://gateway.discord.gg/?v=",a6,e7,0f,f0) + ::hxdiscord::gateway::Gateway_obj::API_VERSION) + HX_("&encoding=json",4c,1b,0d,30));
            	}
{
            	HX_STACKFRAME(&_hx_pos_2dcaf6d57974de92_7_boot)
HXDLIN(   7)		GATEWAY_JSON = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_2dcaf6d57974de92_9_boot)
HXDLIN(   9)		heartbeat_interval = null();
            	}
}

} // end namespace hxdiscord
} // end namespace gateway
