// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_WebhookSender
#include <WebhookSender.h>
#endif
#ifndef INCLUDED_haxe_format_JsonPrinter
#include <haxe/format/JsonPrinter.h>
#endif
#ifndef INCLUDED_haxe_http_HttpBase
#include <haxe/http/HttpBase.h>
#endif
#ifndef INCLUDED_sys_Http
#include <sys/Http.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_552b95057d88361d_1_new,"WebhookSender","new",0x5aef505e,"WebhookSender.new","WebhookSender.hx",1,0x58cd64d2)
HX_LOCAL_STACK_FRAME(_hx_pos_552b95057d88361d_6_send,"WebhookSender","send",0x39c50b8a,"WebhookSender.send","WebhookSender.hx",6,0x58cd64d2)
HX_LOCAL_STACK_FRAME(_hx_pos_552b95057d88361d_13_getHttp,"WebhookSender","getHttp",0x7f27a23c,"WebhookSender.getHttp","WebhookSender.hx",13,0x58cd64d2)

void WebhookSender_obj::__construct(::String url){
            	HX_STACKFRAME(&_hx_pos_552b95057d88361d_1_new)
HXLINE(   2)		this->url = HX_("",00,00,00,00);
HXLINE(   4)		this->url = url;
            	}

Dynamic WebhookSender_obj::__CreateEmpty() { return new WebhookSender_obj; }

void *WebhookSender_obj::_hx_vtable = 0;

Dynamic WebhookSender_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< WebhookSender_obj > _hx_result = new WebhookSender_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool WebhookSender_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x39bb9eac;
}

void WebhookSender_obj::send( ::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_552b95057d88361d_6_send)
HXLINE(   7)		 ::sys::Http http =  ::sys::Http_obj::__alloc( HX_CTX ,this->url);
HXLINE(   8)		 ::Dynamic replacer = null();
HXDLIN(   8)		::String space = null();
HXDLIN(   8)		http->setPostData(::haxe::format::JsonPrinter_obj::print(data,replacer,space));
HXLINE(   9)		http->addHeader(HX_("Content-Type",ce,69,5d,3c),HX_("application/json",87,d8,7f,4e));
HXLINE(  10)		http->request(true);
            	}


HX_DEFINE_DYNAMIC_FUNC1(WebhookSender_obj,send,(void))

 ::sys::Http WebhookSender_obj::getHttp(){
            	HX_GC_STACKFRAME(&_hx_pos_552b95057d88361d_13_getHttp)
HXDLIN(  13)		return  ::sys::Http_obj::__alloc( HX_CTX ,this->url);
            	}


HX_DEFINE_DYNAMIC_FUNC0(WebhookSender_obj,getHttp,return )


::hx::ObjectPtr< WebhookSender_obj > WebhookSender_obj::__new(::String url) {
	::hx::ObjectPtr< WebhookSender_obj > __this = new WebhookSender_obj();
	__this->__construct(url);
	return __this;
}

::hx::ObjectPtr< WebhookSender_obj > WebhookSender_obj::__alloc(::hx::Ctx *_hx_ctx,::String url) {
	WebhookSender_obj *__this = (WebhookSender_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(WebhookSender_obj), true, "WebhookSender"));
	*(void **)__this = WebhookSender_obj::_hx_vtable;
	__this->__construct(url);
	return __this;
}

WebhookSender_obj::WebhookSender_obj()
{
}

void WebhookSender_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(WebhookSender);
	HX_MARK_MEMBER_NAME(url,"url");
	HX_MARK_END_CLASS();
}

void WebhookSender_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(url,"url");
}

::hx::Val WebhookSender_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"url") ) { return ::hx::Val( url ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"send") ) { return ::hx::Val( send_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getHttp") ) { return ::hx::Val( getHttp_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val WebhookSender_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"url") ) { url=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void WebhookSender_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("url",6f,2b,59,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo WebhookSender_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(WebhookSender_obj,url),HX_("url",6f,2b,59,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *WebhookSender_obj_sStaticStorageInfo = 0;
#endif

static ::String WebhookSender_obj_sMemberFields[] = {
	HX_("url",6f,2b,59,00),
	HX_("send",48,8d,50,4c),
	HX_("getHttp",3e,4b,99,17),
	::String(null()) };

::hx::Class WebhookSender_obj::__mClass;

void WebhookSender_obj::__register()
{
	WebhookSender_obj _hx_dummy;
	WebhookSender_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("WebhookSender",6c,89,74,5d);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(WebhookSender_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< WebhookSender_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = WebhookSender_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = WebhookSender_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

