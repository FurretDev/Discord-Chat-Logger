// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ws__Types_BinaryType_Impl_
#include <haxe/ws/_Types/BinaryType_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_3b06cdde1b7e5ad8_13_toString,"haxe.ws._Types.BinaryType_Impl_","toString",0x0318c395,"haxe.ws._Types.BinaryType_Impl_.toString","haxe/ws/Types.hx",13,0xe23250ef)
HX_LOCAL_STACK_FRAME(_hx_pos_3b06cdde1b7e5ad8_10_boot,"haxe.ws._Types.BinaryType_Impl_","boot",0x67e58e9b,"haxe.ws._Types.BinaryType_Impl_.boot","haxe/ws/Types.hx",10,0xe23250ef)
namespace haxe{
namespace ws{
namespace _Types{

void BinaryType_Impl__obj::__construct() { }

Dynamic BinaryType_Impl__obj::__CreateEmpty() { return new BinaryType_Impl__obj; }

void *BinaryType_Impl__obj::_hx_vtable = 0;

Dynamic BinaryType_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< BinaryType_Impl__obj > _hx_result = new BinaryType_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool BinaryType_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x345fa137;
}

::String BinaryType_Impl__obj::ARRAYBUFFER;

::String BinaryType_Impl__obj::toString(::String this1){
            	HX_STACKFRAME(&_hx_pos_3b06cdde1b7e5ad8_13_toString)
HXDLIN(  13)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(BinaryType_Impl__obj,toString,return )


BinaryType_Impl__obj::BinaryType_Impl__obj()
{
}

bool BinaryType_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *BinaryType_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo BinaryType_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &BinaryType_Impl__obj::ARRAYBUFFER,HX_("ARRAYBUFFER",39,ef,83,5f)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void BinaryType_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(BinaryType_Impl__obj::ARRAYBUFFER,"ARRAYBUFFER");
};

#ifdef HXCPP_VISIT_ALLOCS
static void BinaryType_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(BinaryType_Impl__obj::ARRAYBUFFER,"ARRAYBUFFER");
};

#endif

::hx::Class BinaryType_Impl__obj::__mClass;

static ::String BinaryType_Impl__obj_sStaticFields[] = {
	HX_("ARRAYBUFFER",39,ef,83,5f),
	HX_("toString",ac,d0,6e,38),
	::String(null())
};

void BinaryType_Impl__obj::__register()
{
	BinaryType_Impl__obj _hx_dummy;
	BinaryType_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.ws._Types.BinaryType_Impl_",a5,6e,38,a5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &BinaryType_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = BinaryType_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(BinaryType_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< BinaryType_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = BinaryType_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BinaryType_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BinaryType_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void BinaryType_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_3b06cdde1b7e5ad8_10_boot)
HXDLIN(  10)		ARRAYBUFFER = HX_("arraybuffer",59,e3,47,89);
            	}
}

} // end namespace haxe
} // end namespace ws
} // end namespace _Types
