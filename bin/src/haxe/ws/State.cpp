// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_haxe_ws_State
#include <haxe/ws/State.h>
#endif
namespace haxe{
namespace ws{

::haxe::ws::State State_obj::Body;

::haxe::ws::State State_obj::Closed;

::haxe::ws::State State_obj::Handshake;

::haxe::ws::State State_obj::Head;

::haxe::ws::State State_obj::HeadExtraLength;

::haxe::ws::State State_obj::HeadExtraMask;

bool State_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Body",c2,a6,f4,2b)) { outValue = State_obj::Body; return true; }
	if (inName==HX_("Closed",cc,1d,e6,42)) { outValue = State_obj::Closed; return true; }
	if (inName==HX_("Handshake",d7,c0,08,56)) { outValue = State_obj::Handshake; return true; }
	if (inName==HX_("Head",40,55,e4,2f)) { outValue = State_obj::Head; return true; }
	if (inName==HX_("HeadExtraLength",36,ba,d0,53)) { outValue = State_obj::HeadExtraLength; return true; }
	if (inName==HX_("HeadExtraMask",3c,72,34,a4)) { outValue = State_obj::HeadExtraMask; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(State_obj)

int State_obj::__FindIndex(::String inName)
{
	if (inName==HX_("Body",c2,a6,f4,2b)) return 4;
	if (inName==HX_("Closed",cc,1d,e6,42)) return 5;
	if (inName==HX_("Handshake",d7,c0,08,56)) return 0;
	if (inName==HX_("Head",40,55,e4,2f)) return 1;
	if (inName==HX_("HeadExtraLength",36,ba,d0,53)) return 2;
	if (inName==HX_("HeadExtraMask",3c,72,34,a4)) return 3;
	return super::__FindIndex(inName);
}

int State_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("Body",c2,a6,f4,2b)) return 0;
	if (inName==HX_("Closed",cc,1d,e6,42)) return 0;
	if (inName==HX_("Handshake",d7,c0,08,56)) return 0;
	if (inName==HX_("Head",40,55,e4,2f)) return 0;
	if (inName==HX_("HeadExtraLength",36,ba,d0,53)) return 0;
	if (inName==HX_("HeadExtraMask",3c,72,34,a4)) return 0;
	return super::__FindArgCount(inName);
}

::hx::Val State_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	if (inName==HX_("Body",c2,a6,f4,2b)) return Body;
	if (inName==HX_("Closed",cc,1d,e6,42)) return Closed;
	if (inName==HX_("Handshake",d7,c0,08,56)) return Handshake;
	if (inName==HX_("Head",40,55,e4,2f)) return Head;
	if (inName==HX_("HeadExtraLength",36,ba,d0,53)) return HeadExtraLength;
	if (inName==HX_("HeadExtraMask",3c,72,34,a4)) return HeadExtraMask;
	return super::__Field(inName,inCallProp);
}

static ::String State_obj_sStaticFields[] = {
	HX_("Handshake",d7,c0,08,56),
	HX_("Head",40,55,e4,2f),
	HX_("HeadExtraLength",36,ba,d0,53),
	HX_("HeadExtraMask",3c,72,34,a4),
	HX_("Body",c2,a6,f4,2b),
	HX_("Closed",cc,1d,e6,42),
	::String(null())
};

::hx::Class State_obj::__mClass;

Dynamic __Create_State_obj() { return new State_obj; }

void State_obj::__register()
{

::hx::Static(__mClass) = ::hx::_hx_RegisterClass(HX_("haxe.ws.State",67,d9,fa,2c), ::hx::TCanCast< State_obj >,State_obj_sStaticFields,0,
	&__Create_State_obj, &__Create,
	&super::__SGetClass(), &CreateState_obj, 0
#ifdef HXCPP_VISIT_ALLOCS
    , 0
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &State_obj::__GetStatic;
}

void State_obj::__boot()
{
Body = ::hx::CreateConstEnum< State_obj >(HX_("Body",c2,a6,f4,2b),4);
Closed = ::hx::CreateConstEnum< State_obj >(HX_("Closed",cc,1d,e6,42),5);
Handshake = ::hx::CreateConstEnum< State_obj >(HX_("Handshake",d7,c0,08,56),0);
Head = ::hx::CreateConstEnum< State_obj >(HX_("Head",40,55,e4,2f),1);
HeadExtraLength = ::hx::CreateConstEnum< State_obj >(HX_("HeadExtraLength",36,ba,d0,53),2);
HeadExtraMask = ::hx::CreateConstEnum< State_obj >(HX_("HeadExtraMask",3c,72,34,a4),3);
}


} // end namespace haxe
} // end namespace ws
