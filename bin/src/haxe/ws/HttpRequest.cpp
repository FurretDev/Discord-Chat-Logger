// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_ws_HttpRequest
#include <haxe/ws/HttpRequest.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8c3c28e17b7b3c9c_3_new,"haxe.ws.HttpRequest","new",0xe51317ef,"haxe.ws.HttpRequest.new","haxe/ws/HttpRequest.hx",3,0x233c0901)
HX_LOCAL_STACK_FRAME(_hx_pos_8c3c28e17b7b3c9c_14_addLine,"haxe.ws.HttpRequest","addLine",0xfdac15c4,"haxe.ws.HttpRequest.addLine","haxe/ws/HttpRequest.hx",14,0x233c0901)
HX_LOCAL_STACK_FRAME(_hx_pos_8c3c28e17b7b3c9c_27_build,"haxe.ws.HttpRequest","build",0xc3b6647d,"haxe.ws.HttpRequest.build","haxe/ws/HttpRequest.hx",27,0x233c0901)
static const ::String _hx_array_data_74b6f47d_4[] = {
	HX_(" ",20,00,00,00),
};
static const ::String _hx_array_data_74b6f47d_5[] = {
	HX_(" ",20,00,00,00),
};
static const ::String _hx_array_data_74b6f47d_6[] = {
	HX_("\r\n",5d,0b,00,00),
};
static const ::String _hx_array_data_74b6f47d_7[] = {
	HX_(": ",a6,32,00,00),
};
static const ::String _hx_array_data_74b6f47d_8[] = {
	HX_("\r\n",5d,0b,00,00),
};
static const ::String _hx_array_data_74b6f47d_9[] = {
	HX_("\r\n",5d,0b,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_8c3c28e17b7b3c9c_51_toString,"haxe.ws.HttpRequest","toString",0x42f6c2bd,"haxe.ws.HttpRequest.toString","haxe/ws/HttpRequest.hx",51,0x233c0901)
namespace haxe{
namespace ws{

void HttpRequest_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_8c3c28e17b7b3c9c_3_new)
HXLINE(   8)		this->headers =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(   6)		this->httpVersion = null();
HXLINE(   5)		this->uri = null();
HXLINE(   4)		this->method = null();
            	}

Dynamic HttpRequest_obj::__CreateEmpty() { return new HttpRequest_obj; }

void *HttpRequest_obj::_hx_vtable = 0;

Dynamic HttpRequest_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< HttpRequest_obj > _hx_result = new HttpRequest_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool HttpRequest_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x601efbc5;
}

void HttpRequest_obj::addLine(::String line){
            	HX_STACKFRAME(&_hx_pos_8c3c28e17b7b3c9c_14_addLine)
HXDLIN(  14)		if (::hx::IsNull( this->method )) {
HXLINE(  15)			::Array< ::String > parts = line.split(HX_(" ",20,00,00,00));
HXLINE(  16)			this->method = parts->__get(0);
HXLINE(  17)			this->uri = parts->__get(1);
HXLINE(  18)			this->httpVersion = ::StringTools_obj::trim(parts->__get(2));
            		}
            		else {
HXLINE(  20)			int n = line.indexOf(HX_(":",3a,00,00,00),null());
HXLINE(  21)			::String name = line.substr(0,n);
HXLINE(  22)			::String value = line.substr((n + 1),line.length);
HXLINE(  23)			{
HXLINE(  23)				::Dynamic this1 = this->headers;
HXDLIN(  23)				::String key = ::StringTools_obj::trim(name);
HXDLIN(  23)				( ( ::haxe::ds::StringMap)(this1) )->set(key,::StringTools_obj::trim(value));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(HttpRequest_obj,addLine,(void))

::String HttpRequest_obj::build(){
            	HX_GC_STACKFRAME(&_hx_pos_8c3c28e17b7b3c9c_27_build)
HXLINE(  28)		 ::StringBuf sb =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE(  30)		{
HXLINE(  30)			::String x = this->method;
HXDLIN(  30)			if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  30)				sb->flush();
            			}
HXDLIN(  30)			if (::hx::IsNull( sb->b )) {
HXLINE(  30)				sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            			}
            			else {
HXLINE(  30)				::Array< ::String > sb1 = sb->b;
HXDLIN(  30)				sb1->push(::Std_obj::string(x));
            			}
            		}
HXLINE(  31)		{
HXLINE(  31)			if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  31)				sb->flush();
            			}
HXDLIN(  31)			if (::hx::IsNull( sb->b )) {
HXLINE(  31)				sb->b = ::Array_obj< ::String >::fromData( _hx_array_data_74b6f47d_4,1);
            			}
            			else {
HXLINE(  31)				sb->b->push(HX_(" ",20,00,00,00));
            			}
            		}
HXLINE(  32)		if (::hx::IsNotNull( this->uri )) {
HXLINE(  33)			{
HXLINE(  33)				::String x1 = this->uri;
HXDLIN(  33)				if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  33)					sb->flush();
            				}
HXDLIN(  33)				if (::hx::IsNull( sb->b )) {
HXLINE(  33)					sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x1));
            				}
            				else {
HXLINE(  33)					::Array< ::String > sb2 = sb->b;
HXDLIN(  33)					sb2->push(::Std_obj::string(x1));
            				}
            			}
HXLINE(  34)			{
HXLINE(  34)				if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  34)					sb->flush();
            				}
HXDLIN(  34)				if (::hx::IsNull( sb->b )) {
HXLINE(  34)					sb->b = ::Array_obj< ::String >::fromData( _hx_array_data_74b6f47d_5,1);
            				}
            				else {
HXLINE(  34)					sb->b->push(HX_(" ",20,00,00,00));
            				}
            			}
            		}
HXLINE(  36)		{
HXLINE(  36)			::String x2 = this->httpVersion;
HXDLIN(  36)			if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  36)				sb->flush();
            			}
HXDLIN(  36)			if (::hx::IsNull( sb->b )) {
HXLINE(  36)				sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x2));
            			}
            			else {
HXLINE(  36)				::Array< ::String > sb3 = sb->b;
HXDLIN(  36)				sb3->push(::Std_obj::string(x2));
            			}
            		}
HXLINE(  37)		{
HXLINE(  37)			if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  37)				sb->flush();
            			}
HXDLIN(  37)			if (::hx::IsNull( sb->b )) {
HXLINE(  37)				sb->b = ::Array_obj< ::String >::fromData( _hx_array_data_74b6f47d_6,1);
            			}
            			else {
HXLINE(  37)				sb->b->push(HX_("\r\n",5d,0b,00,00));
            			}
            		}
HXLINE(  39)		{
HXLINE(  39)			 ::Dynamic header = this->headers->keys();
HXDLIN(  39)			while(( (bool)(header->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(  39)				::String header1 = ( (::String)(header->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE(  40)				{
HXLINE(  40)					if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  40)						sb->flush();
            					}
HXDLIN(  40)					if (::hx::IsNull( sb->b )) {
HXLINE(  40)						sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(header1));
            					}
            					else {
HXLINE(  40)						::Array< ::String > sb4 = sb->b;
HXDLIN(  40)						sb4->push(::Std_obj::string(header1));
            					}
            				}
HXLINE(  41)				{
HXLINE(  41)					if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  41)						sb->flush();
            					}
HXDLIN(  41)					if (::hx::IsNull( sb->b )) {
HXLINE(  41)						sb->b = ::Array_obj< ::String >::fromData( _hx_array_data_74b6f47d_7,1);
            					}
            					else {
HXLINE(  41)						sb->b->push(HX_(": ",a6,32,00,00));
            					}
            				}
HXLINE(  42)				{
HXLINE(  42)					::String x3 = this->headers->get_string(header1);
HXDLIN(  42)					if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  42)						sb->flush();
            					}
HXDLIN(  42)					if (::hx::IsNull( sb->b )) {
HXLINE(  42)						sb->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x3));
            					}
            					else {
HXLINE(  42)						::Array< ::String > sb5 = sb->b;
HXDLIN(  42)						sb5->push(::Std_obj::string(x3));
            					}
            				}
HXLINE(  43)				{
HXLINE(  43)					if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  43)						sb->flush();
            					}
HXDLIN(  43)					if (::hx::IsNull( sb->b )) {
HXLINE(  43)						sb->b = ::Array_obj< ::String >::fromData( _hx_array_data_74b6f47d_8,1);
            					}
            					else {
HXLINE(  43)						sb->b->push(HX_("\r\n",5d,0b,00,00));
            					}
            				}
            			}
            		}
HXLINE(  46)		{
HXLINE(  46)			if (::hx::IsNotNull( sb->charBuf )) {
HXLINE(  46)				sb->flush();
            			}
HXDLIN(  46)			if (::hx::IsNull( sb->b )) {
HXLINE(  46)				sb->b = ::Array_obj< ::String >::fromData( _hx_array_data_74b6f47d_9,1);
            			}
            			else {
HXLINE(  46)				sb->b->push(HX_("\r\n",5d,0b,00,00));
            			}
            		}
HXLINE(  47)		return sb->toString();
            	}


HX_DEFINE_DYNAMIC_FUNC0(HttpRequest_obj,build,return )

::String HttpRequest_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_8c3c28e17b7b3c9c_51_toString)
HXDLIN(  51)		return this->build();
            	}


HX_DEFINE_DYNAMIC_FUNC0(HttpRequest_obj,toString,return )


::hx::ObjectPtr< HttpRequest_obj > HttpRequest_obj::__new() {
	::hx::ObjectPtr< HttpRequest_obj > __this = new HttpRequest_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< HttpRequest_obj > HttpRequest_obj::__alloc(::hx::Ctx *_hx_ctx) {
	HttpRequest_obj *__this = (HttpRequest_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(HttpRequest_obj), true, "haxe.ws.HttpRequest"));
	*(void **)__this = HttpRequest_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

HttpRequest_obj::HttpRequest_obj()
{
}

void HttpRequest_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(HttpRequest);
	HX_MARK_MEMBER_NAME(method,"method");
	HX_MARK_MEMBER_NAME(uri,"uri");
	HX_MARK_MEMBER_NAME(httpVersion,"httpVersion");
	HX_MARK_MEMBER_NAME(headers,"headers");
	HX_MARK_END_CLASS();
}

void HttpRequest_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(method,"method");
	HX_VISIT_MEMBER_NAME(uri,"uri");
	HX_VISIT_MEMBER_NAME(httpVersion,"httpVersion");
	HX_VISIT_MEMBER_NAME(headers,"headers");
}

::hx::Val HttpRequest_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"uri") ) { return ::hx::Val( uri ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"build") ) { return ::hx::Val( build_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"method") ) { return ::hx::Val( method ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"headers") ) { return ::hx::Val( headers ); }
		if (HX_FIELD_EQ(inName,"addLine") ) { return ::hx::Val( addLine_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return ::hx::Val( toString_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"httpVersion") ) { return ::hx::Val( httpVersion ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val HttpRequest_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"uri") ) { uri=inValue.Cast< ::String >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"method") ) { method=inValue.Cast< ::String >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"headers") ) { headers=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"httpVersion") ) { httpVersion=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void HttpRequest_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("method",e1,f6,5a,09));
	outFields->push(HX_("uri",6c,2b,59,00));
	outFields->push(HX_("httpVersion",70,74,d2,61));
	outFields->push(HX_("headers",46,52,08,63));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo HttpRequest_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(HttpRequest_obj,method),HX_("method",e1,f6,5a,09)},
	{::hx::fsString,(int)offsetof(HttpRequest_obj,uri),HX_("uri",6c,2b,59,00)},
	{::hx::fsString,(int)offsetof(HttpRequest_obj,httpVersion),HX_("httpVersion",70,74,d2,61)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(HttpRequest_obj,headers),HX_("headers",46,52,08,63)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *HttpRequest_obj_sStaticStorageInfo = 0;
#endif

static ::String HttpRequest_obj_sMemberFields[] = {
	HX_("method",e1,f6,5a,09),
	HX_("uri",6c,2b,59,00),
	HX_("httpVersion",70,74,d2,61),
	HX_("headers",46,52,08,63),
	HX_("addLine",b5,5a,f0,83),
	HX_("build",2e,db,ea,ba),
	HX_("toString",ac,d0,6e,38),
	::String(null()) };

::hx::Class HttpRequest_obj::__mClass;

void HttpRequest_obj::__register()
{
	HttpRequest_obj _hx_dummy;
	HttpRequest_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("haxe.ws.HttpRequest",7d,f4,b6,74);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(HttpRequest_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< HttpRequest_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HttpRequest_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HttpRequest_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace haxe
} // end namespace ws
