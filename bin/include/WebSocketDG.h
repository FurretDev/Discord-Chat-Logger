// Generated by Haxe 4.3.1
#ifndef INCLUDED_WebSocketDG
#define INCLUDED_WebSocketDG

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(WebSocketDG)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS1(haxe,Timer)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(haxe,ws,WebSocket)
HX_DECLARE_CLASS2(haxe,ws,WebSocketCommon)



class HXCPP_CLASS_ATTRIBUTES WebSocketDG_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef WebSocketDG_obj OBJ_;
		WebSocketDG_obj();

	public:
		enum { _hx_ClassId = 0x23d64bca };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="WebSocketDG")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"WebSocketDG"); }

		inline static ::hx::ObjectPtr< WebSocketDG_obj > __new() {
			::hx::ObjectPtr< WebSocketDG_obj > __this = new WebSocketDG_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< WebSocketDG_obj > __alloc(::hx::Ctx *_hx_ctx) {
			WebSocketDG_obj *__this = (WebSocketDG_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(WebSocketDG_obj), false, "WebSocketDG"));
			*(void **)__this = WebSocketDG_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~WebSocketDG_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("WebSocketDG",8a,06,db,70); }

		static void __boot();
		static  ::haxe::ws::WebSocket ws;
		static  ::haxe::Timer hb_timer;
		static int sequence;
		static ::String target_id;
		static  ::haxe::ds::StringMap channel_names;
		static ::String server_name;
		static ::String resume_gateway_url;
		static ::String session_id;
		static int interval;
		static bool canResume;
		static void startTheThing();
		static ::Dynamic startTheThing_dyn();

		static void stopEverything();
		static ::Dynamic stopEverything_dyn();

		static void incomingMessages(::String content);
		static ::Dynamic incomingMessages_dyn();

		static bool canILogThisChannel(::String id);
		static ::Dynamic canILogThisChannel_dyn();

		static  ::haxe::io::Bytes downloadFile(::String url);
		static ::Dynamic downloadFile_dyn();

};


#endif /* INCLUDED_WebSocketDG */ 
