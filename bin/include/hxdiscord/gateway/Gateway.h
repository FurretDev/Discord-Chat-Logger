// Generated by Haxe 4.3.1
#ifndef INCLUDED_hxdiscord_gateway_Gateway
#define INCLUDED_hxdiscord_gateway_Gateway

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hxdiscord,gateway,Gateway)

namespace hxdiscord{
namespace gateway{


class HXCPP_CLASS_ATTRIBUTES Gateway_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Gateway_obj OBJ_;
		Gateway_obj();

	public:
		enum { _hx_ClassId = 0x024ce558 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hxdiscord.gateway.Gateway")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"hxdiscord.gateway.Gateway"); }

		inline static ::hx::ObjectPtr< Gateway_obj > __new() {
			::hx::ObjectPtr< Gateway_obj > __this = new Gateway_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Gateway_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Gateway_obj *__this = (Gateway_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Gateway_obj), false, "hxdiscord.gateway.Gateway"));
			*(void **)__this = Gateway_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Gateway_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Gateway",e4,67,aa,5e); }

		static void __boot();
		static ::String API_VERSION;
		static ::String GATEWAY_URL;
		static  ::Dynamic GATEWAY_JSON;
		static  ::Dynamic heartbeat_interval;
		static ::String preparePackage(::String pack);
		static ::Dynamic preparePackage_dyn();

};

} // end namespace hxdiscord
} // end namespace gateway

#endif /* INCLUDED_hxdiscord_gateway_Gateway */ 
