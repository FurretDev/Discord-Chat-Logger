// Generated by Haxe 4.3.1
#ifndef INCLUDED_hxdiscord_utils_ISO8601Resolver
#define INCLUDED_hxdiscord_utils_ISO8601Resolver

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hxdiscord,utils,ISO8601Resolver)

namespace hxdiscord{
namespace utils{


class HXCPP_CLASS_ATTRIBUTES ISO8601Resolver_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ISO8601Resolver_obj OBJ_;
		ISO8601Resolver_obj();

	public:
		enum { _hx_ClassId = 0x28b4430d };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="hxdiscord.utils.ISO8601Resolver")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"hxdiscord.utils.ISO8601Resolver"); }

		inline static ::hx::ObjectPtr< ISO8601Resolver_obj > __new() {
			::hx::ObjectPtr< ISO8601Resolver_obj > __this = new ISO8601Resolver_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ISO8601Resolver_obj > __alloc(::hx::Ctx *_hx_ctx) {
			ISO8601Resolver_obj *__this = (ISO8601Resolver_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ISO8601Resolver_obj), false, "hxdiscord.utils.ISO8601Resolver"));
			*(void **)__this = ISO8601Resolver_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ISO8601Resolver_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ISO8601Resolver",4a,b6,b1,05); }

		static ::String getActualISODate();
		static ::Dynamic getActualISODate_dyn();

		static ::String getCalculatedISODate(::String time, ::Dynamic returnMilliseconds);
		static ::Dynamic getCalculatedISODate_dyn();

};

} // end namespace hxdiscord
} // end namespace utils

#endif /* INCLUDED_hxdiscord_utils_ISO8601Resolver */ 
