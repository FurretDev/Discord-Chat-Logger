// Generated by Haxe 4.3.1
#ifndef INCLUDED_hxdiscord_types_Member
#define INCLUDED_hxdiscord_types_Member

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(hxdiscord,types,Member)
HX_DECLARE_CLASS2(hxdiscord,types,User)

namespace hxdiscord{
namespace types{


class HXCPP_CLASS_ATTRIBUTES Member_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Member_obj OBJ_;
		Member_obj();

	public:
		enum { _hx_ClassId = 0x00faa9c3 };

		void __construct( ::Dynamic d,::String gi);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hxdiscord.types.Member")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"hxdiscord.types.Member"); }
		static ::hx::ObjectPtr< Member_obj > __new( ::Dynamic d,::String gi);
		static ::hx::ObjectPtr< Member_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic d,::String gi);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Member_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Member",7a,56,4a,39); }

		::String nick;
		::String avatar;
		::Array< ::String > roles;
		::String joined_at;
		::String premium_since;
		bool deaf;
		bool mute;
		 ::hxdiscord::types::User user;
		int flags;
		bool pending;
		::String permissions;
		::String communication_disabled_until;
		::String guild_id;
		::String id;
		::Array< ::String > permissionsBitwise;
		bool ban(::String reason);
		::Dynamic ban_dyn();

		bool kick(::String reason);
		::Dynamic kick_dyn();

		bool modify( ::Dynamic d);
		::Dynamic modify_dyn();

		bool setNick(::String n);
		::Dynamic setNick_dyn();

		bool setRoles(::Array< ::String > r);
		::Dynamic setRoles_dyn();

		bool setMute(bool b);
		::Dynamic setMute_dyn();

		bool setDeaf(bool b);
		::Dynamic setDeaf_dyn();

		bool moveVoiceChannel(::String id);
		::Dynamic moveVoiceChannel_dyn();

		bool setTimeout(::String d);
		::Dynamic setTimeout_dyn();

		bool setFlags(int f);
		::Dynamic setFlags_dyn();

};

} // end namespace hxdiscord
} // end namespace types

#endif /* INCLUDED_hxdiscord_types_Member */ 
