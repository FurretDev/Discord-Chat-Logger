// Generated by Haxe 4.3.1
#ifndef INCLUDED_hxdiscord_types_Guild
#define INCLUDED_hxdiscord_types_Guild

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_0696f5e39ea9244f_49_new)
HX_DECLARE_CLASS2(hxdiscord,types,Guild)

namespace hxdiscord{
namespace types{


class HXCPP_CLASS_ATTRIBUTES Guild_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Guild_obj OBJ_;
		Guild_obj();

	public:
		enum { _hx_ClassId = 0x13dd3916 };

		void __construct( ::Dynamic gs);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hxdiscord.types.Guild")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"hxdiscord.types.Guild"); }

		inline static ::hx::ObjectPtr< Guild_obj > __new( ::Dynamic gs) {
			::hx::ObjectPtr< Guild_obj > __this = new Guild_obj();
			__this->__construct(gs);
			return __this;
		}

		inline static ::hx::ObjectPtr< Guild_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic gs) {
			Guild_obj *__this = (Guild_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Guild_obj), true, "hxdiscord.types.Guild"));
			*(void **)__this = Guild_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_0696f5e39ea9244f_49_new)
HXLINE(  50)		( ( ::hxdiscord::types::Guild)(__this) )->id = ( (::String)(gs->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)) );
HXLINE(  51)		( ( ::hxdiscord::types::Guild)(__this) )->name = ( (::String)(gs->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)) );
HXLINE(  52)		( ( ::hxdiscord::types::Guild)(__this) )->icon = ( (::String)(gs->__Field(HX_("icon",79,e7,b2,45),::hx::paccDynamic)) );
HXLINE(  53)		( ( ::hxdiscord::types::Guild)(__this) )->icon_hash = ( (::String)(gs->__Field(HX_("icon_hash",94,ad,af,9e),::hx::paccDynamic)) );
HXLINE(  54)		( ( ::hxdiscord::types::Guild)(__this) )->splash = ( (::String)(gs->__Field(HX_("splash",67,81,98,bf),::hx::paccDynamic)) );
HXLINE(  55)		( ( ::hxdiscord::types::Guild)(__this) )->discovery_splash = ( (::String)(gs->__Field(HX_("discovery_splash",d6,1b,a1,43),::hx::paccDynamic)) );
HXLINE(  56)		( ( ::hxdiscord::types::Guild)(__this) )->owner = ( (bool)(gs->__Field(HX_("owner",33,98,76,38),::hx::paccDynamic)) );
HXLINE(  57)		( ( ::hxdiscord::types::Guild)(__this) )->owner_id = ( (::String)(gs->__Field(HX_("owner_id",a7,bb,b6,8f),::hx::paccDynamic)) );
HXLINE(  58)		( ( ::hxdiscord::types::Guild)(__this) )->permissions = ( (::String)(gs->__Field(HX_("permissions",84,7c,d4,0e),::hx::paccDynamic)) );
HXLINE(  59)		( ( ::hxdiscord::types::Guild)(__this) )->region = ( (::String)(gs->__Field(HX_("region",f4,c0,8c,00),::hx::paccDynamic)) );
HXLINE(  60)		( ( ::hxdiscord::types::Guild)(__this) )->afk_channel_id = ( (::String)(gs->__Field(HX_("afk_channel_id",10,44,86,df),::hx::paccDynamic)) );
HXLINE(  61)		( ( ::hxdiscord::types::Guild)(__this) )->afk_timeout = ( (::String)(gs->__Field(HX_("afk_timeout",08,be,88,af),::hx::paccDynamic)) );
HXLINE(  62)		( ( ::hxdiscord::types::Guild)(__this) )->widget_enabled = ( (bool)(gs->__Field(HX_("widget_enabled",c6,71,77,cd),::hx::paccDynamic)) );
HXLINE(  63)		( ( ::hxdiscord::types::Guild)(__this) )->widget_channel_id = ( (::String)(gs->__Field(HX_("widget_channel_id",f2,78,f2,3d),::hx::paccDynamic)) );
HXLINE(  64)		( ( ::hxdiscord::types::Guild)(__this) )->verification_level = ( (int)(gs->__Field(HX_("verification_level",a0,c6,5e,21),::hx::paccDynamic)) );
HXLINE(  65)		( ( ::hxdiscord::types::Guild)(__this) )->default_message_notifications = ( (int)(gs->__Field(HX_("default_message_notifications",32,f6,18,a8),::hx::paccDynamic)) );
HXLINE(  66)		( ( ::hxdiscord::types::Guild)(__this) )->explicit_content_filter = ( (int)(gs->__Field(HX_("explicit_content_filter",69,c5,90,82),::hx::paccDynamic)) );
HXLINE(  67)		( ( ::hxdiscord::types::Guild)(__this) )->roles = ( (::Array< ::Dynamic>)(gs->__Field(HX_("roles",3d,1c,5f,ed),::hx::paccDynamic)) );
HXLINE(  68)		( ( ::hxdiscord::types::Guild)(__this) )->emojis = ( (::Array< ::Dynamic>)(gs->__Field(HX_("emojis",2d,26,68,6e),::hx::paccDynamic)) );
HXLINE(  69)		( ( ::hxdiscord::types::Guild)(__this) )->features = ( (::Array< ::String >)(gs->__Field(HX_("features",fd,6c,d7,12),::hx::paccDynamic)) );
HXLINE(  70)		( ( ::hxdiscord::types::Guild)(__this) )->mfa_level = ( (int)(gs->__Field(HX_("mfa_level",ad,89,cf,ca),::hx::paccDynamic)) );
HXLINE(  71)		( ( ::hxdiscord::types::Guild)(__this) )->application_id = ( (::String)(gs->__Field(HX_("application_id",aa,b8,27,8d),::hx::paccDynamic)) );
HXLINE(  72)		( ( ::hxdiscord::types::Guild)(__this) )->system_channel_id = ( (::String)(gs->__Field(HX_("system_channel_id",a7,5b,75,76),::hx::paccDynamic)) );
HXLINE(  73)		( ( ::hxdiscord::types::Guild)(__this) )->system_channel_flags = ( (int)(gs->__Field(HX_("system_channel_flags",fb,12,d8,20),::hx::paccDynamic)) );
HXLINE(  74)		( ( ::hxdiscord::types::Guild)(__this) )->rules_channel_id = ( (::String)(gs->__Field(HX_("rules_channel_id",9f,1b,a6,cf),::hx::paccDynamic)) );
HXLINE(  75)		( ( ::hxdiscord::types::Guild)(__this) )->max_presences = ( (int)(gs->__Field(HX_("max_presences",3d,5d,f3,f5),::hx::paccDynamic)) );
HXLINE(  76)		( ( ::hxdiscord::types::Guild)(__this) )->max_members = ( (int)(gs->__Field(HX_("max_members",fe,d4,3c,f0),::hx::paccDynamic)) );
HXLINE(  77)		( ( ::hxdiscord::types::Guild)(__this) )->vanity_url_code = ( (::String)(gs->__Field(HX_("vanity_url_code",11,26,71,bb),::hx::paccDynamic)) );
HXLINE(  78)		( ( ::hxdiscord::types::Guild)(__this) )->description = ( (::String)(gs->__Field(HX_("description",fc,08,1d,5f),::hx::paccDynamic)) );
HXLINE(  79)		( ( ::hxdiscord::types::Guild)(__this) )->banner = ( (::String)(gs->__Field(HX_("banner",ec,e9,e0,51),::hx::paccDynamic)) );
HXLINE(  80)		( ( ::hxdiscord::types::Guild)(__this) )->premium_tier = ( (int)(gs->__Field(HX_("premium_tier",4a,03,eb,e0),::hx::paccDynamic)) );
HXLINE(  81)		( ( ::hxdiscord::types::Guild)(__this) )->premium_subscription_count = ( (int)(gs->__Field(HX_("premium_subscription_count",15,f3,f2,23),::hx::paccDynamic)) );
HXLINE(  82)		( ( ::hxdiscord::types::Guild)(__this) )->preferred_locale = ( (::String)(gs->__Field(HX_("preferred_locale",18,f3,17,64),::hx::paccDynamic)) );
HXLINE(  83)		( ( ::hxdiscord::types::Guild)(__this) )->public_updates_channel_id = ( (::String)(gs->__Field(HX_("public_updates_channel_id",42,b9,a5,76),::hx::paccDynamic)) );
HXLINE(  84)		( ( ::hxdiscord::types::Guild)(__this) )->max_video_channel_users = ( (int)(gs->__Field(HX_("max_video_channel_users",ad,bd,ee,bb),::hx::paccDynamic)) );
HXLINE(  85)		( ( ::hxdiscord::types::Guild)(__this) )->approximate_member_count = ( (int)(gs->__Field(HX_("approximate_member_count",f5,4f,a5,e8),::hx::paccDynamic)) );
HXLINE(  86)		( ( ::hxdiscord::types::Guild)(__this) )->approximate_presence_count = ( (int)(gs->__Field(HX_("approximate_presence_count",56,37,16,d6),::hx::paccDynamic)) );
HXLINE(  87)		( ( ::hxdiscord::types::Guild)(__this) )->welcome_screen = gs->__Field(HX_("welcome_screen",a9,00,18,0e),::hx::paccDynamic);
HXLINE(  88)		( ( ::hxdiscord::types::Guild)(__this) )->nsfw_level = ( (int)(gs->__Field(HX_("nsfw_level",1b,b6,4f,ef),::hx::paccDynamic)) );
HXLINE(  89)		( ( ::hxdiscord::types::Guild)(__this) )->stickers = ( (::Array< ::Dynamic>)(gs->__Field(HX_("stickers",16,40,8e,cc),::hx::paccDynamic)) );
HXLINE(  90)		( ( ::hxdiscord::types::Guild)(__this) )->premium_progress_bar_enabled = ( (bool)(gs->__Field(HX_("premium_progress_bar_enabled",2b,9e,09,8b),::hx::paccDynamic)) );
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Guild_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Guild",93,31,19,2f); }

		::String id;
		::String name;
		::String icon;
		::String icon_hash;
		::String splash;
		::String discovery_splash;
		bool owner;
		::String owner_id;
		::String permissions;
		::String region;
		::String afk_channel_id;
		::String afk_timeout;
		bool widget_enabled;
		::String widget_channel_id;
		int verification_level;
		int default_message_notifications;
		int explicit_content_filter;
		::Array< ::Dynamic> roles;
		::Array< ::Dynamic> emojis;
		::Array< ::String > features;
		int mfa_level;
		::String application_id;
		::String system_channel_id;
		int system_channel_flags;
		::String rules_channel_id;
		int max_presences;
		int max_members;
		::String vanity_url_code;
		::String description;
		::String banner;
		int premium_tier;
		int premium_subscription_count;
		::String preferred_locale;
		::String public_updates_channel_id;
		int max_video_channel_users;
		int approximate_member_count;
		int approximate_presence_count;
		 ::Dynamic welcome_screen;
		int nsfw_level;
		::Array< ::Dynamic> stickers;
		bool premium_progress_bar_enabled;
};

} // end namespace hxdiscord
} // end namespace types

#endif /* INCLUDED_hxdiscord_types_Guild */ 
