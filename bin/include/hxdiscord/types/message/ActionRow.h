// Generated by Haxe 4.3.1
#ifndef INCLUDED_hxdiscord_types_message_ActionRow
#define INCLUDED_hxdiscord_types_message_ActionRow

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_7887fe3be24383e5_6_new)
HX_DECLARE_CLASS3(hxdiscord,types,message,ActionRow)

namespace hxdiscord{
namespace types{
namespace message{


class HXCPP_CLASS_ATTRIBUTES ActionRow_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef ActionRow_obj OBJ_;
		ActionRow_obj();

	public:
		enum { _hx_ClassId = 0x4e2bb422 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hxdiscord.types.message.ActionRow")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"hxdiscord.types.message.ActionRow"); }

		inline static ::hx::ObjectPtr< ActionRow_obj > __new() {
			::hx::ObjectPtr< ActionRow_obj > __this = new ActionRow_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< ActionRow_obj > __alloc(::hx::Ctx *_hx_ctx) {
			ActionRow_obj *__this = (ActionRow_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ActionRow_obj), true, "hxdiscord.types.message.ActionRow"));
			*(void **)__this = ActionRow_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_7887fe3be24383e5_6_new)
HXLINE(   8)		( ( ::hxdiscord::types::message::ActionRow)(__this) )->components = ::cpp::VirtualArray_obj::__new();
HXLINE(   7)		( ( ::hxdiscord::types::message::ActionRow)(__this) )->type = 1;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ActionRow_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ActionRow",e4,f3,6e,b3); }

		int type;
		::cpp::VirtualArray components;
		void addComponent( ::Dynamic comp);
		::Dynamic addComponent_dyn();

};

} // end namespace hxdiscord
} // end namespace types
} // end namespace message

#endif /* INCLUDED_hxdiscord_types_message_ActionRow */ 
