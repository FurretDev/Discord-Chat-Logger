// Generated by Haxe 4.3.1
#ifndef INCLUDED_hxdiscord_types_Interaction
#define INCLUDED_hxdiscord_types_Interaction

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(hxdiscord,DiscordClient)
HX_DECLARE_CLASS2(hxdiscord,types,Interaction)
HX_DECLARE_CLASS3(hxdiscord,types,message,ActionRow)

namespace hxdiscord{
namespace types{


class HXCPP_CLASS_ATTRIBUTES Interaction_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Interaction_obj OBJ_;
		Interaction_obj();

	public:
		enum { _hx_ClassId = 0x4e0adb75 };

		void __construct( ::Dynamic ins, ::hxdiscord::DiscordClient _client, ::Dynamic parsedJSON);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hxdiscord.types.Interaction")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"hxdiscord.types.Interaction"); }
		static ::hx::ObjectPtr< Interaction_obj > __new( ::Dynamic ins, ::hxdiscord::DiscordClient _client, ::Dynamic parsedJSON);
		static ::hx::ObjectPtr< Interaction_obj > __alloc(::hx::Ctx *_hx_ctx, ::Dynamic ins, ::hxdiscord::DiscordClient _client, ::Dynamic parsedJSON);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Interaction_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Interaction",b2,cf,8b,20); }

		::String username;
		int public_flags;
		::String id;
		::String discriminator;
		 ::Dynamic avatar_decoration;
		::String avatar;
		 ::Dynamic user;
		::String channel_id;
		::String name;
		 ::Dynamic member;
		::String intId;
		bool wasThinking;
		::String guild_id;
		::cpp::VirtualArray components;
		::cpp::VirtualArray options;
		 ::Dynamic dataOptions;
		int type;
		::String token;
		 ::Dynamic data;
		void reply( ::Dynamic ic, ::Dynamic ephemeral);
		::Dynamic reply_dyn();

		void editComponent( ::Dynamic ic);
		::Dynamic editComponent_dyn();

		void showModal(::String title,::String custom_id,::Array< ::Dynamic> imc);
		::Dynamic showModal_dyn();

		 ::Dynamic getValue(::String optionName);
		::Dynamic getValue_dyn();

		void think();
		::Dynamic think_dyn();

		void edit( ::Dynamic ic);
		::Dynamic edit_dyn();

};

} // end namespace hxdiscord
} // end namespace types

#endif /* INCLUDED_hxdiscord_types_Interaction */ 
