// Generated by Haxe 4.3.1
#ifndef INCLUDED_haxe_ws__OpCode_OpCode_Impl_
#define INCLUDED_haxe_ws__OpCode_OpCode_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(haxe,ws,_OpCode,OpCode_Impl_)

namespace haxe{
namespace ws{
namespace _OpCode{


class HXCPP_CLASS_ATTRIBUTES OpCode_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef OpCode_Impl__obj OBJ_;
		OpCode_Impl__obj();

	public:
		enum { _hx_ClassId = 0x2163cf89 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxe.ws._OpCode.OpCode_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"haxe.ws._OpCode.OpCode_Impl_"); }

		inline static ::hx::ObjectPtr< OpCode_Impl__obj > __new() {
			::hx::ObjectPtr< OpCode_Impl__obj > __this = new OpCode_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< OpCode_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			OpCode_Impl__obj *__this = (OpCode_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(OpCode_Impl__obj), false, "haxe.ws._OpCode.OpCode_Impl_"));
			*(void **)__this = OpCode_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OpCode_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OpCode_Impl_",2e,52,c1,81); }

		static void __boot();
		static int Continuation;
		static int Text;
		static int Binary;
		static int Close;
		static int Ping;
		static int Pong;
		static int toInt(int this1);
		static ::Dynamic toInt_dyn();

};

} // end namespace haxe
} // end namespace ws
} // end namespace _OpCode

#endif /* INCLUDED_haxe_ws__OpCode_OpCode_Impl_ */ 
