// Generated by Haxe 4.3.1
#ifndef INCLUDED_haxe_ws__Types_BinaryType_Impl_
#define INCLUDED_haxe_ws__Types_BinaryType_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(haxe,ws,_Types,BinaryType_Impl_)

namespace haxe{
namespace ws{
namespace _Types{


class HXCPP_CLASS_ATTRIBUTES BinaryType_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef BinaryType_Impl__obj OBJ_;
		BinaryType_Impl__obj();

	public:
		enum { _hx_ClassId = 0x345fa137 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="haxe.ws._Types.BinaryType_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"haxe.ws._Types.BinaryType_Impl_"); }

		inline static ::hx::ObjectPtr< BinaryType_Impl__obj > __new() {
			::hx::ObjectPtr< BinaryType_Impl__obj > __this = new BinaryType_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< BinaryType_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			BinaryType_Impl__obj *__this = (BinaryType_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(BinaryType_Impl__obj), false, "haxe.ws._Types.BinaryType_Impl_"));
			*(void **)__this = BinaryType_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~BinaryType_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("BinaryType_Impl_",5b,fe,84,41); }

		static void __boot();
		static ::String ARRAYBUFFER;
		static ::String toString(::String this1);
		static ::Dynamic toString_dyn();

};

} // end namespace haxe
} // end namespace ws
} // end namespace _Types

#endif /* INCLUDED_haxe_ws__Types_BinaryType_Impl_ */ 
